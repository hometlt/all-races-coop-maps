//==================================================================================================
// 
// Generated Map Script
// 
// Name:   [ARC] Evolving Threat
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibCOMI"
include "Lib37CC0EF2"
include "aiF917F4D7"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libCOMI_InitLib();
    lib37CC0EF2_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_pLAYER_01_USER = 1;
const int gv_pLAYER_02_USER = 2;
const int gv_pLAYER_03_ENEMY = 3;
const int gv_pLAYER_04_ENEMY = 4;
const int gv_pLAYER_05_ALLY = 5;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
playergroup gv_eNEMY_GROUP;
timer gv_game_Lab_Start_Timer;
int gv_game_Lab_Start_Timer_Window;
fixed gv_game_Lab_Start_Activation_Time;
unitgroup gv_final_Battle_Group;
unit gv_dregg;
int gv_dregg_Ping;
region gv_dregg_Channel_Area;
bool gv_dregg_Is_Channel;
bool gv_dregg_Is_Evolving;
bool gv_dregg_Is_Attacking;
bool gv_dregg_Has_Fleed;
bool gv_dregg_Has_Won;
bool gv_dregg_Ready_Final_Battle;
int gv_dregg_Flee_Time;
int gv_dregg_Flee_Recovery_Time;
unit gv_syg_Scout_Left;
unit gv_syg_Scout_Top_Left;
unit gv_syg_Scout_Mid;
unit gv_syg_Scout_Right;
unit gv_syg_Scout_Top_Right;
int gv_obj_Prevent_Evolution;
int gv_obj_Overload_Labs;
int gv_obj_Overload_Labs_Progress;
int gv_obj_Destroy_Dregg;
int[5][4] gv_obj_Ping;
text gv_lab_Overload_Text;
int gv_lab_Overload_Time;
int gv_lab_Wave_Time_01;
int gv_lab_Wave_Time_02;
int gv_lab_Wave_Time_03;
int gv_lab_Wave_Time_Air;
unit gv_lab01_Stasis;
int gv_lab01_Channel_Time;
unit gv_lab02_Stasis;
int gv_lab02_Channel_Time;
unit gv_lab03_Stasis;
int gv_lab03_Channel_Time;
unit gv_lab04_Stasis;
int gv_lab04_Channel_Time;
int gv_progress_Bar_Evolution;
int gv_progress_Bar_Max;
int[3] gv_bonus_Objective;
unit[3] gv_bonus_Databot;
unitgroup[3] gv_bonus_Escort_Group;
int[3] gv_bonus_Ping;
int gv_bonus_Recovery_Time;
point[3] gv_bonus_Escape_Point;
bool[3] gv_bonus_Databot_Escaped;
fixed gv_transmission_Time_Base;
fixed gv_transmission_Time_Short;
fixed gv_transmission_Portrait_Base;
fixed gv_transmission_Portrait_Short;
bool gv_game_Over;
unitgroup gv_defeat_Lab_Research_Group;
point gv_victory_Point;
point gv_attack_Wave_Wave05_Path;
point gv_attack_Wave_Wave05_Spawn;

void InitGlobals () {
    int init_i;
    int init_j;

    gv_eNEMY_GROUP = PlayerGroupEmpty();
    gv_game_Lab_Start_Timer = TimerCreate();
    gv_game_Lab_Start_Timer_Window = c_timerWindowNone;
    gv_game_Lab_Start_Activation_Time = (5.5 * 60);
    gv_final_Battle_Group = UnitGroupEmpty();
    gv_dregg_Ping = c_invalidPingId;
    gv_dregg_Flee_Recovery_Time = 80;
    gv_obj_Prevent_Evolution = c_invalidObjectiveId;
    gv_obj_Overload_Labs = c_invalidObjectiveId;
    gv_obj_Destroy_Dregg = c_invalidObjectiveId;
    for (init_i = 0; init_i <= 4; init_i += 1) {
        for (init_j = 0; init_j <= 3; init_j += 1) {
            gv_obj_Ping[init_i][init_j] = c_invalidPingId;
        }
    }
    gv_lab_Overload_Text = StringExternal("Param/Value/EF5614D3");
    gv_lab_Overload_Time = (2 * 60);
    gv_lab_Wave_Time_01 = 20;
    gv_lab_Wave_Time_02 = 50;
    gv_lab_Wave_Time_03 = 80;
    gv_lab_Wave_Time_Air = 60;
    gv_progress_Bar_Max = (15 * 60);
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonus_Objective[init_i] = c_invalidObjectiveId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonus_Escort_Group[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonus_Ping[init_i] = c_invalidPingId;
    }
    gv_bonus_Recovery_Time = 35;
    gv_transmission_Time_Base = 10.0;
    gv_transmission_Time_Short = 5.0;
    gv_transmission_Portrait_Base = 3.8;
    gv_transmission_Portrait_Short = 3.0;
    gv_defeat_Lab_Research_Group = UnitGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time);
int gf_GetDreggResourceBucketET ();
int gf_GetDreggTechLevelET ();
bool gf_PlayersInLabET (region lp_lab);
bool gf_EnemiesInLabET (region lp_lab);
string gf_ConvertTimertoString (fixed lp_time);
unitgroup gf_CreateSubwayDropForcePartolET (int lp_resourceBucket, int lp_techLevel, region lp_spawnExitRegion, point lp_rallyPoint);
bool gf_CreateAirDropForcePartolET (int lp_resourceBucket, int lp_techLevel, region lp_spawnExitRegion, point lp_rallyPoint);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Bankpreloading;
trigger gt_Init01LoadData;
trigger gt_Init02Players;
trigger gt_Init03LoadingComplete;
trigger gt_Init05Units;
trigger gt_Init09Doodads;
trigger gt_AIStart;
trigger gt_GameStartQ;
trigger gt_GameScoutsGathedData;
trigger gt_GameLab01Activation;
trigger gt_GameLab02Activation;
trigger gt_GameLab03Activation;
trigger gt_GameLab04Activation;
trigger gt_GameDreggBattleQ;
trigger gt_GameLabStartTimer;
trigger gt_GameLabStartTimerHide;
trigger gt_MapStartSpawnQ;
trigger gt_MapStartSpawnLabQ;
trigger gt_MapUnitDroppedFromHercules;
trigger gt_MapSubway01Open;
trigger gt_MapSubway01Close;
trigger gt_MapSubway02Open;
trigger gt_MapSubway02Close;
trigger gt_MapSubway03Open;
trigger gt_MapSubway03Close;
trigger gt_MapSubway04Open;
trigger gt_MapSubway04Close;
trigger gt_MapSubway05Open;
trigger gt_MapSubway05Close;
trigger gt_MapAirGate01Open;
trigger gt_MapAirGate01Close;
trigger gt_MapAirGate02Open;
trigger gt_MapAirGate02Close;
trigger gt_MapLab01Gate01Subway03;
trigger gt_MapLab01Rally00Subway03;
trigger gt_MapLab01Rally01Subway02;
trigger gt_MapLab01Rally02Subway05;
trigger gt_MapLab01Rally03Subway03;
trigger gt_MapLab01Reinforce01AirLeft;
trigger gt_MapLab01Reinforce02AirRight;
trigger gt_MapLab01ReinforceAmon;
trigger gt_MapLab02Gate01Subway02;
trigger gt_MapLab02Gate02Subway02;
trigger gt_MapLab02Rally00Subway02;
trigger gt_MapLab02Rally01Subway01;
trigger gt_MapLab02Rally02Subway01;
trigger gt_MapLab02Rally03Subway02;
trigger gt_MapLab02Reinforce01AirLeft;
trigger gt_MapLab02Reinforce02AirRight;
trigger gt_MapLab02ReinforceAmon;
trigger gt_MapLab03Gate01Subway05;
trigger gt_MapLab03Gate02Subway05;
trigger gt_MapLab03Rally00Subway05;
trigger gt_MapLab03Rally01Subway04;
trigger gt_MapLab03Rally02Subway05;
trigger gt_MapLab03Rally03Subway04;
trigger gt_MapLab03Reinforce01AirLeft;
trigger gt_MapLab03Reinforce02AirRight;
trigger gt_MapLab03ReinforceAmon;
trigger gt_MapLab04Lock;
trigger gt_MapLab04Bridge01Subway01;
trigger gt_MapLab04Bridge01ReinforceAmon;
trigger gt_MapLab04Bridge02Subway04;
trigger gt_MapLab04Bridge02ReinforceAmon;
trigger gt_MapLab04Guard01Subway01;
trigger gt_MapLab04Guard02Subway01;
trigger gt_MapLab04Guard03Subway04;
trigger gt_MapLab04Guard04Subway04;
trigger gt_MapLab04Reinforce01AirLeft;
trigger gt_MapLab04Reinforce02AirRight;
trigger gt_MapLab04ReinforceAmon;
trigger gt_FinalBattleAmon01;
trigger gt_FinalBattleAmon02;
trigger gt_FinalBattleAmon03;
trigger gt_FinalBattleAmon04;
trigger gt_FinalBattleAttackPlayers;
trigger gt_DreggQ;
trigger gt_DreggCreate;
trigger gt_DreggRespawn;
trigger gt_DreggLabMove;
trigger gt_DreggPing;
trigger gt_DreggPingDestroy;
trigger gt_DreggSetKillableState;
trigger gt_DreggCannotDie;
trigger gt_DreggDied;
trigger gt_DreggFleesEffect;
trigger gt_DreggHasFleeandHealing;
trigger gt_DreggFleeforFinalBattle;
trigger gt_DreggFleeMove;
trigger gt_DreggIssueOrder;
trigger gt_DreggStayInLabChannel;
trigger gt_DreggEvolve;
trigger gt_DreggEvolveEffect;
trigger gt_DreggAttackQ;
trigger gt_DreggAttackSetup;
trigger gt_DreggAttackPlayers;
trigger gt_DreggSetRank2;
trigger gt_DreggSetRank3;
trigger gt_DreggSetRank4;
trigger gt_DreggSetStateChannel;
trigger gt_DreggSetStateAttacking;
trigger gt_DreggSetStateFleed;
trigger gt_DreggSetStateWon;
trigger gt_DreggSetStateFinalBattle;
trigger gt_DreggSetStateEvolvingorFinalBattle;
trigger gt_SygScoutSpawn;
trigger gt_SygScoutLeft;
trigger gt_SygScoutTopLeft;
trigger gt_SygScoutMid;
trigger gt_SygScoutRight;
trigger gt_SygScoutTopRight;
trigger gt_SygScoutAllianceTempOn;
trigger gt_SygScoutAllianceTempOff;
trigger gt_SygScoutExitLeftSubway02;
trigger gt_SygScoutExitTopLeftSubway01;
trigger gt_SygScoutExitMidSubway03;
trigger gt_SygScoutExitRightSubway05;
trigger gt_SygScoutExitTopRightSubway04;
trigger gt_SygScoutForceLabActivation;
trigger gt_MainObjOverloadLabsSetup;
trigger gt_MainObjOverloadLabsUpdate;
trigger gt_MainObjOverloadLabCompleted;
trigger gt_MainObjOverloadLabHide;
trigger gt_MainObjDreggEvolutionSetup;
trigger gt_MainObjDreggEvolutionCompleted;
trigger gt_MainObjDreggEvolutionFailed;
trigger gt_MainObjDreggEvolutionHide;
trigger gt_MainObjDestroyDreggSetup;
trigger gt_MainObjDestroyDreggComplete;
trigger gt_MarkBridgeControls;
trigger gt_MarkLab01;
trigger gt_MarkLab02;
trigger gt_MarkLab03;
trigger gt_MarkLab04;
trigger gt_Lab01BridgeControlDestroyed;
trigger gt_Lab01ScoutSabotage;
trigger gt_Lab01Overload;
trigger gt_Lab01OverloadComplete;
trigger gt_Lab01DestroyStasisTube;
trigger gt_Lab01CleanDoodads;
trigger gt_Lab01ReinforceWavesQ;
trigger gt_Lab01ReinforceWave01Q;
trigger gt_Lab01ReinforceWavesGate;
trigger gt_Lab01ReinforceWave01Subway03;
trigger gt_Lab01ReinforceWave01Subway04;
trigger gt_Lab01ReinforceWave02Q;
trigger gt_Lab01ReinforceWave02Subway03;
trigger gt_Lab01ReinforceWave02Subway04;
trigger gt_Lab01ReinforceWave03Q;
trigger gt_Lab01ReinforceWave03Subway03;
trigger gt_Lab01ReinforceWave03Subway04;
trigger gt_Lab01ReinforceWaveAirQ;
trigger gt_Lab01ReinforceWaveAirLeft;
trigger gt_Lab01ReinforceWaveAirRight;
trigger gt_Lab02BridgeControlDestroyed;
trigger gt_Lab02ScoutSabotage;
trigger gt_Lab02Overload;
trigger gt_Lab02OverloadComplete;
trigger gt_Lab02DestroyStasisTube;
trigger gt_Lab02CleanDoodads;
trigger gt_Lab02ReinforceWavesQ;
trigger gt_Lab02ReinforceWave01Q;
trigger gt_Lab02ReinforceWavesGate;
trigger gt_Lab02ReinforceWave01Subway01;
trigger gt_Lab02ReinforceWave01Subway02;
trigger gt_Lab02ReinforceWave02Q;
trigger gt_Lab02ReinforceWave02Subway01;
trigger gt_Lab02ReinforceWave02Subway02;
trigger gt_Lab02ReinforceWave03Q;
trigger gt_Lab02ReinforceWave03Subway01;
trigger gt_Lab02ReinforceWave03Subway02;
trigger gt_Lab02ReinforceWaveAirQ;
trigger gt_Lab02ReinforceWaveAirLeft;
trigger gt_Lab02ReinforceWaveAirRight;
trigger gt_Lab03BridgeControlDestroyed;
trigger gt_Lab03ScoutSabotage;
trigger gt_Lab03Overload;
trigger gt_Lab03OverloadComplete;
trigger gt_Lab03DestroyStasisTube;
trigger gt_Lab03CleanDoodads;
trigger gt_Lab03ReinforceWavesQ;
trigger gt_Lab03ReinforceWave01Q;
trigger gt_Lab03ReinforceWavesGate;
trigger gt_Lab03ReinforceWave01Subway04;
trigger gt_Lab03ReinforceWave01Subway05;
trigger gt_Lab03ReinforceWave02Q;
trigger gt_Lab03ReinforceWave02Subway04;
trigger gt_Lab03ReinforceWave02Subway05;
trigger gt_Lab03ReinforceWave03Q;
trigger gt_Lab03ReinforceWave03Subway04;
trigger gt_Lab03ReinforceWave03Subway05;
trigger gt_Lab03ReinforceWaveAirQ;
trigger gt_Lab03ReinforceWaveAirLeft;
trigger gt_Lab03ReinforceWaveAirRight;
trigger gt_Lab04BridgeControlDestroyed1;
trigger gt_Lab04BridgeControlDestroyed2;
trigger gt_Lab04ScoutSabotage;
trigger gt_Lab04Overload;
trigger gt_Lab04OverloadComplete;
trigger gt_Lab04DestroyStasisTube;
trigger gt_Lab04CleanDoodads;
trigger gt_Lab04ReinforceWavesQ;
trigger gt_Lab04ReinforceWave01Q;
trigger gt_Lab04ReinforceWavesGate01;
trigger gt_Lab04ReinforceWavesGate02;
trigger gt_Lab04ReinforceWave01Subway01;
trigger gt_Lab04ReinforceWave01Subway04;
trigger gt_Lab04ReinforceWave02Q;
trigger gt_Lab04ReinforceWave02Subway01;
trigger gt_Lab04ReinforceWave02Subway04;
trigger gt_Lab04ReinforceWave03Q;
trigger gt_Lab04ReinforceWave03Subway01;
trigger gt_Lab04ReinforceWave03Subway04;
trigger gt_Lab04ReinforceWaveAirQ;
trigger gt_Lab04ReinforceWaveAirLeft;
trigger gt_Lab04ReinforceWaveAirRight;
trigger gt_ProgressBarDisplay;
trigger gt_ProgressBarUpdate;
trigger gt_ProgressBarHide;
trigger gt_BonusDatabot01SetupQ;
trigger gt_BonusDatabot01SpawnSubway04;
trigger gt_BonusDatabot01SetupObjective;
trigger gt_BonusDatabot01SetupPing;
trigger gt_BonusDatabot01DatabotKilled;
trigger gt_BonusDatabot01DatabotMovetoConsole;
trigger gt_BonusDatabot01DatabotRecoverData;
trigger gt_BonusDatabot01DatabotEscaping;
trigger gt_BonusDatabot01DatabotEscaped;
trigger gt_BonusDatabot01EscortDatabot;
trigger gt_BonusDatabot01EscortRetreat;
trigger gt_BonusDatabot02SetupQ;
trigger gt_BonusDatabot02SpawnSubway01;
trigger gt_BonusDatabot02SetupObjective;
trigger gt_BonusDatabot02SetupPing;
trigger gt_BonusDatabot02DatabotKilled;
trigger gt_BonusDatabot02DatabotMovetoConsole;
trigger gt_BonusDatabot02DatabotRecoverData;
trigger gt_BonusDatabot02DatabotEscaping;
trigger gt_BonusDatabot02DatabotEscaped;
trigger gt_BonusDatabot02EscortDatabot;
trigger gt_BonusDatabot02EscortRetreat;
trigger gt_TransmissionStartIntro;
trigger gt_TransmissionScoutSending;
trigger gt_TransmissionScoutInside;
trigger gt_TransmissionScoutMarkGates;
trigger gt_TransmissionScoutLabs;
trigger gt_TransmissionScoutSabotage;
trigger gt_TransmissionDreggSpawned;
trigger gt_TransmissionEnemyAttackingQ;
trigger gt_TransmissionLabDestroyed;
trigger gt_TransmissionDreggFlees;
trigger gt_TransmissionDreggFinalBattleSetup;
trigger gt_TransmissionDreggFinalBattle;
trigger gt_TransmissionBonusDatabot;
trigger gt_TransmissionBonusDatabotDestroyed;
trigger gt_TransmissionBonusDatabotFailed;
trigger gt_TransmissionVictory;
trigger gt_TransmissionDefeatAlliedDestroyed;
trigger gt_TransmissionDefeatDreggFullyEvolved;
trigger gt_Victory;
trigger gt_DefeatAlliedBaseDestroyed;
trigger gt_DefeatDreggFullyEvolved;
trigger gt_Defeat;
trigger gt_AIAttackWaves;
trigger gt_AttackWave01;
trigger gt_AttackWave02;
trigger gt_AttackWave03;
trigger gt_AttackWave04;
trigger gt_AttackWave05;
trigger gt_AttackWave06;
trigger gt_AttackWave07;

//--------------------------------------------------------------------------------------------------
// Custom AI Functions
//--------------------------------------------------------------------------------------------------
string[17] cai_playerAI;

//--------------------------------------------------------------------------------------------------
void InitCustomAI () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        cai_playerAI[init_i] = null;
    }
}

//--------------------------------------------------------------------------------------------------
void cai_start (string ai, int p) {
    if (p < 0 || p >= 16) {
        return;
    }
    cai_playerAI[p] = ai;

    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_start(p); }
}

//--------------------------------------------------------------------------------------------------
void cai_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_setDefGather(p, val); }
}

//--------------------------------------------------------------------------------------------------
string cai_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_getCustomData(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_getLastWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_waves_run (int p, playergroup target) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_waves_run(p, target); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_waves_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_stop (string ai) {
    if (ai == "aiF917F4D7") { aiF917F4D7_waves_stop(); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_run (int w, int p, playergroup target, bool wait) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_wave_run(w, p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_enable (int w, int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_wave_enable(w, p, val); }
}

//--------------------------------------------------------------------------------------------------
bool cai_wave_isEnabled (int w, int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_isEnabled(w, p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup cai_wave_createdUnits (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_createdUnits(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_wave_createdWave (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_createdWave(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_startall () {
    AICampaignStart(3);
    AICampaignStart(4);
    AICampaignStart(5);
    AICampaignStart(7);
}

//--------------------------------------------------------------------------------------------------
void cai_runall () {
    playergroup target = PlayerGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
trigger auto_gf_RunAttackWaveatMissionTime_Trigger = null;
trigger auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
fixed auto_gf_RunAttackWaveatMissionTime_lp_time;

void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time) {
    auto_gf_RunAttackWaveatMissionTime_lp_attackWave = lp_attackWave;
    auto_gf_RunAttackWaveatMissionTime_lp_time = lp_time;

    if (auto_gf_RunAttackWaveatMissionTime_Trigger == null) {
        auto_gf_RunAttackWaveatMissionTime_Trigger = TriggerCreate("auto_gf_RunAttackWaveatMissionTime_TriggerFunc");
    }

    TriggerExecute(auto_gf_RunAttackWaveatMissionTime_Trigger, false, false);
}

bool auto_gf_RunAttackWaveatMissionTime_TriggerFunc (bool testConds, bool runActions) {
    trigger lp_attackWave = auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
    fixed lp_time = auto_gf_RunAttackWaveatMissionTime_lp_time;

    // Automatic Variable Declarations
    // Implementation
    while (!((lp_time <= GameGetMissionTime()))) {
        Wait(0.3, c_timeAI);
    }
    if ((libCOMI_gf_GameIsOver() == false)) {
        TriggerExecute(lp_attackWave, true, false);
    }

    return true;
}

int gf_GetDreggResourceBucketET () {
    // Variable Declarations
    fixed lv_smallerTime;
    fixed lv_smallTime;
    fixed lv_mediumTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_smallerTime = (8.0 * 60);
    lv_smallTime = (12.0 * 60);
    lv_mediumTime = (18.0 * 60);

    // Implementation
    if ((GameGetMissionTime() >= lv_mediumTime)) {
        return libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    }

    if ((GameGetMissionTime() >= lv_smallTime)) {
        return libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    }

    if ((GameGetMissionTime() >= lv_smallerTime)) {
        return libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    }

    return libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
}

int gf_GetDreggTechLevelET () {
    // Variable Declarations
    fixed lv_tech04Time;
    fixed lv_tech05Time;
    fixed lv_tech06Time;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tech04Time = (8.0 * 60);
    lv_tech05Time = (14.0 * 60);
    lv_tech06Time = (22.0 * 60);

    // Implementation
    if ((GameGetMissionTime() >= lv_tech06Time)) {
        return libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    }

    if ((GameGetMissionTime() >= lv_tech05Time)) {
        return libCOMI_ge_CoopAITechLevelBuckets__5Late;
    }

    if ((GameGetMissionTime() >= lv_tech04Time)) {
        return libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    }

    return libCOMI_ge_CoopAITechLevelBuckets__3Mid;
}

bool gf_PlayersInLabET (region lp_lab) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitCount(null, gv_pLAYER_01_USER, lp_lab, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount(null, gv_pLAYER_02_USER, lp_lab, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
        return true;
    }
    else {
        return false;
    }
}

bool gf_EnemiesInLabET (region lp_lab) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitCount(null, gv_pLAYER_03_ENEMY, lp_lab, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount(null, gv_pLAYER_04_ENEMY, lp_lab, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
        return true;
    }
    else {
        return false;
    }
}

string gf_ConvertTimertoString (fixed lp_time) {
    // Variable Declarations
    int lv_seconds;
    int lv_minutes;
    string lv_secondsString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_secondsString = "";

    // Implementation
    lv_seconds = FixedToInt(lp_time);
    while ((lv_seconds >= 60)) {
        lv_minutes += 1;
        lv_seconds -= 60;
    }
    if ((lv_seconds < 10)) {
        lv_secondsString = ("0" + IntToString(lv_seconds));
    }
    else {
        lv_secondsString = IntToString(lv_seconds);
    }
    return (IntToString(lv_minutes) + ":" + lv_secondsString);
}

unitgroup gf_CreateSubwayDropForcePartolET (int lp_resourceBucket, int lp_techLevel, region lp_spawnExitRegion, point lp_rallyPoint) {
    // Variable Declarations
    unitgroup lv_partol;
    unitgroup lv_transports;

    // Automatic Variable Declarations
    unitgroup auto752E166C_g;
    int auto752E166C_u;
    unit auto752E166C_var;
    unitgroup auto191F337F_g;
    int auto191F337F_u;
    unit auto191F337F_var;

    // Variable Initialization
    lv_partol = UnitGroupEmpty();
    lv_transports = UnitGroupEmpty();

    // Implementation
    libCOMI_gf_CreateCoopDropForceinTransportsatLocationandWaitforthemtospawn(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lp_resourceBucket, lp_techLevel, RegionGetCenter(lp_spawnExitRegion), "MilitarizedTransport");
    lv_partol = libCOMI_gf_LastCreatedCoopAttackForce();
    auto752E166C_g = lv_partol;
    auto752E166C_u = UnitGroupCount(auto752E166C_g, c_unitCountAll);
    for (;; auto752E166C_u -= 1) {
        auto752E166C_var = UnitGroupUnitFromEnd(auto752E166C_g, auto752E166C_u);
        if (auto752E166C_var == null) { break; }
        if ((UnitGetType(auto752E166C_var) == "MilitarizedTransport")) {
            UnitGroupRemove(lv_partol, auto752E166C_var);
            UnitGroupAdd(lv_transports, auto752E166C_var);
            UnitIssueOrder(auto752E166C_var, OrderTargetingPoint(AbilityCommand("LoadUnloadTransport", 2), lp_rallyPoint), c_orderQueueReplace);
        }
        else {
            UnitIssueOrder(auto752E166C_var, OrderTargetingPoint(AbilityCommand("attack", 0), lp_rallyPoint), c_orderQueueReplace);
        }
    }
    if ((UnitGroupCount(lv_transports, c_unitCountAlive) > 0)) {
        while ((UnitGroupCount(lv_transports, c_unitCountAlive) > 0)) {
            auto191F337F_g = lv_transports;
            auto191F337F_u = UnitGroupCount(auto191F337F_g, c_unitCountAll);
            for (;; auto191F337F_u -= 1) {
                auto191F337F_var = UnitGroupUnitFromEnd(auto191F337F_g, auto191F337F_u);
                if (auto191F337F_var == null) { break; }
                if ((UnitCargoValue(auto191F337F_var, c_unitCargoUnitCount) <= 0)) {
                    if ((libNtve_gf_UnitInRegion(auto191F337F_var, lp_spawnExitRegion) == true)) {
                        UnitRemove(auto191F337F_var);
                    }
                    else {
                        UnitIssueOrder(auto191F337F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(lp_spawnExitRegion)), c_orderQueueReplace);
                    }
                }

            }
            Wait(0.5, c_timeGame);
        }
    }
    else {
        Wait(3.0, c_timeGame);
    }
    return lv_partol;
}

bool gf_CreateAirDropForcePartolET (int lp_resourceBucket, int lp_techLevel, region lp_spawnExitRegion, point lp_rallyPoint) {
    // Variable Declarations
    unitgroup lv_partol;
    unitgroup lv_transports;

    // Automatic Variable Declarations
    unitgroup auto3E2B77C5_g;
    int auto3E2B77C5_u;
    unit auto3E2B77C5_var;
    unitgroup auto47B1CE3B_g;
    int auto47B1CE3B_u;
    unit auto47B1CE3B_var;
    unitgroup auto64270B34_g;
    int auto64270B34_u;
    unit auto64270B34_var;
    unitgroup auto611BEB92_g;
    int auto611BEB92_u;
    unit auto611BEB92_var;

    // Variable Initialization
    lv_partol = UnitGroupEmpty();
    lv_transports = UnitGroupEmpty();

    // Implementation
    libCOMI_gf_CreateCoopDropForceinTransportsatLocationandWaitforthemtospawn(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lp_resourceBucket, lp_techLevel, RegionGetCenter(lp_spawnExitRegion), "MilitarizedHercules");
    lv_partol = libCOMI_gf_LastCreatedCoopAttackForce();
    auto3E2B77C5_g = lv_partol;
    auto3E2B77C5_u = UnitGroupCount(auto3E2B77C5_g, c_unitCountAll);
    for (;; auto3E2B77C5_u -= 1) {
        auto3E2B77C5_var = UnitGroupUnitFromEnd(auto3E2B77C5_g, auto3E2B77C5_u);
        if (auto3E2B77C5_var == null) { break; }
        if ((UnitGetType(auto3E2B77C5_var) == "MilitarizedHercules")) {
            UnitGroupRemove(lv_partol, auto3E2B77C5_var);
            UnitGroupAdd(lv_transports, auto3E2B77C5_var);
            UnitIssueOrder(auto3E2B77C5_var, OrderTargetingPoint(AbilityCommand("LoadUnloadTransport", 2), lp_rallyPoint), c_orderQueueReplace);
        }

    }
    auto47B1CE3B_g = lv_partol;
    auto47B1CE3B_u = UnitGroupCount(auto47B1CE3B_g, c_unitCountAll);
    for (;; auto47B1CE3B_u -= 1) {
        auto47B1CE3B_var = UnitGroupUnitFromEnd(auto47B1CE3B_g, auto47B1CE3B_u);
        if (auto47B1CE3B_var == null) { break; }
        AISetUnitScriptControlled(auto47B1CE3B_var, true);
        UnitIssueOrder(auto47B1CE3B_var, OrderTargetingPoint(AbilityCommand("attack", 0), lp_rallyPoint), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto64270B34_g = lv_partol;
    auto64270B34_u = UnitGroupCount(auto64270B34_g, c_unitCountAll);
    for (;; auto64270B34_u -= 1) {
        auto64270B34_var = UnitGroupUnitFromEnd(auto64270B34_g, auto64270B34_u);
        if (auto64270B34_var == null) { break; }
        AISetUnitScriptControlled(auto64270B34_var, false);
    }
    Wait(2.0, c_timeGame);
    if ((UnitGroupCount(lv_transports, c_unitCountAlive) > 0)) {
        while ((UnitGroupCount(lv_transports, c_unitCountAlive) > 0)) {
            auto611BEB92_g = lv_transports;
            auto611BEB92_u = UnitGroupCount(auto611BEB92_g, c_unitCountAll);
            for (;; auto611BEB92_u -= 1) {
                auto611BEB92_var = UnitGroupUnitFromEnd(auto611BEB92_g, auto611BEB92_u);
                if (auto611BEB92_var == null) { break; }
                if ((UnitCargoValue(auto611BEB92_var, c_unitCargoUnitCount) <= 0)) {
                    if ((libNtve_gf_UnitInRegion(auto611BEB92_var, lp_spawnExitRegion) == true)) {
                        UnitRemove(auto611BEB92_var);
                    }
                    else {
                        UnitIssueOrder(auto611BEB92_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(lp_spawnExitRegion)), c_orderQueueReplace);
                    }
                }

            }
            Wait(1.0, c_timeGame);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bank preloading
//--------------------------------------------------------------------------------------------------
bool gt_Bankpreloading_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Bankpreloading_Init () {
    gt_Bankpreloading = TriggerCreate("gt_Bankpreloading_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Load Data
//--------------------------------------------------------------------------------------------------
bool gt_Init01LoadData_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_indexPlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Init02Players, true, false);
    libCOMI_gf_LoadCoopMission("COOP_Placeholder", gt_Init03LoadingComplete);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01LoadData_Init () {
    gt_Init01LoadData = TriggerCreate("gt_Init01LoadData_Func");
    TriggerAddEventMapInit(gt_Init01LoadData);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Players
//--------------------------------------------------------------------------------------------------
bool gt_Init02Players_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIterEnemy;
    int lv_playerIterAlly;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetState(gv_pLAYER_05_ALLY, c_playerStateMineralCostIgnored, true);
    PlayerSetState(gv_pLAYER_05_ALLY, c_playerStateVespeneCostIgnored, true);
    PlayerSetState(gv_pLAYER_05_ALLY, c_playerStateFoodIgnored, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Players_Init () {
    gt_Init02Players = TriggerCreate("gt_Init02Players_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Loading Complete
//--------------------------------------------------------------------------------------------------
bool gt_Init03LoadingComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Init05Units, true, false);
    TriggerExecute(gt_Init09Doodads, true, false);
    TriggerExecute(gt_AIStart, true, false);
    TriggerExecute(gt_GameStartQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03LoadingComplete_Init () {
    gt_Init03LoadingComplete = TriggerCreate("gt_Init03LoadingComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Units
//--------------------------------------------------------------------------------------------------
bool gt_Init05Units_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_statis;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_statis = UnitFromId(1577725856);
    libCOMI_gf_DisplayUnitProgressBar(lv_statis, gv_lab_Overload_Text, 0, 0);
    libCOMI_gf_ShowHideUnitProgressBar(lv_statis, false);
    gv_lab01_Stasis = lv_statis;
    lv_statis = UnitFromId(1852821531);
    libCOMI_gf_DisplayUnitProgressBar(lv_statis, gv_lab_Overload_Text, 0, 0);
    libCOMI_gf_ShowHideUnitProgressBar(lv_statis, false);
    gv_lab02_Stasis = lv_statis;
    lv_statis = UnitFromId(1166594697);
    libCOMI_gf_DisplayUnitProgressBar(lv_statis, gv_lab_Overload_Text, 0, 0);
    libCOMI_gf_ShowHideUnitProgressBar(lv_statis, false);
    gv_lab03_Stasis = lv_statis;
    lv_statis = UnitFromId(1985655705);
    libCOMI_gf_DisplayUnitProgressBar(lv_statis, gv_lab_Overload_Text, 0, 0);
    libCOMI_gf_ShowHideUnitProgressBar(lv_statis, false);
    gv_lab04_Stasis = lv_statis;

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05Units_Init () {
    gt_Init05Units = TriggerCreate("gt_Init05Units_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 09 Doodads
//--------------------------------------------------------------------------------------------------
bool gt_Init09Doodads_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init09Doodads_Init () {
    gt_Init09Doodads = TriggerCreate("gt_Init09Doodads_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI Start
//--------------------------------------------------------------------------------------------------
bool gt_AIStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_AIAttackWaves, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AIStart_Init () {
    gt_AIStart = TriggerCreate("gt_AIStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Start Q
//--------------------------------------------------------------------------------------------------
bool gt_GameStartQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_SygScoutSpawn, true);
    TriggerExecute(gt_MapStartSpawnQ, true, false);
    TriggerExecute(gt_MapStartSpawnLabQ, true, false);
    Wait(libCOMI_gv_campaignObjectiveDelay, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionStartIntro, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameStartQ_Init () {
    gt_GameStartQ = TriggerCreate("gt_GameStartQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Scouts Gathed Data
//--------------------------------------------------------------------------------------------------
bool gt_GameScoutsGathedData_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(15.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_SygScoutAllianceTempOff, true, false);
    TriggerExecute(gt_TransmissionScoutInside, true, true);
    TriggerExecute(gt_GameLabStartTimer, true, false);
    TriggerQueueExit();
    Wait(12.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutMarkGates, true, false);
    TriggerExecute(gt_MarkBridgeControls, true, false);
    TriggerQueueExit();
    Wait(12.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutLabs, true, false);
    TriggerQueueExit();
    Wait(60.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutSabotage, true, false);
    TriggerExecute(gt_MainObjOverloadLabsSetup, true, false);
    TriggerExecute(gt_Lab01ScoutSabotage, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameScoutsGathedData_Init () {
    gt_GameScoutsGathedData = TriggerCreate("gt_GameScoutsGathedData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab01 Activation
//--------------------------------------------------------------------------------------------------
bool gt_GameLab01Activation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((EventTimer() == gv_game_Lab_Start_Timer))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_GameLabStartTimerHide, true, false);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionDreggSpawned, true, false);
    TriggerExecute(gt_MainObjDreggEvolutionSetup, true, false);
    TriggerExecute(gt_ProgressBarDisplay, true, false);
    TriggerExecute(gt_DreggQ, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLab01Activation_Init () {
    gt_GameLab01Activation = TriggerCreate("gt_GameLab01Activation_Func");
    TriggerAddEventTimer(gt_GameLab01Activation, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab02 Activation
//--------------------------------------------------------------------------------------------------
bool gt_GameLab02Activation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(12.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_DreggAttackQ, true, false);
    TriggerQueueExit();
    Wait(30.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutSabotage, true, false);
    TriggerExecute(gt_Lab02ScoutSabotage, true, false);
    TriggerQueueExit();
    Wait(45.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_BonusDatabot01SetupQ, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLab02Activation_Init () {
    gt_GameLab02Activation = TriggerCreate("gt_GameLab02Activation_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab03 Activation
//--------------------------------------------------------------------------------------------------
bool gt_GameLab03Activation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(12.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_DreggAttackQ, true, false);
    TriggerQueueExit();
    Wait(30.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutSabotage, true, false);
    TriggerExecute(gt_Lab03ScoutSabotage, true, false);
    TriggerQueueExit();
    Wait(45.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_BonusDatabot02SetupQ, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLab03Activation_Init () {
    gt_GameLab03Activation = TriggerCreate("gt_GameLab03Activation_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab04 Activation
//--------------------------------------------------------------------------------------------------
bool gt_GameLab04Activation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(12.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_DreggAttackQ, true, false);
    TriggerQueueExit();
    Wait(30.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutSabotage, true, false);
    TriggerExecute(gt_Lab04ScoutSabotage, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLab04Activation_Init () {
    gt_GameLab04Activation = TriggerCreate("gt_GameLab04Activation_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Dregg Battle Q
//--------------------------------------------------------------------------------------------------
bool gt_GameDreggBattleQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    TriggerExecute(gt_DreggFleeforFinalBattle, true, false);
    TriggerExecute(gt_TransmissionDreggFinalBattleSetup, true, false);
    TriggerExecute(gt_MainObjDreggEvolutionCompleted, true, false);
    TriggerQueueExit();
    Wait(4.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_ProgressBarHide, true, false);
    TriggerExecute(gt_MainObjDreggEvolutionHide, true, false);
    TriggerExecute(gt_MainObjOverloadLabHide, true, false);
    TriggerExecute(gt_MainObjDestroyDreggSetup, true, false);
    TriggerQueueExit();
    Wait(6.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionDreggFinalBattle, true, false);
    TriggerExecute(gt_FinalBattleAmon01, true, false);
    TriggerExecute(gt_FinalBattleAmon02, true, false);
    TriggerExecute(gt_FinalBattleAmon03, true, false);
    TriggerExecute(gt_FinalBattleAmon04, true, false);
    TriggerQueueExit();
    Wait(2.0, c_timeGame);
    TriggerQueueEnter();
    UnitSetPropertyFixed(gv_dregg, c_unitPropLifePercent, 100.0);
    UnitSetPosition(gv_dregg, PointFromId(246528250), false);
    TriggerExecute(gt_DreggRespawn, true, true);
    UnitGroupAdd(gv_final_Battle_Group, gv_dregg);
    TriggerExecute(gt_DreggSetKillableState, true, false);
    TriggerExecute(gt_DreggPing, true, false);
    TriggerQueueExit();
    TriggerQueueEnter();
    TriggerExecute(gt_FinalBattleAttackPlayers, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameDreggBattleQ_Init () {
    gt_GameDreggBattleQ = TriggerCreate("gt_GameDreggBattleQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab Start Timer
//--------------------------------------------------------------------------------------------------
bool gt_GameLabStartTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_game_Lab_Start_Timer = TimerCreate();
    TimerStart(gv_game_Lab_Start_Timer, (gv_game_Lab_Start_Activation_Time - GameGetMissionTime()), false, c_timeGame);
    libCOMI_gf_TimerWindowCreate(gv_game_Lab_Start_Timer, StringExternal("Param/Value/F55C5829"), true, false);
    gv_game_Lab_Start_Timer_Window = TimerWindowLastCreated();
    TimerWindowSetFormat(gv_game_Lab_Start_Timer_Window, StringToText("<mintotal/>:<sec2/>"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLabStartTimer_Init () {
    gt_GameLabStartTimer = TriggerCreate("gt_GameLabStartTimer_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Lab Start Timer Hide
//--------------------------------------------------------------------------------------------------
bool gt_GameLabStartTimerHide_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TimerWindowShow(gv_game_Lab_Start_Timer_Window, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameLabStartTimerHide_Init () {
    gt_GameLabStartTimerHide = TriggerCreate("gt_GameLabStartTimerHide_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Start Spawn Q
//--------------------------------------------------------------------------------------------------
bool gt_MapStartSpawnQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_MapLab04Guard02Subway01, true, false);
    TriggerExecute(gt_MapLab04Guard03Subway04, true, false);
    TriggerExecute(gt_MapLab01Rally00Subway03, true, false);
    TriggerExecute(gt_MapLab01Rally01Subway02, true, false);
    TriggerExecute(gt_MapLab01Rally02Subway05, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab04Guard01Subway01, true, false);
    TriggerExecute(gt_MapLab04Guard04Subway04, true, false);
    TriggerExecute(gt_MapLab01Rally03Subway03, true, false);
    TriggerExecute(gt_MapLab02Gate01Subway02, true, false);
    TriggerExecute(gt_MapLab03Gate01Subway05, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab04Bridge01Subway01, true, false);
    TriggerExecute(gt_MapLab04Bridge02Subway04, true, false);
    TriggerExecute(gt_MapLab01Gate01Subway03, true, false);
    TriggerExecute(gt_MapLab02Gate02Subway02, true, false);
    TriggerExecute(gt_MapLab03Gate02Subway05, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab02Rally00Subway02, true, false);
    TriggerExecute(gt_MapLab02Rally01Subway01, true, false);
    TriggerExecute(gt_MapLab03Rally00Subway05, true, false);
    TriggerExecute(gt_MapLab03Rally01Subway04, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab02Rally02Subway01, true, false);
    TriggerExecute(gt_MapLab02Rally03Subway02, true, false);
    TriggerExecute(gt_MapLab03Rally02Subway05, true, false);
    TriggerExecute(gt_MapLab03Rally03Subway04, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapStartSpawnQ_Init () {
    gt_MapStartSpawnQ = TriggerCreate("gt_MapStartSpawnQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Start Spawn Lab Q
//--------------------------------------------------------------------------------------------------
bool gt_MapStartSpawnLabQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_MapLab01ReinforceAmon, true, false);
    TriggerExecute(gt_MapLab01Reinforce01AirLeft, true, false);
    TriggerExecute(gt_MapLab01Reinforce02AirRight, true, true);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab02ReinforceAmon, true, false);
    TriggerExecute(gt_MapLab02Reinforce01AirLeft, true, false);
    TriggerExecute(gt_MapLab02Reinforce02AirRight, true, true);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab03ReinforceAmon, true, false);
    TriggerExecute(gt_MapLab03Reinforce01AirLeft, true, false);
    TriggerExecute(gt_MapLab03Reinforce02AirRight, true, true);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab04ReinforceAmon, true, false);
    TriggerExecute(gt_MapLab04Reinforce01AirLeft, true, false);
    TriggerExecute(gt_MapLab04Reinforce02AirRight, true, true);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_MapLab04Bridge01ReinforceAmon, true, false);
    TriggerExecute(gt_MapLab04Bridge02ReinforceAmon, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapStartSpawnLabQ_Init () {
    gt_MapStartSpawnLabQ = TriggerCreate("gt_MapStartSpawnLabQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Unit Dropped From Hercules
//--------------------------------------------------------------------------------------------------
bool gt_MapUnitDroppedFromHercules_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "MilitarizedHercules"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AISetUnitScriptControlled(EventUnit(), true);
    UnitIssueOrder(EventUnitCargo(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(EventUnitCargo())), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(EventUnit(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapUnitDroppedFromHercules_Init () {
    gt_MapUnitDroppedFromHercules = TriggerCreate("gt_MapUnitDroppedFromHercules_Func");
    TriggerAddEventUnitCargo(gt_MapUnitDroppedFromHercules, null, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway01 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway01Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1438940712), Order(AbilityCommand("MetalGateDiagonalBLURLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway01Open_Init () {
    gt_MapSubway01Open = TriggerCreate("gt_MapSubway01Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway01 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway01Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1438940712), Order(AbilityCommand("MetalGateDiagonalBLUR", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway01Close_Init () {
    gt_MapSubway01Close = TriggerCreate("gt_MapSubway01Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway02 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway02Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1872799993), Order(AbilityCommand("MetalGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway02Open_Init () {
    gt_MapSubway02Open = TriggerCreate("gt_MapSubway02Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway02 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway02Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1872799993), Order(AbilityCommand("MetalGateDiagonalULBR", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway02Close_Init () {
    gt_MapSubway02Close = TriggerCreate("gt_MapSubway02Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway03 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway03Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1762835397), Order(AbilityCommand("MetalGateDiagonalBLURLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway03Open_Init () {
    gt_MapSubway03Open = TriggerCreate("gt_MapSubway03Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway03 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway03Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1762835397), Order(AbilityCommand("MetalGateDiagonalBLUR", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway03Close_Init () {
    gt_MapSubway03Close = TriggerCreate("gt_MapSubway03Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway04 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway04Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1949082240), Order(AbilityCommand("MetalGateStraightHorizontalBFLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway04Open_Init () {
    gt_MapSubway04Open = TriggerCreate("gt_MapSubway04Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway04 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway04Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1949082240), Order(AbilityCommand("MetalGateStraightHorizontalBF", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway04Close_Init () {
    gt_MapSubway04Close = TriggerCreate("gt_MapSubway04Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway05 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway05Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1222057293), Order(AbilityCommand("MetalGateStraightHorizontalLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway05Open_Init () {
    gt_MapSubway05Open = TriggerCreate("gt_MapSubway05Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Subway05 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapSubway05Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1222057293), Order(AbilityCommand("MetalGateStraightHorizontal", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapSubway05Close_Init () {
    gt_MapSubway05Close = TriggerCreate("gt_MapSubway05Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Air Gate01 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapAirGate01Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1364144802), Order(AbilityCommand("HybridLabDoorsLeftLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapAirGate01Open_Init () {
    gt_MapAirGate01Open = TriggerCreate("gt_MapAirGate01Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Air Gate01 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapAirGate01Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(1364144802), Order(AbilityCommand("HybridLabDoorsLeft", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapAirGate01Close_Init () {
    gt_MapAirGate01Close = TriggerCreate("gt_MapAirGate01Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Air Gate02 Open
//--------------------------------------------------------------------------------------------------
bool gt_MapAirGate02Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(618340863), Order(AbilityCommand("HybridLabDoorsLeftLowered", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapAirGate02Open_Init () {
    gt_MapAirGate02Open = TriggerCreate("gt_MapAirGate02Open_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Air Gate02 Close
//--------------------------------------------------------------------------------------------------
bool gt_MapAirGate02Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(618340863), Order(AbilityCommand("HybridLabDoorsLeft", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapAirGate02Close_Init () {
    gt_MapAirGate02Close = TriggerCreate("gt_MapAirGate02Close_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Gate01 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Gate01Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto940A34DC_g;
    int auto940A34DC_u;
    unit auto940A34DC_var;
    unitgroup autoD3DA8189_g;
    int autoD3DA8189_u;
    unit autoD3DA8189_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    auto940A34DC_g = lv_rallyGroup;
    auto940A34DC_u = UnitGroupCount(auto940A34DC_g, c_unitCountAll);
    for (;; auto940A34DC_u -= 1) {
        auto940A34DC_var = UnitGroupUnitFromEnd(auto940A34DC_g, auto940A34DC_u);
        if (auto940A34DC_var == null) { break; }
        AISetUnitScriptControlled(auto940A34DC_var, true);
        UnitIssueOrder(auto940A34DC_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(942676696)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoD3DA8189_g = lv_rallyGroup;
    autoD3DA8189_u = UnitGroupCount(autoD3DA8189_g, c_unitCountAll);
    for (;; autoD3DA8189_u -= 1) {
        autoD3DA8189_var = UnitGroupUnitFromEnd(autoD3DA8189_g, autoD3DA8189_u);
        if (autoD3DA8189_var == null) { break; }
        AISetUnitScriptControlled(autoD3DA8189_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Gate01Subway03_Init () {
    gt_MapLab01Gate01Subway03 = TriggerCreate("gt_MapLab01Gate01Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Rally00 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Rally00Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto6D4F67FF_g;
    int auto6D4F67FF_u;
    unit auto6D4F67FF_var;
    unitgroup autoA9DF0114_g;
    int autoA9DF0114_u;
    unit autoA9DF0114_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    auto6D4F67FF_g = lv_patrol;
    auto6D4F67FF_u = UnitGroupCount(auto6D4F67FF_g, c_unitCountAll);
    for (;; auto6D4F67FF_u -= 1) {
        auto6D4F67FF_var = UnitGroupUnitFromEnd(auto6D4F67FF_g, auto6D4F67FF_u);
        if (auto6D4F67FF_var == null) { break; }
        AISetUnitScriptControlled(auto6D4F67FF_var, true);
        UnitIssueOrder(auto6D4F67FF_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(526165092)), c_orderQueueReplace);
        UnitIssueOrder(auto6D4F67FF_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(526165092)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto6D4F67FF_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1051803048)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    autoA9DF0114_g = lv_patrol;
    autoA9DF0114_u = UnitGroupCount(autoA9DF0114_g, c_unitCountAll);
    for (;; autoA9DF0114_u -= 1) {
        autoA9DF0114_var = UnitGroupUnitFromEnd(autoA9DF0114_g, autoA9DF0114_u);
        if (autoA9DF0114_var == null) { break; }
        AISetUnitScriptControlled(autoA9DF0114_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Rally00Subway03_Init () {
    gt_MapLab01Rally00Subway03 = TriggerCreate("gt_MapLab01Rally00Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Rally01 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Rally01Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoDA39566A_g;
    int autoDA39566A_u;
    unit autoDA39566A_var;
    unitgroup auto39E195E2_g;
    int auto39E195E2_u;
    unit auto39E195E2_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    autoDA39566A_g = lv_patrol;
    autoDA39566A_u = UnitGroupCount(autoDA39566A_g, c_unitCountAll);
    for (;; autoDA39566A_u -= 1) {
        autoDA39566A_var = UnitGroupUnitFromEnd(autoDA39566A_g, autoDA39566A_u);
        if (autoDA39566A_var == null) { break; }
        AISetUnitScriptControlled(autoDA39566A_var, true);
        UnitIssueOrder(autoDA39566A_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(97428240)), c_orderQueueReplace);
        UnitIssueOrder(autoDA39566A_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(97428240)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoDA39566A_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1696882375)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto39E195E2_g = lv_patrol;
    auto39E195E2_u = UnitGroupCount(auto39E195E2_g, c_unitCountAll);
    for (;; auto39E195E2_u -= 1) {
        auto39E195E2_var = UnitGroupUnitFromEnd(auto39E195E2_g, auto39E195E2_u);
        if (auto39E195E2_var == null) { break; }
        AISetUnitScriptControlled(auto39E195E2_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Rally01Subway02_Init () {
    gt_MapLab01Rally01Subway02 = TriggerCreate("gt_MapLab01Rally01Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Rally02 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Rally02Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto6AD48A81_g;
    int auto6AD48A81_u;
    unit auto6AD48A81_var;
    unitgroup auto042423DF_g;
    int auto042423DF_u;
    unit auto042423DF_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    auto6AD48A81_g = lv_patrol;
    auto6AD48A81_u = UnitGroupCount(auto6AD48A81_g, c_unitCountAll);
    for (;; auto6AD48A81_u -= 1) {
        auto6AD48A81_var = UnitGroupUnitFromEnd(auto6AD48A81_g, auto6AD48A81_u);
        if (auto6AD48A81_var == null) { break; }
        AISetUnitScriptControlled(auto6AD48A81_var, true);
        UnitIssueOrder(auto6AD48A81_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2005403389)), c_orderQueueReplace);
        UnitIssueOrder(auto6AD48A81_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(2005403389)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto6AD48A81_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1407507578)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto042423DF_g = lv_patrol;
    auto042423DF_u = UnitGroupCount(auto042423DF_g, c_unitCountAll);
    for (;; auto042423DF_u -= 1) {
        auto042423DF_var = UnitGroupUnitFromEnd(auto042423DF_g, auto042423DF_u);
        if (auto042423DF_var == null) { break; }
        AISetUnitScriptControlled(auto042423DF_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Rally02Subway05_Init () {
    gt_MapLab01Rally02Subway05 = TriggerCreate("gt_MapLab01Rally02Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Rally03 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Rally03Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto21F481BC_g;
    int auto21F481BC_u;
    unit auto21F481BC_var;
    unitgroup auto352AC5F1_g;
    int auto352AC5F1_u;
    unit auto352AC5F1_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    auto21F481BC_g = lv_patrol;
    auto21F481BC_u = UnitGroupCount(auto21F481BC_g, c_unitCountAll);
    for (;; auto21F481BC_u -= 1) {
        auto21F481BC_var = UnitGroupUnitFromEnd(auto21F481BC_g, auto21F481BC_u);
        if (auto21F481BC_var == null) { break; }
        AISetUnitScriptControlled(auto21F481BC_var, true);
        UnitIssueOrder(auto21F481BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1239277771)), c_orderQueueReplace);
        UnitIssueOrder(auto21F481BC_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1239277771)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto21F481BC_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(425527001)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto352AC5F1_g = lv_patrol;
    auto352AC5F1_u = UnitGroupCount(auto352AC5F1_g, c_unitCountAll);
    for (;; auto352AC5F1_u -= 1) {
        auto352AC5F1_var = UnitGroupUnitFromEnd(auto352AC5F1_g, auto352AC5F1_u);
        if (auto352AC5F1_var == null) { break; }
        AISetUnitScriptControlled(auto352AC5F1_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Rally03Subway03_Init () {
    gt_MapLab01Rally03Subway03 = TriggerCreate("gt_MapLab01Rally03Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Reinforce01 Air Left
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Reinforce01AirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(687085472);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Reinforce01AirLeft_Init () {
    gt_MapLab01Reinforce01AirLeft = TriggerCreate("gt_MapLab01Reinforce01AirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Reinforce02 Air Right
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01Reinforce02AirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(1542267758);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01Reinforce02AirRight_Init () {
    gt_MapLab01Reinforce02AirRight = TriggerCreate("gt_MapLab01Reinforce02AirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab01 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab01ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(918020931);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(91251928)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab01ReinforceAmon_Init () {
    gt_MapLab01ReinforceAmon = TriggerCreate("gt_MapLab01ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Gate01 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Gate01Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto0775B5D1_g;
    int auto0775B5D1_u;
    unit auto0775B5D1_var;
    unitgroup autoE1C65486_g;
    int autoE1C65486_u;
    unit autoE1C65486_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    auto0775B5D1_g = lv_rallyGroup;
    auto0775B5D1_u = UnitGroupCount(auto0775B5D1_g, c_unitCountAll);
    for (;; auto0775B5D1_u -= 1) {
        auto0775B5D1_var = UnitGroupUnitFromEnd(auto0775B5D1_g, auto0775B5D1_u);
        if (auto0775B5D1_var == null) { break; }
        AISetUnitScriptControlled(auto0775B5D1_var, true);
        UnitIssueOrder(auto0775B5D1_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(815516434)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoE1C65486_g = lv_rallyGroup;
    autoE1C65486_u = UnitGroupCount(autoE1C65486_g, c_unitCountAll);
    for (;; autoE1C65486_u -= 1) {
        autoE1C65486_var = UnitGroupUnitFromEnd(autoE1C65486_g, autoE1C65486_u);
        if (autoE1C65486_var == null) { break; }
        AISetUnitScriptControlled(autoE1C65486_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Gate01Subway02_Init () {
    gt_MapLab02Gate01Subway02 = TriggerCreate("gt_MapLab02Gate01Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Gate02 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Gate02Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto34DC4B60_g;
    int auto34DC4B60_u;
    unit auto34DC4B60_var;
    unitgroup autoF4D2CCE6_g;
    int autoF4D2CCE6_u;
    unit autoF4D2CCE6_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    auto34DC4B60_g = lv_rallyGroup;
    auto34DC4B60_u = UnitGroupCount(auto34DC4B60_g, c_unitCountAll);
    for (;; auto34DC4B60_u -= 1) {
        auto34DC4B60_var = UnitGroupUnitFromEnd(auto34DC4B60_g, auto34DC4B60_u);
        if (auto34DC4B60_var == null) { break; }
        AISetUnitScriptControlled(auto34DC4B60_var, true);
        UnitIssueOrder(auto34DC4B60_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1929119557)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoF4D2CCE6_g = lv_rallyGroup;
    autoF4D2CCE6_u = UnitGroupCount(autoF4D2CCE6_g, c_unitCountAll);
    for (;; autoF4D2CCE6_u -= 1) {
        autoF4D2CCE6_var = UnitGroupUnitFromEnd(autoF4D2CCE6_g, autoF4D2CCE6_u);
        if (autoF4D2CCE6_var == null) { break; }
        AISetUnitScriptControlled(autoF4D2CCE6_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Gate02Subway02_Init () {
    gt_MapLab02Gate02Subway02 = TriggerCreate("gt_MapLab02Gate02Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Rally00 Subway02 
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Rally00Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoF7160662_g;
    int autoF7160662_u;
    unit autoF7160662_var;
    unitgroup autoEC189900_g;
    int autoEC189900_u;
    unit autoEC189900_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    autoF7160662_g = lv_patrol;
    autoF7160662_u = UnitGroupCount(autoF7160662_g, c_unitCountAll);
    for (;; autoF7160662_u -= 1) {
        autoF7160662_var = UnitGroupUnitFromEnd(autoF7160662_g, autoF7160662_u);
        if (autoF7160662_var == null) { break; }
        AISetUnitScriptControlled(autoF7160662_var, true);
        UnitIssueOrder(autoF7160662_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1779004013)), c_orderQueueReplace);
        UnitIssueOrder(autoF7160662_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1779004013)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoF7160662_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1067796021)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    autoEC189900_g = lv_patrol;
    autoEC189900_u = UnitGroupCount(autoEC189900_g, c_unitCountAll);
    for (;; autoEC189900_u -= 1) {
        autoEC189900_var = UnitGroupUnitFromEnd(autoEC189900_g, autoEC189900_u);
        if (autoEC189900_var == null) { break; }
        AISetUnitScriptControlled(autoEC189900_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Rally00Subway02_Init () {
    gt_MapLab02Rally00Subway02 = TriggerCreate("gt_MapLab02Rally00Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Rally01 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Rally01Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoE41C7C97_g;
    int autoE41C7C97_u;
    unit autoE41C7C97_var;
    unitgroup auto7044AC09_g;
    int auto7044AC09_u;
    unit auto7044AC09_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    autoE41C7C97_g = lv_patrol;
    autoE41C7C97_u = UnitGroupCount(autoE41C7C97_g, c_unitCountAll);
    for (;; autoE41C7C97_u -= 1) {
        autoE41C7C97_var = UnitGroupUnitFromEnd(autoE41C7C97_g, autoE41C7C97_u);
        if (autoE41C7C97_var == null) { break; }
        AISetUnitScriptControlled(autoE41C7C97_var, true);
        UnitIssueOrder(autoE41C7C97_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(894442366)), c_orderQueueReplace);
        UnitIssueOrder(autoE41C7C97_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(894442366)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoE41C7C97_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1051807119)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto7044AC09_g = lv_patrol;
    auto7044AC09_u = UnitGroupCount(auto7044AC09_g, c_unitCountAll);
    for (;; auto7044AC09_u -= 1) {
        auto7044AC09_var = UnitGroupUnitFromEnd(auto7044AC09_g, auto7044AC09_u);
        if (auto7044AC09_var == null) { break; }
        AISetUnitScriptControlled(auto7044AC09_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Rally01Subway01_Init () {
    gt_MapLab02Rally01Subway01 = TriggerCreate("gt_MapLab02Rally01Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Rally02 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Rally02Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoB791A0AE_g;
    int autoB791A0AE_u;
    unit autoB791A0AE_var;
    unitgroup auto9AB7F8B2_g;
    int auto9AB7F8B2_u;
    unit auto9AB7F8B2_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    autoB791A0AE_g = lv_patrol;
    autoB791A0AE_u = UnitGroupCount(autoB791A0AE_g, c_unitCountAll);
    for (;; autoB791A0AE_u -= 1) {
        autoB791A0AE_var = UnitGroupUnitFromEnd(autoB791A0AE_g, autoB791A0AE_u);
        if (autoB791A0AE_var == null) { break; }
        AISetUnitScriptControlled(autoB791A0AE_var, true);
        UnitIssueOrder(autoB791A0AE_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(62389229)), c_orderQueueReplace);
        UnitIssueOrder(autoB791A0AE_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(62389229)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB791A0AE_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(942969876)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto9AB7F8B2_g = lv_patrol;
    auto9AB7F8B2_u = UnitGroupCount(auto9AB7F8B2_g, c_unitCountAll);
    for (;; auto9AB7F8B2_u -= 1) {
        auto9AB7F8B2_var = UnitGroupUnitFromEnd(auto9AB7F8B2_g, auto9AB7F8B2_u);
        if (auto9AB7F8B2_var == null) { break; }
        AISetUnitScriptControlled(auto9AB7F8B2_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Rally02Subway01_Init () {
    gt_MapLab02Rally02Subway01 = TriggerCreate("gt_MapLab02Rally02Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Rally03 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Rally03Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto4330F64C_g;
    int auto4330F64C_u;
    unit auto4330F64C_var;
    unitgroup auto2833EE58_g;
    int auto2833EE58_u;
    unit auto2833EE58_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Close, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    auto4330F64C_g = lv_patrol;
    auto4330F64C_u = UnitGroupCount(auto4330F64C_g, c_unitCountAll);
    for (;; auto4330F64C_u -= 1) {
        auto4330F64C_var = UnitGroupUnitFromEnd(auto4330F64C_g, auto4330F64C_u);
        if (auto4330F64C_var == null) { break; }
        AISetUnitScriptControlled(auto4330F64C_var, true);
        UnitIssueOrder(auto4330F64C_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1576170978)), c_orderQueueReplace);
        UnitIssueOrder(auto4330F64C_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1576170978)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto4330F64C_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1357569405)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto2833EE58_g = lv_patrol;
    auto2833EE58_u = UnitGroupCount(auto2833EE58_g, c_unitCountAll);
    for (;; auto2833EE58_u -= 1) {
        auto2833EE58_var = UnitGroupUnitFromEnd(auto2833EE58_g, auto2833EE58_u);
        if (auto2833EE58_var == null) { break; }
        AISetUnitScriptControlled(auto2833EE58_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Rally03Subway02_Init () {
    gt_MapLab02Rally03Subway02 = TriggerCreate("gt_MapLab02Rally03Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Reinforce01 Air Left
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Reinforce01AirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1169215111);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Reinforce01AirLeft_Init () {
    gt_MapLab02Reinforce01AirLeft = TriggerCreate("gt_MapLab02Reinforce01AirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Reinforce02 Air Right
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02Reinforce02AirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(802389572);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02Reinforce02AirRight_Init () {
    gt_MapLab02Reinforce02AirRight = TriggerCreate("gt_MapLab02Reinforce02AirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab02 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab02ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(544754931);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(626657800)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(637569000)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab02ReinforceAmon_Init () {
    gt_MapLab02ReinforceAmon = TriggerCreate("gt_MapLab02ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Gate01 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Gate01Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto410965F8_g;
    int auto410965F8_u;
    unit auto410965F8_var;
    unitgroup auto9E8CFC71_g;
    int auto9E8CFC71_u;
    unit auto9E8CFC71_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    auto410965F8_g = lv_rallyGroup;
    auto410965F8_u = UnitGroupCount(auto410965F8_g, c_unitCountAll);
    for (;; auto410965F8_u -= 1) {
        auto410965F8_var = UnitGroupUnitFromEnd(auto410965F8_g, auto410965F8_u);
        if (auto410965F8_var == null) { break; }
        AISetUnitScriptControlled(auto410965F8_var, true);
        UnitIssueOrder(auto410965F8_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1717601211)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto9E8CFC71_g = lv_rallyGroup;
    auto9E8CFC71_u = UnitGroupCount(auto9E8CFC71_g, c_unitCountAll);
    for (;; auto9E8CFC71_u -= 1) {
        auto9E8CFC71_var = UnitGroupUnitFromEnd(auto9E8CFC71_g, auto9E8CFC71_u);
        if (auto9E8CFC71_var == null) { break; }
        AISetUnitScriptControlled(auto9E8CFC71_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Gate01Subway05_Init () {
    gt_MapLab03Gate01Subway05 = TriggerCreate("gt_MapLab03Gate01Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Gate02 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Gate02Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup autoAE7720CC_g;
    int autoAE7720CC_u;
    unit autoAE7720CC_var;
    unitgroup auto99EF043D_g;
    int auto99EF043D_u;
    unit auto99EF043D_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    autoAE7720CC_g = lv_rallyGroup;
    autoAE7720CC_u = UnitGroupCount(autoAE7720CC_g, c_unitCountAll);
    for (;; autoAE7720CC_u -= 1) {
        autoAE7720CC_var = UnitGroupUnitFromEnd(autoAE7720CC_g, autoAE7720CC_u);
        if (autoAE7720CC_var == null) { break; }
        AISetUnitScriptControlled(autoAE7720CC_var, true);
        UnitIssueOrder(autoAE7720CC_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(830132136)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto99EF043D_g = lv_rallyGroup;
    auto99EF043D_u = UnitGroupCount(auto99EF043D_g, c_unitCountAll);
    for (;; auto99EF043D_u -= 1) {
        auto99EF043D_var = UnitGroupUnitFromEnd(auto99EF043D_g, auto99EF043D_u);
        if (auto99EF043D_var == null) { break; }
        AISetUnitScriptControlled(auto99EF043D_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Gate02Subway05_Init () {
    gt_MapLab03Gate02Subway05 = TriggerCreate("gt_MapLab03Gate02Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Rally00 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Rally00Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto9365B200_g;
    int auto9365B200_u;
    unit auto9365B200_var;
    unitgroup autoD1487AE1_g;
    int autoD1487AE1_u;
    unit autoD1487AE1_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    auto9365B200_g = lv_patrol;
    auto9365B200_u = UnitGroupCount(auto9365B200_g, c_unitCountAll);
    for (;; auto9365B200_u -= 1) {
        auto9365B200_var = UnitGroupUnitFromEnd(auto9365B200_g, auto9365B200_u);
        if (auto9365B200_var == null) { break; }
        AISetUnitScriptControlled(auto9365B200_var, true);
        UnitIssueOrder(auto9365B200_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1702756687)), c_orderQueueReplace);
        UnitIssueOrder(auto9365B200_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1702756687)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto9365B200_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(706086602)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    autoD1487AE1_g = lv_patrol;
    autoD1487AE1_u = UnitGroupCount(autoD1487AE1_g, c_unitCountAll);
    for (;; autoD1487AE1_u -= 1) {
        autoD1487AE1_var = UnitGroupUnitFromEnd(autoD1487AE1_g, autoD1487AE1_u);
        if (autoD1487AE1_var == null) { break; }
        AISetUnitScriptControlled(autoD1487AE1_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Rally00Subway05_Init () {
    gt_MapLab03Rally00Subway05 = TriggerCreate("gt_MapLab03Rally00Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Rally01 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Rally01Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto57DFC471_g;
    int auto57DFC471_u;
    unit auto57DFC471_var;
    unitgroup auto1C8CF6FA_g;
    int auto1C8CF6FA_u;
    unit auto1C8CF6FA_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto57DFC471_g = lv_patrol;
    auto57DFC471_u = UnitGroupCount(auto57DFC471_g, c_unitCountAll);
    for (;; auto57DFC471_u -= 1) {
        auto57DFC471_var = UnitGroupUnitFromEnd(auto57DFC471_g, auto57DFC471_u);
        if (auto57DFC471_var == null) { break; }
        AISetUnitScriptControlled(auto57DFC471_var, true);
        UnitIssueOrder(auto57DFC471_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(841493179)), c_orderQueueReplace);
        UnitIssueOrder(auto57DFC471_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(841493179)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto57DFC471_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(544367208)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto1C8CF6FA_g = lv_patrol;
    auto1C8CF6FA_u = UnitGroupCount(auto1C8CF6FA_g, c_unitCountAll);
    for (;; auto1C8CF6FA_u -= 1) {
        auto1C8CF6FA_var = UnitGroupUnitFromEnd(auto1C8CF6FA_g, auto1C8CF6FA_u);
        if (auto1C8CF6FA_var == null) { break; }
        AISetUnitScriptControlled(auto1C8CF6FA_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Rally01Subway04_Init () {
    gt_MapLab03Rally01Subway04 = TriggerCreate("gt_MapLab03Rally01Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Rally02 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Rally02Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoC7D823B1_g;
    int autoC7D823B1_u;
    unit autoC7D823B1_var;
    unitgroup autoDC659662_g;
    int autoDC659662_u;
    unit autoDC659662_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    autoC7D823B1_g = lv_patrol;
    autoC7D823B1_u = UnitGroupCount(autoC7D823B1_g, c_unitCountAll);
    for (;; autoC7D823B1_u -= 1) {
        autoC7D823B1_var = UnitGroupUnitFromEnd(autoC7D823B1_g, autoC7D823B1_u);
        if (autoC7D823B1_var == null) { break; }
        AISetUnitScriptControlled(autoC7D823B1_var, true);
        UnitIssueOrder(autoC7D823B1_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1726186271)), c_orderQueueReplace);
        UnitIssueOrder(autoC7D823B1_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1726186271)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoC7D823B1_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(2145147645)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    autoDC659662_g = lv_patrol;
    autoDC659662_u = UnitGroupCount(autoDC659662_g, c_unitCountAll);
    for (;; autoDC659662_u -= 1) {
        autoDC659662_var = UnitGroupUnitFromEnd(autoDC659662_g, autoDC659662_u);
        if (autoDC659662_var == null) { break; }
        AISetUnitScriptControlled(autoDC659662_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Rally02Subway05_Init () {
    gt_MapLab03Rally02Subway05 = TriggerCreate("gt_MapLab03Rally02Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Rally03 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Rally03Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoD4DD6922_g;
    int autoD4DD6922_u;
    unit autoD4DD6922_var;
    unitgroup auto1D2F4696_g;
    int auto1D2F4696_u;
    unit auto1D2F4696_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    autoD4DD6922_g = lv_patrol;
    autoD4DD6922_u = UnitGroupCount(autoD4DD6922_g, c_unitCountAll);
    for (;; autoD4DD6922_u -= 1) {
        autoD4DD6922_var = UnitGroupUnitFromEnd(autoD4DD6922_g, autoD4DD6922_u);
        if (autoD4DD6922_var == null) { break; }
        AISetUnitScriptControlled(autoD4DD6922_var, true);
        UnitIssueOrder(autoD4DD6922_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(96611176)), c_orderQueueReplace);
        UnitIssueOrder(autoD4DD6922_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(96611176)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoD4DD6922_var, OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1875613897)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    auto1D2F4696_g = lv_patrol;
    auto1D2F4696_u = UnitGroupCount(auto1D2F4696_g, c_unitCountAll);
    for (;; auto1D2F4696_u -= 1) {
        auto1D2F4696_var = UnitGroupUnitFromEnd(auto1D2F4696_g, auto1D2F4696_u);
        if (auto1D2F4696_var == null) { break; }
        AISetUnitScriptControlled(auto1D2F4696_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Rally03Subway04_Init () {
    gt_MapLab03Rally03Subway04 = TriggerCreate("gt_MapLab03Rally03Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Reinforce01 Air Left
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Reinforce01AirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1481128987);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Reinforce01AirLeft_Init () {
    gt_MapLab03Reinforce01AirLeft = TriggerCreate("gt_MapLab03Reinforce01AirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Reinforce02 Air Right
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03Reinforce02AirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(538921433);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03Reinforce02AirRight_Init () {
    gt_MapLab03Reinforce02AirRight = TriggerCreate("gt_MapLab03Reinforce02AirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab03 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab03ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(961361182);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1268623798)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(206767592)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(961361182)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab03ReinforceAmon_Init () {
    gt_MapLab03ReinforceAmon = TriggerCreate("gt_MapLab03ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Lock
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Lock_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(UnitFromId(1576040229), Order(AbilityCommand("MetalGateDiagonalULBR", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1119640594), Order(AbilityCommand("MetalGateDiagonalULBR", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2108459526), Order(AbilityCommand("PortCity_Bridge_UnitSE10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1312325610), Order(AbilityCommand("PortCity_Bridge_UnitSE10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2088894626), Order(AbilityCommand("PortCity_Bridge_UnitNW10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(907205946), Order(AbilityCommand("PortCity_Bridge_UnitNW10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(598440984), Order(AbilityCommand("PortCity_Bridge_UnitSE10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(357575440), Order(AbilityCommand("PortCity_Bridge_UnitSE10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1489923562), Order(AbilityCommand("PortCity_Bridge_UnitNW10", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(981141779), Order(AbilityCommand("PortCity_Bridge_UnitNW10", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Lock_Init () {
    gt_MapLab04Lock = TriggerCreate("gt_MapLab04Lock_Func");
    TriggerAddEventTimeElapsed(gt_MapLab04Lock, 70.0, c_timeAI);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Bridge01 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Bridge01Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto9740A1FF_g;
    int auto9740A1FF_u;
    unit auto9740A1FF_var;
    unitgroup auto0D07FBD1_g;
    int auto0D07FBD1_u;
    unit auto0D07FBD1_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto9740A1FF_g = lv_rallyGroup;
    auto9740A1FF_u = UnitGroupCount(auto9740A1FF_g, c_unitCountAll);
    for (;; auto9740A1FF_u -= 1) {
        auto9740A1FF_var = UnitGroupUnitFromEnd(auto9740A1FF_g, auto9740A1FF_u);
        if (auto9740A1FF_var == null) { break; }
        AISetUnitScriptControlled(auto9740A1FF_var, true);
        UnitIssueOrder(auto9740A1FF_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(15712933)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto0D07FBD1_g = lv_rallyGroup;
    auto0D07FBD1_u = UnitGroupCount(auto0D07FBD1_g, c_unitCountAll);
    for (;; auto0D07FBD1_u -= 1) {
        auto0D07FBD1_var = UnitGroupUnitFromEnd(auto0D07FBD1_g, auto0D07FBD1_u);
        if (auto0D07FBD1_var == null) { break; }
        AISetUnitScriptControlled(auto0D07FBD1_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Bridge01Subway01_Init () {
    gt_MapLab04Bridge01Subway01 = TriggerCreate("gt_MapLab04Bridge01Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Bridge01 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Bridge01ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(1684371906);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(91768320)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(91768320)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Bridge01ReinforceAmon_Init () {
    gt_MapLab04Bridge01ReinforceAmon = TriggerCreate("gt_MapLab04Bridge01ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Bridge02 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Bridge02Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto1E4240AE_g;
    int auto1E4240AE_u;
    unit auto1E4240AE_var;
    unitgroup autoE68353A0_g;
    int autoE68353A0_u;
    unit autoE68353A0_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto1E4240AE_g = lv_rallyGroup;
    auto1E4240AE_u = UnitGroupCount(auto1E4240AE_g, c_unitCountAll);
    for (;; auto1E4240AE_u -= 1) {
        auto1E4240AE_var = UnitGroupUnitFromEnd(auto1E4240AE_g, auto1E4240AE_u);
        if (auto1E4240AE_var == null) { break; }
        AISetUnitScriptControlled(auto1E4240AE_var, true);
        UnitIssueOrder(auto1E4240AE_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(685762951)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoE68353A0_g = lv_rallyGroup;
    autoE68353A0_u = UnitGroupCount(autoE68353A0_g, c_unitCountAll);
    for (;; autoE68353A0_u -= 1) {
        autoE68353A0_var = UnitGroupUnitFromEnd(autoE68353A0_g, autoE68353A0_u);
        if (autoE68353A0_var == null) { break; }
        AISetUnitScriptControlled(autoE68353A0_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Bridge02Subway04_Init () {
    gt_MapLab04Bridge02Subway04 = TriggerCreate("gt_MapLab04Bridge02Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Bridge02 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Bridge02ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(1533246323);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1272891904)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1272891904)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Bridge02ReinforceAmon_Init () {
    gt_MapLab04Bridge02ReinforceAmon = TriggerCreate("gt_MapLab04Bridge02ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Guard01 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Guard01Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup autoDC18F2A2_g;
    int autoDC18F2A2_u;
    unit autoDC18F2A2_var;
    unitgroup auto6B00314E_g;
    int auto6B00314E_u;
    unit auto6B00314E_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    autoDC18F2A2_g = lv_rallyGroup;
    autoDC18F2A2_u = UnitGroupCount(autoDC18F2A2_g, c_unitCountAll);
    for (;; autoDC18F2A2_u -= 1) {
        autoDC18F2A2_var = UnitGroupUnitFromEnd(autoDC18F2A2_g, autoDC18F2A2_u);
        if (autoDC18F2A2_var == null) { break; }
        AISetUnitScriptControlled(autoDC18F2A2_var, true);
        UnitIssueOrder(autoDC18F2A2_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1355787357)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto6B00314E_g = lv_rallyGroup;
    auto6B00314E_u = UnitGroupCount(auto6B00314E_g, c_unitCountAll);
    for (;; auto6B00314E_u -= 1) {
        auto6B00314E_var = UnitGroupUnitFromEnd(auto6B00314E_g, auto6B00314E_u);
        if (auto6B00314E_var == null) { break; }
        AISetUnitScriptControlled(auto6B00314E_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Guard01Subway01_Init () {
    gt_MapLab04Guard01Subway01 = TriggerCreate("gt_MapLab04Guard01Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Guard02 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Guard02Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto4F5A509D_g;
    int auto4F5A509D_u;
    unit auto4F5A509D_var;
    unitgroup autoF6893B97_g;
    int autoF6893B97_u;
    unit autoF6893B97_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto4F5A509D_g = lv_rallyGroup;
    auto4F5A509D_u = UnitGroupCount(auto4F5A509D_g, c_unitCountAll);
    for (;; auto4F5A509D_u -= 1) {
        auto4F5A509D_var = UnitGroupUnitFromEnd(auto4F5A509D_g, auto4F5A509D_u);
        if (auto4F5A509D_var == null) { break; }
        AISetUnitScriptControlled(auto4F5A509D_var, true);
        UnitIssueOrder(auto4F5A509D_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242657715)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoF6893B97_g = lv_rallyGroup;
    autoF6893B97_u = UnitGroupCount(autoF6893B97_g, c_unitCountAll);
    for (;; autoF6893B97_u -= 1) {
        autoF6893B97_var = UnitGroupUnitFromEnd(autoF6893B97_g, autoF6893B97_u);
        if (autoF6893B97_var == null) { break; }
        AISetUnitScriptControlled(autoF6893B97_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Guard02Subway01_Init () {
    gt_MapLab04Guard02Subway01 = TriggerCreate("gt_MapLab04Guard02Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Guard03 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Guard03Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto38197138_g;
    int auto38197138_u;
    unit auto38197138_var;
    unitgroup autoA677A97E_g;
    int autoA677A97E_u;
    unit autoA677A97E_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto38197138_g = lv_rallyGroup;
    auto38197138_u = UnitGroupCount(auto38197138_g, c_unitCountAll);
    for (;; auto38197138_u -= 1) {
        auto38197138_var = UnitGroupUnitFromEnd(auto38197138_g, auto38197138_u);
        if (auto38197138_var == null) { break; }
        AISetUnitScriptControlled(auto38197138_var, true);
        UnitIssueOrder(auto38197138_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(161258057)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoA677A97E_g = lv_rallyGroup;
    autoA677A97E_u = UnitGroupCount(autoA677A97E_g, c_unitCountAll);
    for (;; autoA677A97E_u -= 1) {
        autoA677A97E_var = UnitGroupUnitFromEnd(autoA677A97E_g, autoA677A97E_u);
        if (autoA677A97E_var == null) { break; }
        AISetUnitScriptControlled(autoA677A97E_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Guard03Subway04_Init () {
    gt_MapLab04Guard03Subway04 = TriggerCreate("gt_MapLab04Guard03Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Guard04 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Guard04Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_rallyGroup;

    // Automatic Variable Declarations
    unitgroup auto5ED66DA4_g;
    int auto5ED66DA4_u;
    unit auto5ED66DA4_var;
    unitgroup auto8988779B_g;
    int auto8988779B_u;
    unit auto8988779B_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_rallyGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_rallyGroup = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto5ED66DA4_g = lv_rallyGroup;
    auto5ED66DA4_u = UnitGroupCount(auto5ED66DA4_g, c_unitCountAll);
    for (;; auto5ED66DA4_u -= 1) {
        auto5ED66DA4_var = UnitGroupUnitFromEnd(auto5ED66DA4_g, auto5ED66DA4_u);
        if (auto5ED66DA4_var == null) { break; }
        AISetUnitScriptControlled(auto5ED66DA4_var, true);
        UnitIssueOrder(auto5ED66DA4_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(874901812)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto8988779B_g = lv_rallyGroup;
    auto8988779B_u = UnitGroupCount(auto8988779B_g, c_unitCountAll);
    for (;; auto8988779B_u -= 1) {
        auto8988779B_var = UnitGroupUnitFromEnd(auto8988779B_g, auto8988779B_u);
        if (auto8988779B_var == null) { break; }
        AISetUnitScriptControlled(auto8988779B_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Guard04Subway04_Init () {
    gt_MapLab04Guard04Subway04 = TriggerCreate("gt_MapLab04Guard04Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Reinforce01 Air Left
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Reinforce01AirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1097657986);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Reinforce01AirLeft_Init () {
    gt_MapLab04Reinforce01AirLeft = TriggerCreate("gt_MapLab04Reinforce01AirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Reinforce02 Air Right
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04Reinforce02AirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(1883917573);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04Reinforce02AirRight_Init () {
    gt_MapLab04Reinforce02AirRight = TriggerCreate("gt_MapLab04Reinforce02AirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Lab04 Reinforce Amon
//--------------------------------------------------------------------------------------------------
bool gt_MapLab04ReinforceAmon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    unit lv_hybrid;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(1502970869);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(134616864)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(941611309)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(633420946)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(633420946)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(147658388)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_hybrid = UnitLastCreated();
    AISetUnitScriptControlled(lv_hybrid, true);
    UnitIssueOrder(lv_hybrid, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(147658388)), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    AISetUnitScriptControlled(lv_hybrid, false);
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapLab04ReinforceAmon_Init () {
    gt_MapLab04ReinforceAmon = TriggerCreate("gt_MapLab04ReinforceAmon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Final Battle Amon01
//--------------------------------------------------------------------------------------------------
bool gt_FinalBattleAmon01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(761720188);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FinalBattleAmon01_Init () {
    gt_FinalBattleAmon01 = TriggerCreate("gt_FinalBattleAmon01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Final Battle Amon02
//--------------------------------------------------------------------------------------------------
bool gt_FinalBattleAmon02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(668414714);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FinalBattleAmon02_Init () {
    gt_FinalBattleAmon02 = TriggerCreate("gt_FinalBattleAmon02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Final Battle Amon03
//--------------------------------------------------------------------------------------------------
bool gt_FinalBattleAmon03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(528306489);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FinalBattleAmon03_Init () {
    gt_FinalBattleAmon03 = TriggerCreate("gt_FinalBattleAmon03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Final Battle Amon04
//--------------------------------------------------------------------------------------------------
bool gt_FinalBattleAmon04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_rift;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnPoint = PointFromId(408751757);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "VoidRiftUnselectable", c_unitCreateIgnorePlacement, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    lv_rift = UnitLastCreated();
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hybrid", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridDestroyer", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HybridNemesis", 0, gv_pLAYER_03_ENEMY, lv_spawnPoint);
    UnitGroupAdd(gv_final_Battle_Group, UnitLastCreated());
    Wait(1.0, c_timeGame);
    UnitKill(lv_rift);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FinalBattleAmon04_Init () {
    gt_FinalBattleAmon04 = TriggerCreate("gt_FinalBattleAmon04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Final Battle Attack Players
//--------------------------------------------------------------------------------------------------
bool gt_FinalBattleAttackPlayers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF9F17762_g;
    int autoF9F17762_u;
    unit autoF9F17762_var;
    unitgroup auto9857D84F_g;
    int auto9857D84F_u;
    unit auto9857D84F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    while ((gv_game_Over == false) && (UnitGroupCount(gv_final_Battle_Group, c_unitCountAlive) > 0)) {
        autoF9F17762_g = gv_final_Battle_Group;
        autoF9F17762_u = UnitGroupCount(autoF9F17762_g, c_unitCountAll);
        for (;; autoF9F17762_u -= 1) {
            autoF9F17762_var = UnitGroupUnitFromEnd(autoF9F17762_g, autoF9F17762_u);
            if (autoF9F17762_var == null) { break; }
            AISetUnitScriptControlled(autoF9F17762_var, true);
            UnitIssueOrder(autoF9F17762_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(249)), c_orderQueueReplace);
        }
        Wait(0.5, c_timeGame);
        auto9857D84F_g = gv_final_Battle_Group;
        auto9857D84F_u = UnitGroupCount(auto9857D84F_g, c_unitCountAll);
        for (;; auto9857D84F_u -= 1) {
            auto9857D84F_var = UnitGroupUnitFromEnd(auto9857D84F_g, auto9857D84F_u);
            if (auto9857D84F_var == null) { break; }
            AISetUnitScriptControlled(auto9857D84F_var, false);
        }
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FinalBattleAttackPlayers_Init () {
    gt_FinalBattleAttackPlayers = TriggerCreate("gt_FinalBattleAttackPlayers_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Q
//--------------------------------------------------------------------------------------------------
bool gt_DreggQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_DreggCreate, true, true);
    TriggerExecute(gt_DreggPing, true, false);
    TriggerExecute(gt_DreggSetStateChannel, true, false);
    TriggerExecute(gt_DreggSetKillableState, true, false);
    TriggerExecute(gt_DreggEvolve, true, false);
    TriggerExecute(gt_DreggIssueOrder, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggQ_Init () {
    gt_DreggQ = TriggerCreate("gt_DreggQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Create
//--------------------------------------------------------------------------------------------------
bool gt_DreggCreate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_unburrowTime;
    unit lv_fx;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unburrowTime = 2.0;

    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Channel_Area = RegionFromId(15);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "DreggBurrowEscape", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, RegionGetCenter(RegionFromId(15)));
    lv_fx = UnitLastCreated();
    UnitCreate(1, "Dregg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, RegionGetCenter(RegionFromId(15)), 225.0);
    gv_dregg = UnitLastCreated();
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, true);
    libNtve_gf_PauseUnit(gv_dregg, true);
    ActorSend(libNtve_gf_MainActorofUnit(gv_dregg), "AnimPlay Walk Unburrow");
    Wait(lv_unburrowTime, c_timeGame);
    libNtve_gf_PauseUnit(gv_dregg, false);
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, false);
    UnitKill(lv_fx);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggCreate_Init () {
    gt_DreggCreate = TriggerCreate("gt_DreggCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Respawn
//--------------------------------------------------------------------------------------------------
bool gt_DreggRespawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_unburrowTime;
    unit lv_fx;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unburrowTime = 2.0;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "DreggBurrowEscape", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, UnitGetPosition(gv_dregg));
    lv_fx = UnitLastCreated();
    libNtve_gf_ShowHideUnit(gv_dregg, true);
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, true);
    libNtve_gf_PauseUnit(gv_dregg, true);
    ActorSend(libNtve_gf_MainActorofUnit(gv_dregg), "AnimPlay Walk Unburrow");
    Wait(lv_unburrowTime, c_timeGame);
    libNtve_gf_PauseUnit(gv_dregg, false);
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, false);
    UnitKill(lv_fx);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggRespawn_Init () {
    gt_DreggRespawn = TriggerCreate("gt_DreggRespawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Lab Move
//--------------------------------------------------------------------------------------------------
bool gt_DreggLabMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(gv_dregg, RegionGetCenter(RegionFromId(15)), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggLabMove_Init () {
    gt_DreggLabMove = TriggerCreate("gt_DreggLabMove_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Ping
//--------------------------------------------------------------------------------------------------
bool gt_DreggPing_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PingIsVisible(gv_dregg_Ping) == true)) {
        PingSetPosition(gv_dregg_Ping, UnitGetPosition(gv_dregg));
        PingSetUnit(gv_dregg_Ping, gv_dregg);
    }
    else {
        if ((gv_dregg_Ready_Final_Battle == true)) {
            libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, UnitGetPosition(gv_dregg), StringExternal("Param/Value/CF0107E6"));
        }
        else {
            libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(gv_dregg), StringExternal("Param/Value/15924716"));
        }
        gv_dregg_Ping = PingLastCreated();
        PingSetUnit(gv_dregg_Ping, gv_dregg);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggPing_Init () {
    gt_DreggPing = TriggerCreate("gt_DreggPing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Ping Destroy
//--------------------------------------------------------------------------------------------------
bool gt_DreggPingDestroy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_dregg_Ping);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggPingDestroy_Init () {
    gt_DreggPingDestroy = TriggerCreate("gt_DreggPingDestroy_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set Killable State
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetKillableState_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_dregg_Ready_Final_Battle == true)) {
        UnitBehaviorRemove(gv_dregg, "PreventDeath", 1);
        TriggerEnable(gt_DreggDied, true);
        TriggerEnable(gt_DreggCannotDie, false);
    }
    else {
        TriggerEnable(gt_DreggDied, false);
        TriggerEnable(gt_DreggCannotDie, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetKillableState_Init () {
    gt_DreggSetKillableState = TriggerCreate("gt_DreggSetKillableState_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Cannot Die
//--------------------------------------------------------------------------------------------------
bool gt_DreggCannotDie_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_burrowTiming;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_burrowTiming = 1.4;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_dregg))) {
            return false;
        }

        if (!((EventUnitDamageAbsorbed() == 0.0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_DreggPingDestroy, true, false);
    TriggerExecute(gt_DreggSetStateFleed, true, false);
    TriggerExecute(gt_DreggFleesEffect, true, true);
    TriggerExecute(gt_DreggFleeMove, true, false);
    TriggerExecute(gt_DreggHasFleeandHealing, true, false);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionDreggFlees, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggCannotDie_Init () {
    gt_DreggCannotDie = TriggerCreate("gt_DreggCannotDie_Func");
    TriggerEnable(gt_DreggCannotDie, false);
    TriggerAddEventUnitDamaged(gt_DreggCannotDie, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Died
//--------------------------------------------------------------------------------------------------
bool gt_DreggDied_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_dregg))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    gv_victory_Point = UnitGetPosition(EventUnit());
    TriggerExecute(gt_MainObjDestroyDreggComplete, true, false);
    TriggerExecute(gt_DreggPingDestroy, true, false);
    TriggerExecute(gt_Victory, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggDied_Init () {
    gt_DreggDied = TriggerCreate("gt_DreggDied_Func");
    TriggerEnable(gt_DreggDied, false);
    TriggerAddEventUnitDied(gt_DreggDied, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Flees Effect
//--------------------------------------------------------------------------------------------------
bool gt_DreggFleesEffect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_fx;
    fixed lv_burrowTiming;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_burrowTiming = 1.8;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "DreggBurrowEscape", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, UnitGetPosition(gv_dregg));
    lv_fx = UnitLastCreated();
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, true);
    UnitIssueOrder(gv_dregg, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    SoundPlayAtPointForPlayer(SoundLink("PrimalUltralisk_Ready", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_dregg), 0.0, 100.0, 0.0);
    libNtve_gf_PauseUnit(gv_dregg, true);
    ActorSend(libNtve_gf_MainActorofUnit(gv_dregg), "AnimPlay Walk Burrow");
    Wait(lv_burrowTiming, c_timeGame);
    libNtve_gf_ShowHideUnit(gv_dregg, false);
    libNtve_gf_PauseUnit(gv_dregg, false);
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, false);
    UnitKill(lv_fx);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggFleesEffect_Init () {
    gt_DreggFleesEffect = TriggerCreate("gt_DreggFleesEffect_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Has Flee and Healing
//--------------------------------------------------------------------------------------------------
bool gt_DreggHasFleeandHealing_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_dregg_Flee_Time = 0;
    while ((gv_dregg_Has_Fleed == true)) {
        if ((gv_dregg_Flee_Time >= gv_dregg_Flee_Recovery_Time)) {
            UnitSetPropertyFixed(gv_dregg, c_unitPropLifePercent, 100.0);
            TriggerExecute(gt_DreggLabMove, true, true);
            TriggerExecute(gt_DreggRespawn, true, true);
            TriggerExecute(gt_DreggPing, true, false);
            TriggerExecute(gt_DreggSetKillableState, true, false);
            TriggerExecute(gt_DreggSetStateEvolvingorFinalBattle, true, false);
            TriggerExecute(gt_DreggIssueOrder, true, false);
        }
        else {
            gv_dregg_Flee_Time += 1;
            Wait(1.0, c_timeGame);
        }
    }
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggHasFleeandHealing_Init () {
    gt_DreggHasFleeandHealing = TriggerCreate("gt_DreggHasFleeandHealing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Flee for Final Battle
//--------------------------------------------------------------------------------------------------
bool gt_DreggFleeforFinalBattle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_dregg_Has_Fleed != true)) {
        TriggerExecute(gt_DreggPingDestroy, true, false);
        TriggerExecute(gt_DreggSetStateFleed, true, false);
        TriggerExecute(gt_DreggFleesEffect, true, true);
        TriggerExecute(gt_DreggFleeMove, true, false);
    }

    TriggerExecute(gt_DreggSetStateFinalBattle, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggFleeforFinalBattle_Init () {
    gt_DreggFleeforFinalBattle = TriggerCreate("gt_DreggFleeforFinalBattle_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Flee Move
//--------------------------------------------------------------------------------------------------
bool gt_DreggFleeMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(gv_dregg, PointFromId(73447096), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggFleeMove_Init () {
    gt_DreggFleeMove = TriggerCreate("gt_DreggFleeMove_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Issue Order
//--------------------------------------------------------------------------------------------------
bool gt_DreggIssueOrder_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_dregg_Is_Channel == true)) {
        TriggerExecute(gt_DreggStayInLabChannel, true, false);
        TriggerExecute(gt_DreggEvolve, true, false);
    }

    if ((gv_dregg_Is_Attacking == true)) {
        TriggerExecute(gt_DreggAttackQ, true, false);
    }

    if ((gv_dregg_Has_Fleed == true)) {
        TriggerExecute(gt_DreggHasFleeandHealing, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggIssueOrder_Init () {
    gt_DreggIssueOrder = TriggerCreate("gt_DreggIssueOrder_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Stay In Lab Channel
//--------------------------------------------------------------------------------------------------
bool gt_DreggStayInLabChannel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while ((gv_dregg_Is_Channel == true)) {
        if ((UnitCount("Dregg", gv_pLAYER_04_ENEMY, gv_dregg_Channel_Area, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
            AISetUnitScriptControlled(gv_dregg, true);
            UnitIssueOrder(gv_dregg, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(gv_dregg_Channel_Area)), c_orderQueueReplace);
            Wait(0.5, c_timeGame);
            AISetUnitScriptControlled(gv_dregg, false);
        }
        else {
            Wait(2.0, c_timeGame);
        }
    }
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggStayInLabChannel_Init () {
    gt_DreggStayInLabChannel = TriggerCreate("gt_DreggStayInLabChannel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Evolve
//--------------------------------------------------------------------------------------------------
bool gt_DreggEvolve_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while ((gv_dregg_Is_Channel == true)) {
        TriggerExecute(gt_ProgressBarUpdate, true, false);
        if ((ModI(gv_progress_Bar_Evolution, (gv_progress_Bar_Max / 10)) == 0)) {
            gv_dregg_Is_Channel = false;
            gv_dregg_Is_Evolving = true;
            TriggerExecute(gt_DreggEvolveEffect, true, true);
            gv_dregg_Is_Evolving = false;
            gv_dregg_Is_Channel = true;
        }

        if ((gv_progress_Bar_Evolution >= gv_progress_Bar_Max)) {
            TriggerExecute(gt_DreggSetStateWon, true, false);
        }

        Wait(1.0, c_timeGame);
    }
    if ((gv_dregg_Has_Won == true)) {
        TriggerExecute(gt_MainObjDreggEvolutionFailed, true, false);
        TriggerExecute(gt_DefeatDreggFullyEvolved, true, false);
    }

    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggEvolve_Init () {
    gt_DreggEvolve = TriggerCreate("gt_DreggEvolve_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Evolve Effect
//--------------------------------------------------------------------------------------------------
bool gt_DreggEvolveEffect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_burrowTiming;
    fixed lv_cocoonTime;
    fixed lv_dreggHealthPercentage;
    fixed lv_dreggFacing;
    point lv_dreggPoint;
    int lv_dreggKills;
    unit lv_cocoon;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_burrowTiming = 1.4;
    lv_cocoonTime = 2.0;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_dreggHealthPercentage = UnitGetPropertyFixed(gv_dregg, c_unitPropLifePercent, c_unitPropCurrent);
    lv_dreggFacing = UnitGetFacing(gv_dregg);
    lv_dreggPoint = UnitGetPosition(gv_dregg);
    if ((ModI(gv_progress_Bar_Evolution, 20) == 0)) {
        TriggerExecute(gt_DreggSetRank2, true, false);
    }

    if ((ModI(gv_progress_Bar_Evolution, 50) == 0)) {
        TriggerExecute(gt_DreggSetRank3, true, false);
    }

    if ((ModI(gv_progress_Bar_Evolution, 80) == 0)) {
        TriggerExecute(gt_DreggSetRank4, true, false);
    }

    lv_dreggKills = libNtve_gf_UnitGetPropertyKills(gv_dregg, c_unitPropCurrent);
    TechTreeUpgradeAddLevel(gv_pLAYER_04_ENEMY, "DreggCocoonScale", 1);
    libNtve_gf_MakeUnitInvulnerable(gv_dregg, true);
    libNtve_gf_PauseUnit(gv_dregg, true);
    ActorSend(libNtve_gf_MainActorofUnit(gv_dregg), "AnimPlay Walk Burrow");
    Wait(lv_burrowTiming, c_timeGame);
    UnitRemove(gv_dregg);
    UnitCreate(1, "DreggCocoon", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, lv_dreggPoint, lv_dreggFacing);
    lv_cocoon = UnitLastCreated();
    TechTreeUpgradeAddLevel(gv_pLAYER_04_ENEMY, "DreggHealth", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_04_ENEMY, "DreggWeapons", 1);
    Wait(lv_cocoonTime, c_timeGame);
    UnitKill(lv_cocoon);
    UnitCreate(1, "Dregg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ENEMY, lv_dreggPoint, lv_dreggFacing);
    gv_dregg = UnitLastCreated();
    UnitSetPropertyFixed(gv_dregg, c_unitPropLifePercent, lv_dreggHealthPercentage);
    UnitSetPropertyFixed(gv_dregg, c_unitPropKills, lv_dreggKills);
    TriggerExecute(gt_DreggPing, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggEvolveEffect_Init () {
    gt_DreggEvolveEffect = TriggerCreate("gt_DreggEvolveEffect_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Attack Q
//--------------------------------------------------------------------------------------------------
bool gt_DreggAttackQ_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while ((gv_dregg_Is_Evolving == true)) {
        Wait(1.0, c_timeGame);
    }
    if ((gv_dregg_Is_Attacking != true)) {
        TriggerExecute(gt_DreggAttackSetup, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggAttackQ_Init () {
    gt_DreggAttackQ = TriggerCreate("gt_DreggAttackQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Attack Setup 
//--------------------------------------------------------------------------------------------------
bool gt_DreggAttackSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_dregg_Is_Channel == true)) {
        TriggerExecute(gt_DreggSetStateAttacking, true, false);
        TriggerExecute(gt_DreggFleesEffect, true, true);
    }
    else {
        TriggerExecute(gt_DreggSetStateAttacking, true, false);
    }
    if ((RandomInt(0, 100) < 50)) {
        lv_spawnPoint = RegionGetCenter(RegionFromId(8));
    }
    else {
        lv_spawnPoint = RegionGetCenter(RegionFromId(13));
    }
    UnitSetPosition(gv_dregg, lv_spawnPoint, false);
    TriggerExecute(gt_DreggRespawn, true, true);
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, gf_GetDreggResourceBucketET(), gf_GetDreggTechLevelET(), lv_spawnPoint, true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    TriggerExecute(gt_DreggPing, true, false);
    TriggerExecute(gt_DreggSetKillableState, true, false);
    Wait(2.0, c_timeGame);
    TriggerExecute(gt_DreggAttackPlayers, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggAttackSetup_Init () {
    gt_DreggAttackSetup = TriggerCreate("gt_DreggAttackSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Attack Players
//--------------------------------------------------------------------------------------------------
bool gt_DreggAttackPlayers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while ((gv_dregg_Is_Attacking == true)) {
        AISetUnitScriptControlled(gv_dregg, true);
        UnitIssueOrder(gv_dregg, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(249)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        AISetUnitScriptControlled(gv_dregg, false);
        Wait(2.0, c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggAttackPlayers_Init () {
    gt_DreggAttackPlayers = TriggerCreate("gt_DreggAttackPlayers_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set Rank 2
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetRank2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitSetPropertyFixed(gv_dregg, c_unitPropKills, 1000.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetRank2_Init () {
    gt_DreggSetRank2 = TriggerCreate("gt_DreggSetRank2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set Rank 3
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetRank3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitSetPropertyFixed(gv_dregg, c_unitPropKills, 2000.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetRank3_Init () {
    gt_DreggSetRank3 = TriggerCreate("gt_DreggSetRank3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set Rank 4
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetRank4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitSetPropertyFixed(gv_dregg, c_unitPropKills, 3000.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetRank4_Init () {
    gt_DreggSetRank4 = TriggerCreate("gt_DreggSetRank4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Channel
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateChannel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Is_Channel = true;
    gv_dregg_Is_Attacking = false;
    gv_dregg_Has_Fleed = false;
    gv_dregg_Has_Won = false;
    gv_dregg_Ready_Final_Battle = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateChannel_Init () {
    gt_DreggSetStateChannel = TriggerCreate("gt_DreggSetStateChannel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Attacking
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateAttacking_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Is_Channel = false;
    gv_dregg_Is_Attacking = true;
    gv_dregg_Has_Fleed = false;
    gv_dregg_Has_Won = false;
    gv_dregg_Ready_Final_Battle = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateAttacking_Init () {
    gt_DreggSetStateAttacking = TriggerCreate("gt_DreggSetStateAttacking_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Fleed
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateFleed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Is_Channel = false;
    gv_dregg_Is_Attacking = false;
    gv_dregg_Has_Fleed = true;
    gv_dregg_Has_Won = false;
    gv_dregg_Ready_Final_Battle = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateFleed_Init () {
    gt_DreggSetStateFleed = TriggerCreate("gt_DreggSetStateFleed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Won
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateWon_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Is_Channel = false;
    gv_dregg_Is_Attacking = false;
    gv_dregg_Has_Fleed = false;
    gv_dregg_Has_Won = true;
    gv_dregg_Ready_Final_Battle = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateWon_Init () {
    gt_DreggSetStateWon = TriggerCreate("gt_DreggSetStateWon_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Final Battle
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateFinalBattle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_dregg_Is_Channel = false;
    gv_dregg_Is_Attacking = false;
    gv_dregg_Has_Fleed = false;
    gv_dregg_Has_Won = false;
    gv_dregg_Ready_Final_Battle = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateFinalBattle_Init () {
    gt_DreggSetStateFinalBattle = TriggerCreate("gt_DreggSetStateFinalBattle_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dregg Set State Evolving or Final Battle
//--------------------------------------------------------------------------------------------------
bool gt_DreggSetStateEvolvingorFinalBattle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_dregg_Ready_Final_Battle == true)) {
        TriggerExecute(gt_DreggSetStateFinalBattle, true, false);
    }
    else {
        TriggerExecute(gt_DreggSetStateChannel, true, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DreggSetStateEvolvingorFinalBattle_Init () {
    gt_DreggSetStateEvolvingorFinalBattle = TriggerCreate("gt_DreggSetStateEvolvingorFinalBattle_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Spawn
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_dropPod;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dropPod = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionScoutSending, true, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Changeling", 0, gv_pLAYER_05_ALLY, PointFromId(195460396));
    gv_syg_Scout_Left = UnitLastCreated();
    UnitGroupAdd(lv_dropPod, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Changeling", 0, gv_pLAYER_05_ALLY, PointFromId(195460396));
    gv_syg_Scout_Top_Left = UnitLastCreated();
    UnitGroupAdd(lv_dropPod, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Changeling", 0, gv_pLAYER_05_ALLY, PointFromId(195460396));
    gv_syg_Scout_Mid = UnitLastCreated();
    UnitGroupAdd(lv_dropPod, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Changeling", 0, gv_pLAYER_05_ALLY, PointFromId(195460396));
    gv_syg_Scout_Right = UnitLastCreated();
    UnitGroupAdd(lv_dropPod, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Changeling", 0, gv_pLAYER_05_ALLY, PointFromId(195460396));
    gv_syg_Scout_Top_Right = UnitLastCreated();
    UnitGroupAdd(lv_dropPod, UnitLastCreated());
    libCOMI_gf_CreateDropPod(libCOMI_ge_DropPodRace_Zerg, PointFromId(195460396), lv_dropPod, false, gv_pLAYER_05_ALLY);
    TriggerExecute(gt_SygScoutAllianceTempOn, true, false);
    TriggerExecute(gt_SygScoutLeft, true, false);
    TriggerExecute(gt_SygScoutTopLeft, true, false);
    TriggerExecute(gt_SygScoutMid, true, false);
    TriggerExecute(gt_SygScoutRight, true, false);
    TriggerExecute(gt_SygScoutTopRight, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutSpawn_Init () {
    gt_SygScoutSpawn = TriggerCreate("gt_SygScoutSpawn_Func");
    TriggerEnable(gt_SygScoutSpawn, false);
    TriggerAddEventTimeElapsed(gt_SygScoutSpawn, 60.0, c_timeAI);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Left
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_scout;
    point lv_rally01;
    point lv_rally02;
    point lv_rally03;
    point lv_rally04;
    point lv_rally05;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_rally01 = PointFromId(1510092023);
    lv_rally02 = PointFromId(563153749);
    lv_rally03 = PointFromId(725354236);
    lv_rally04 = PointFromId(912710867);
    lv_rally05 = RegionGetCenter(RegionFromId(29));
    lv_scout = gv_syg_Scout_Left;
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally01), c_orderQueueReplace);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally02), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally03), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally04), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally05), c_orderQueueAddToEnd);
    TriggerEnable(gt_SygScoutExitLeftSubway02, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutLeft_Init () {
    gt_SygScoutLeft = TriggerCreate("gt_SygScoutLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Top Left
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutTopLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_scout;
    point lv_rally01;
    point lv_rally02;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_rally01 = PointFromId(719060252);
    lv_rally02 = RegionGetCenter(RegionFromId(28));
    lv_scout = gv_syg_Scout_Top_Left;
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally01), c_orderQueueReplace);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally02), c_orderQueueAddToEnd);
    TriggerEnable(gt_SygScoutExitTopLeftSubway01, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutTopLeft_Init () {
    gt_SygScoutTopLeft = TriggerCreate("gt_SygScoutTopLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Mid
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutMid_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_scout;
    point lv_rally01;
    point lv_rally02;
    point lv_rally03;
    point lv_rally04;
    point lv_rally05;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_rally01 = PointFromId(1849710485);
    lv_rally02 = PointFromId(807457146);
    lv_rally03 = PointFromId(1516265075);
    lv_rally04 = PointFromId(514830361);
    lv_rally05 = RegionGetCenter(RegionFromId(30));
    lv_scout = gv_syg_Scout_Mid;
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally01), c_orderQueueReplace);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally02), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally03), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally04), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally05), c_orderQueueAddToEnd);
    TriggerEnable(gt_SygScoutExitMidSubway03, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutMid_Init () {
    gt_SygScoutMid = TriggerCreate("gt_SygScoutMid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Right
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_scout;
    point lv_rally01;
    point lv_rally02;
    point lv_rally03;
    point lv_rally04;
    point lv_rally05;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_rally01 = PointFromId(759578535);
    lv_rally02 = PointFromId(2069890031);
    lv_rally03 = PointFromId(329757597);
    lv_rally04 = PointFromId(1938974599);
    lv_rally05 = RegionGetCenter(RegionFromId(32));
    lv_scout = gv_syg_Scout_Right;
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally01), c_orderQueueReplace);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally02), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally03), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally04), c_orderQueueAddToEnd);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally05), c_orderQueueAddToEnd);
    TriggerEnable(gt_SygScoutExitRightSubway05, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutRight_Init () {
    gt_SygScoutRight = TriggerCreate("gt_SygScoutRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Top Right
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutTopRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_scout;
    point lv_rally01;
    point lv_rally02;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_rally01 = PointFromId(1526171983);
    lv_rally02 = RegionGetCenter(RegionFromId(31));
    lv_scout = gv_syg_Scout_Top_Right;
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally01), c_orderQueueReplace);
    UnitIssueOrder(lv_scout, OrderTargetingPoint(AbilityCommand("move", 0), lv_rally02), c_orderQueueAddToEnd);
    TriggerEnable(gt_SygScoutExitTopRightSubway04, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutTopRight_Init () {
    gt_SygScoutTopRight = TriggerCreate("gt_SygScoutTopRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Alliance Temp On
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutAllianceTempOn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllianceOneWay(gv_pLAYER_03_ENEMY, gv_pLAYER_05_ALLY, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAllianceOneWay(gv_pLAYER_04_ENEMY, gv_pLAYER_05_ALLY, libNtve_ge_AllianceSetting_Neutral);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutAllianceTempOn_Init () {
    gt_SygScoutAllianceTempOn = TriggerCreate("gt_SygScoutAllianceTempOn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Alliance Temp Off
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutAllianceTempOff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllianceOneWay(gv_pLAYER_03_ENEMY, gv_pLAYER_05_ALLY, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAllianceOneWay(gv_pLAYER_04_ENEMY, gv_pLAYER_05_ALLY, libNtve_ge_AllianceSetting_Enemy);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutAllianceTempOff_Init () {
    gt_SygScoutAllianceTempOff = TriggerCreate("gt_SygScoutAllianceTempOff_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Exit Left Subway02
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutExitLeftSubway02_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ALLY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(2.0, c_timeGame);
    UnitRemove(EventUnit());
    TriggerExecute(gt_MapSubway02Close, true, false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutExitLeftSubway02_Init () {
    gt_SygScoutExitLeftSubway02 = TriggerCreate("gt_SygScoutExitLeftSubway02_Func");
    TriggerEnable(gt_SygScoutExitLeftSubway02, false);
    TriggerAddEventUnitRegion(gt_SygScoutExitLeftSubway02, null, RegionFromId(29), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Exit Top Left Subway01
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutExitTopLeftSubway01_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ALLY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(2.0, c_timeGame);
    UnitRemove(EventUnit());
    TriggerExecute(gt_MapSubway01Close, true, false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutExitTopLeftSubway01_Init () {
    gt_SygScoutExitTopLeftSubway01 = TriggerCreate("gt_SygScoutExitTopLeftSubway01_Func");
    TriggerEnable(gt_SygScoutExitTopLeftSubway01, false);
    TriggerAddEventUnitRegion(gt_SygScoutExitTopLeftSubway01, null, RegionFromId(28), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Exit Mid Subway03
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutExitMidSubway03_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ALLY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(2.0, c_timeGame);
    UnitRemove(EventUnit());
    TriggerExecute(gt_MapSubway03Close, true, false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutExitMidSubway03_Init () {
    gt_SygScoutExitMidSubway03 = TriggerCreate("gt_SygScoutExitMidSubway03_Func");
    TriggerEnable(gt_SygScoutExitMidSubway03, false);
    TriggerAddEventUnitRegion(gt_SygScoutExitMidSubway03, null, RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Exit Right Subway05
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutExitRightSubway05_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ALLY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(2.0, c_timeGame);
    UnitRemove(EventUnit());
    TriggerExecute(gt_MapSubway05Close, true, false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutExitRightSubway05_Init () {
    gt_SygScoutExitRightSubway05 = TriggerCreate("gt_SygScoutExitRightSubway05_Func");
    TriggerEnable(gt_SygScoutExitRightSubway05, false);
    TriggerAddEventUnitRegion(gt_SygScoutExitRightSubway05, null, RegionFromId(32), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Exit Top Right Subway04
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutExitTopRightSubway04_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ALLY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(2.0, c_timeGame);
    UnitRemove(EventUnit());
    TriggerExecute(gt_MapSubway04Close, true, false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutExitTopRightSubway04_Init () {
    gt_SygScoutExitTopRightSubway04 = TriggerCreate("gt_SygScoutExitTopRightSubway04_Func");
    TriggerEnable(gt_SygScoutExitTopRightSubway04, false);
    TriggerAddEventUnitRegion(gt_SygScoutExitTopRightSubway04, null, RegionFromId(31), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Syg Scout Force Lab Activation
//--------------------------------------------------------------------------------------------------
bool gt_SygScoutForceLabActivation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_GameScoutsGathedData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SygScoutForceLabActivation_Init () {
    gt_SygScoutForceLabActivation = TriggerCreate("gt_SygScoutForceLabActivation_Func");
    TriggerAddEventTimeElapsed(gt_SygScoutForceLabActivation, 150.0, c_timeAI);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Overload Labs Setup
//--------------------------------------------------------------------------------------------------
bool gt_MainObjOverloadLabsSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectiveCampaign("OverloadLabsET");
    gv_obj_Overload_Labs = ObjectiveLastCreated();
    ObjectiveSetPriority(ObjectiveLastCreated(), 10);
    libCOMI_gf_SetMissionObjectiveProgress("OverloadLabsET", gv_obj_Overload_Labs_Progress);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjOverloadLabsSetup_Init () {
    gt_MainObjOverloadLabsSetup = TriggerCreate("gt_MainObjOverloadLabsSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Overload Labs Update
//--------------------------------------------------------------------------------------------------
bool gt_MainObjOverloadLabsUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_obj_Overload_Labs_Progress += 1;
    libCOMI_gf_SetMissionObjectiveProgress("OverloadLabsET", gv_obj_Overload_Labs_Progress);
    if ((gv_obj_Overload_Labs_Progress >= 4)) {
        TriggerExecute(gt_MainObjOverloadLabCompleted, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjOverloadLabsUpdate_Init () {
    gt_MainObjOverloadLabsUpdate = TriggerCreate("gt_MainObjOverloadLabsUpdate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Overload Lab Completed
//--------------------------------------------------------------------------------------------------
bool gt_MainObjOverloadLabCompleted_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_obj_Overload_Labs, c_objectiveStateCompleted);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjOverloadLabCompleted_Init () {
    gt_MainObjOverloadLabCompleted = TriggerCreate("gt_MainObjOverloadLabCompleted_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Overload Lab Hide
//--------------------------------------------------------------------------------------------------
bool gt_MainObjOverloadLabHide_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveShow(gv_obj_Overload_Labs, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjOverloadLabHide_Init () {
    gt_MainObjOverloadLabHide = TriggerCreate("gt_MainObjOverloadLabHide_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Dregg Evolution Setup
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDreggEvolutionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectiveCampaign("EvolveDreggET");
    gv_obj_Prevent_Evolution = ObjectiveLastCreated();
    ObjectiveSetPriority(ObjectiveLastCreated(), 9);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDreggEvolutionSetup_Init () {
    gt_MainObjDreggEvolutionSetup = TriggerCreate("gt_MainObjDreggEvolutionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Dregg Evolution Completed
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDreggEvolutionCompleted_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_obj_Prevent_Evolution, c_objectiveStateCompleted);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDreggEvolutionCompleted_Init () {
    gt_MainObjDreggEvolutionCompleted = TriggerCreate("gt_MainObjDreggEvolutionCompleted_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Dregg Evolution Failed
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDreggEvolutionFailed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveSetState(gv_obj_Prevent_Evolution, c_objectiveStateFailed);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDreggEvolutionFailed_Init () {
    gt_MainObjDreggEvolutionFailed = TriggerCreate("gt_MainObjDreggEvolutionFailed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Dregg Evolution Hide
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDreggEvolutionHide_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveShow(gv_obj_Prevent_Evolution, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDreggEvolutionHide_Init () {
    gt_MainObjDreggEvolutionHide = TriggerCreate("gt_MainObjDreggEvolutionHide_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Destroy Dregg Setup
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDestroyDreggSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectiveCampaign("DestroyDreggET");
    gv_obj_Destroy_Dregg = ObjectiveLastCreated();
    ObjectiveSetPriority(ObjectiveLastCreated(), 12);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDestroyDreggSetup_Init () {
    gt_MainObjDestroyDreggSetup = TriggerCreate("gt_MainObjDestroyDreggSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MainObj Destroy Dregg Complete
//--------------------------------------------------------------------------------------------------
bool gt_MainObjDestroyDreggComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_obj_Destroy_Dregg, c_objectiveStateCompleted);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainObjDestroyDreggComplete_Init () {
    gt_MainObjDestroyDreggComplete = TriggerCreate("gt_MainObjDestroyDreggComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mark Bridge Controls
//--------------------------------------------------------------------------------------------------
bool gt_MarkBridgeControls_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(805226978)) == true)) {
        libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(UnitFromId(805226978)), StringExternal("Param/Value/B4F0C0B7"));
        gv_obj_Ping[0][0] = PingLastCreated();
    }

    if ((UnitIsAlive(UnitFromId(783558179)) == true)) {
        libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(UnitFromId(783558179)), StringExternal("Param/Value/FA9A0FC7"));
        gv_obj_Ping[1][0] = PingLastCreated();
    }

    if ((UnitIsAlive(UnitFromId(585359531)) == true)) {
        libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(UnitFromId(585359531)), StringExternal("Param/Value/43C2849E"));
        gv_obj_Ping[2][0] = PingLastCreated();
    }

    if ((UnitIsAlive(UnitFromId(1068989153)) == true)) {
        libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(UnitFromId(1068989153)), StringExternal("Param/Value/BD52430C"));
        gv_obj_Ping[3][0] = PingLastCreated();
    }

    if ((UnitIsAlive(UnitFromId(634356193)) == true)) {
        libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_POI, UnitGetPosition(UnitFromId(634356193)), StringExternal("Param/Value/D887306A"));
        gv_obj_Ping[3][1] = PingLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarkBridgeControls_Init () {
    gt_MarkBridgeControls = TriggerCreate("gt_MarkBridgeControls_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mark Lab01
//--------------------------------------------------------------------------------------------------
bool gt_MarkLab01_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, RegionGetCenter(RegionFromId(10)), StringExternal("Param/Value/A14DB505"));
    gv_obj_Ping[0][1] = PingLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarkLab01_Init () {
    gt_MarkLab01 = TriggerCreate("gt_MarkLab01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mark Lab02
//--------------------------------------------------------------------------------------------------
bool gt_MarkLab02_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, RegionGetCenter(RegionFromId(11)), StringExternal("Param/Value/5713BEA2"));
    gv_obj_Ping[1][1] = PingLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarkLab02_Init () {
    gt_MarkLab02 = TriggerCreate("gt_MarkLab02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mark Lab03
//--------------------------------------------------------------------------------------------------
bool gt_MarkLab03_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, RegionGetCenter(RegionFromId(12)), StringExternal("Param/Value/BD5A27A1"));
    gv_obj_Ping[2][1] = PingLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarkLab03_Init () {
    gt_MarkLab03 = TriggerCreate("gt_MarkLab03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mark Lab04
//--------------------------------------------------------------------------------------------------
bool gt_MarkLab04_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, RegionGetCenter(RegionFromId(15)), StringExternal("Param/Value/CCB3F458"));
    gv_obj_Ping[3][2] = PingLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarkLab04_Init () {
    gt_MarkLab04 = TriggerCreate("gt_MarkLab04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Bridge Control Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_Lab01BridgeControlDestroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_panelDelay;
    fixed lv_animationTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelDelay = 0.5;
    lv_animationTime = 1.5;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(805226978)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_obj_Ping[0][0]);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(14), "Sparks_Protoss");
    ActorSend(ActorFromDoodad(DoodadFromId(52850694)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(716690237)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(587314144)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(834044649)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1091133429)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1818447458)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(233299590)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1827380680)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1993637842)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1379226433)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(50225907)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(805990465)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1396608636)), "AnimPlay Stand");

    Wait(lv_panelDelay, c_timeGame);
    UnitIssueOrder(UnitFromId(1656483792), Order(AbilityCommand("PortCity_Bridge_UnitS8Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(168905099), Order(AbilityCommand("PortCity_Bridge_UnitN8Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1336196423), Order(AbilityCommand("PortCity_Bridge_UnitNW8Out", 0)), c_orderQueueReplace);
    Wait(lv_animationTime, c_timeGame);
    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(14), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01BridgeControlDestroyed_Init () {
    gt_Lab01BridgeControlDestroyed = TriggerCreate("gt_Lab01BridgeControlDestroyed_Func");
    TriggerAddEventUnitDied(gt_Lab01BridgeControlDestroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Scout Sabotage
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ScoutSabotage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ActorSend(ActorFromDoodad(DoodadFromId(475688190)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1155733444)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1474256628)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(789421568)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(475688190)), "ModelSwap Korhal_Platform_LandingLights 1");
    ActorSend(ActorFromDoodad(DoodadFromId(2037433413)), "ModelSwap ElectricConduitPathMedium 3");
    ActorSend(ActorFromDoodad(DoodadFromId(974428152)), "ModelSwap ElectricConduitPathMedium 3");
    TriggerExecute(gt_MarkLab01, true, false);
    TriggerEnable(gt_Lab01Overload, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ScoutSabotage_Init () {
    gt_Lab01ScoutSabotage = TriggerCreate("gt_Lab01ScoutSabotage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Overload
//--------------------------------------------------------------------------------------------------
bool gt_Lab01Overload_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_overloaded;
    unit lv_stasis;
    region lv_lab;
    int lv_channelTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER) || (UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_lab = RegionFromId(10);
    lv_channelTime = gv_lab01_Channel_Time;
    lv_stasis = gv_lab01_Stasis;
    libCOMI_gf_DisplayUnitProgressBar(lv_stasis, gv_lab_Overload_Text, 0, gv_lab_Overload_Time);
    libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
    libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, true);
    while ((gf_PlayersInLabET(lv_lab) == true) && (lv_overloaded == false)) {
        if ((gf_EnemiesInLabET(lv_lab) == false)) {
            gv_lab01_Channel_Time += 1;
            lv_channelTime += 1;
            libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
            libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
            TriggerExecute(gt_Lab01ReinforceWavesQ, true, false);
            if ((lv_channelTime >= gv_lab_Overload_Time)) {
                lv_overloaded = true;
            }

        }

        Wait(1.0, c_timeGame);
    }
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, false);
    if ((lv_overloaded == true)) {
        TriggerExecute(gt_Lab01OverloadComplete, true, false);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01Overload_Init () {
    gt_Lab01Overload = TriggerCreate("gt_Lab01Overload_Func");
    TriggerEnable(gt_Lab01Overload, false);
    TriggerAddEventUnitRegion(gt_Lab01Overload, null, RegionFromId(10), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Overload Complete
//--------------------------------------------------------------------------------------------------
bool gt_Lab01OverloadComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionLabDestroyed, true, false);
    TriggerExecute(gt_Lab01DestroyStasisTube, true, false);
    TriggerExecute(gt_Lab01CleanDoodads, true, false);
    TriggerExecute(gt_MainObjOverloadLabsUpdate, true, false);
    TriggerExecute(gt_GameLab02Activation, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01OverloadComplete_Init () {
    gt_Lab01OverloadComplete = TriggerCreate("gt_Lab01OverloadComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Destroy Stasis Tube
//--------------------------------------------------------------------------------------------------
bool gt_Lab01DestroyStasisTube_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Terran, UnitGetPosition(gv_lab01_Stasis));
    UnitKill(gv_lab01_Stasis);
    PingDestroy(gv_obj_Ping[0][1]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01DestroyStasisTube_Init () {
    gt_Lab01DestroyStasisTube = TriggerCreate("gt_Lab01DestroyStasisTube_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Clean Doodads
//--------------------------------------------------------------------------------------------------
bool gt_Lab01CleanDoodads_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(20), "ElectricalArcs");
    ActorSend(ActorFromDoodad(DoodadFromId(475688190)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1155733444)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1474256628)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(789421568)), "ModelSwap Korhal_Platform_LandingLights 3");
    ActorSend(ActorFromDoodad(DoodadFromId(475688190)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1124859106)), "ModelSwap Streetlight 0");
    ActorSend(ActorFromDoodad(DoodadFromId(854839013)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1873939859)), "ModelSwap Streetlight 0");
    ActorSend(ActorFromDoodad(DoodadFromId(1925354516)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2135017218)), "ModelSwap Streetlight 0");
    ActorSend(ActorFromDoodad(DoodadFromId(2073743020)), "ModelSwap Streetlight 0");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01CleanDoodads_Init () {
    gt_Lab01CleanDoodads = TriggerCreate("gt_Lab01CleanDoodads_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Waves Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWavesQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Lab01ReinforceWave01Q, true, false);
    TriggerExecute(gt_Lab01ReinforceWave02Q, true, false);
    TriggerExecute(gt_Lab01ReinforceWave03Q, true, false);
    TriggerExecute(gt_Lab01ReinforceWaveAirQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWavesQ_Init () {
    gt_Lab01ReinforceWavesQ = TriggerCreate("gt_Lab01ReinforceWavesQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave01 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave01Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_01))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab01ReinforceWavesGate, true, false);
    TriggerExecute(gt_Lab01ReinforceWave01Subway03, true, false);
    TriggerExecute(gt_Lab01ReinforceWave01Subway04, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave01Q_Init () {
    gt_Lab01ReinforceWave01Q = TriggerCreate("gt_Lab01ReinforceWave01Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Waves Gate
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWavesGate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitIsAlive(UnitFromId(805226978)) == true)) {
        UnitKill(UnitFromId(805226978));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWavesGate_Init () {
    gt_Lab01ReinforceWavesGate = TriggerCreate("gt_Lab01ReinforceWavesGate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave01 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave01Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto46E67852_g;
    int auto46E67852_u;
    unit auto46E67852_var;
    unitgroup autoC05265CC_g;
    int autoC05265CC_u;
    unit autoC05265CC_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    auto46E67852_g = lv_patrol;
    auto46E67852_u = UnitGroupCount(auto46E67852_g, c_unitCountAll);
    for (;; auto46E67852_u -= 1) {
        auto46E67852_var = UnitGroupUnitFromEnd(auto46E67852_g, auto46E67852_u);
        if (auto46E67852_var == null) { break; }
        AISetUnitScriptControlled(auto46E67852_var, true);
        UnitIssueOrder(auto46E67852_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoC05265CC_g = lv_patrol;
    autoC05265CC_u = UnitGroupCount(autoC05265CC_g, c_unitCountAll);
    for (;; autoC05265CC_u -= 1) {
        autoC05265CC_var = UnitGroupUnitFromEnd(autoC05265CC_g, autoC05265CC_u);
        if (autoC05265CC_var == null) { break; }
        AISetUnitScriptControlled(autoC05265CC_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave01Subway03_Init () {
    gt_Lab01ReinforceWave01Subway03 = TriggerCreate("gt_Lab01ReinforceWave01Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave01 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave01Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto6EBAC769_g;
    int auto6EBAC769_u;
    unit auto6EBAC769_var;
    unitgroup auto009A958F_g;
    int auto009A958F_u;
    unit auto009A958F_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto6EBAC769_g = lv_patrol;
    auto6EBAC769_u = UnitGroupCount(auto6EBAC769_g, c_unitCountAll);
    for (;; auto6EBAC769_u -= 1) {
        auto6EBAC769_var = UnitGroupUnitFromEnd(auto6EBAC769_g, auto6EBAC769_u);
        if (auto6EBAC769_var == null) { break; }
        AISetUnitScriptControlled(auto6EBAC769_var, true);
        UnitIssueOrder(auto6EBAC769_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto009A958F_g = lv_patrol;
    auto009A958F_u = UnitGroupCount(auto009A958F_g, c_unitCountAll);
    for (;; auto009A958F_u -= 1) {
        auto009A958F_var = UnitGroupUnitFromEnd(auto009A958F_g, auto009A958F_u);
        if (auto009A958F_var == null) { break; }
        AISetUnitScriptControlled(auto009A958F_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave01Subway04_Init () {
    gt_Lab01ReinforceWave01Subway04 = TriggerCreate("gt_Lab01ReinforceWave01Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave02 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave02Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_02))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab01ReinforceWave02Subway03, true, false);
    TriggerExecute(gt_Lab01ReinforceWave02Subway04, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave02Q_Init () {
    gt_Lab01ReinforceWave02Q = TriggerCreate("gt_Lab01ReinforceWave02Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave02 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave02Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoAD4B54C3_g;
    int autoAD4B54C3_u;
    unit autoAD4B54C3_var;
    unitgroup autoF7DB1F17_g;
    int autoF7DB1F17_u;
    unit autoF7DB1F17_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    autoAD4B54C3_g = lv_patrol;
    autoAD4B54C3_u = UnitGroupCount(autoAD4B54C3_g, c_unitCountAll);
    for (;; autoAD4B54C3_u -= 1) {
        autoAD4B54C3_var = UnitGroupUnitFromEnd(autoAD4B54C3_g, autoAD4B54C3_u);
        if (autoAD4B54C3_var == null) { break; }
        AISetUnitScriptControlled(autoAD4B54C3_var, true);
        UnitIssueOrder(autoAD4B54C3_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoF7DB1F17_g = lv_patrol;
    autoF7DB1F17_u = UnitGroupCount(autoF7DB1F17_g, c_unitCountAll);
    for (;; autoF7DB1F17_u -= 1) {
        autoF7DB1F17_var = UnitGroupUnitFromEnd(autoF7DB1F17_g, autoF7DB1F17_u);
        if (autoF7DB1F17_var == null) { break; }
        AISetUnitScriptControlled(autoF7DB1F17_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave02Subway03_Init () {
    gt_Lab01ReinforceWave02Subway03 = TriggerCreate("gt_Lab01ReinforceWave02Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave02 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave02Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto32361497_g;
    int auto32361497_u;
    unit auto32361497_var;
    unitgroup auto4F601D52_g;
    int auto4F601D52_u;
    unit auto4F601D52_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto32361497_g = lv_patrol;
    auto32361497_u = UnitGroupCount(auto32361497_g, c_unitCountAll);
    for (;; auto32361497_u -= 1) {
        auto32361497_var = UnitGroupUnitFromEnd(auto32361497_g, auto32361497_u);
        if (auto32361497_var == null) { break; }
        AISetUnitScriptControlled(auto32361497_var, true);
        UnitIssueOrder(auto32361497_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto4F601D52_g = lv_patrol;
    auto4F601D52_u = UnitGroupCount(auto4F601D52_g, c_unitCountAll);
    for (;; auto4F601D52_u -= 1) {
        auto4F601D52_var = UnitGroupUnitFromEnd(auto4F601D52_g, auto4F601D52_u);
        if (auto4F601D52_var == null) { break; }
        AISetUnitScriptControlled(auto4F601D52_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave02Subway04_Init () {
    gt_Lab01ReinforceWave02Subway04 = TriggerCreate("gt_Lab01ReinforceWave02Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave03 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave03Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_03))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab01ReinforceWave03Subway03, true, false);
    TriggerExecute(gt_Lab01ReinforceWave03Subway04, true, false);
    TriggerEnable(gt_Lab01ReinforceWavesQ, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave03Q_Init () {
    gt_Lab01ReinforceWave03Q = TriggerCreate("gt_Lab01ReinforceWave03Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave03 Subway03
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave03Subway03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto7C38D279_g;
    int auto7C38D279_u;
    unit auto7C38D279_var;
    unitgroup auto71A57988_g;
    int auto71A57988_u;
    unit auto71A57988_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(30);
    lv_rallyPoint = PointFromId(942676696);
    TriggerExecute(gt_MapSubway03Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway03Close, true, false);
    auto7C38D279_g = lv_patrol;
    auto7C38D279_u = UnitGroupCount(auto7C38D279_g, c_unitCountAll);
    for (;; auto7C38D279_u -= 1) {
        auto7C38D279_var = UnitGroupUnitFromEnd(auto7C38D279_g, auto7C38D279_u);
        if (auto7C38D279_var == null) { break; }
        AISetUnitScriptControlled(auto7C38D279_var, true);
        UnitIssueOrder(auto7C38D279_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto71A57988_g = lv_patrol;
    auto71A57988_u = UnitGroupCount(auto71A57988_g, c_unitCountAll);
    for (;; auto71A57988_u -= 1) {
        auto71A57988_var = UnitGroupUnitFromEnd(auto71A57988_g, auto71A57988_u);
        if (auto71A57988_var == null) { break; }
        AISetUnitScriptControlled(auto71A57988_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave03Subway03_Init () {
    gt_Lab01ReinforceWave03Subway03 = TriggerCreate("gt_Lab01ReinforceWave03Subway03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave03 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWave03Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto2A2A1B79_g;
    int auto2A2A1B79_u;
    unit auto2A2A1B79_var;
    unitgroup auto01FDB446_g;
    int auto01FDB446_u;
    unit auto01FDB446_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto2A2A1B79_g = lv_patrol;
    auto2A2A1B79_u = UnitGroupCount(auto2A2A1B79_g, c_unitCountAll);
    for (;; auto2A2A1B79_u -= 1) {
        auto2A2A1B79_var = UnitGroupUnitFromEnd(auto2A2A1B79_g, auto2A2A1B79_u);
        if (auto2A2A1B79_var == null) { break; }
        AISetUnitScriptControlled(auto2A2A1B79_var, true);
        UnitIssueOrder(auto2A2A1B79_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(10))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto01FDB446_g = lv_patrol;
    auto01FDB446_u = UnitGroupCount(auto01FDB446_g, c_unitCountAll);
    for (;; auto01FDB446_u -= 1) {
        auto01FDB446_var = UnitGroupUnitFromEnd(auto01FDB446_g, auto01FDB446_u);
        if (auto01FDB446_var == null) { break; }
        AISetUnitScriptControlled(auto01FDB446_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWave03Subway04_Init () {
    gt_Lab01ReinforceWave03Subway04 = TriggerCreate("gt_Lab01ReinforceWave03Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave Air Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWaveAirQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_Air))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab01ReinforceWaveAirLeft, true, false);
    TriggerExecute(gt_Lab01ReinforceWaveAirRight, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWaveAirQ_Init () {
    gt_Lab01ReinforceWaveAirQ = TriggerCreate("gt_Lab01ReinforceWaveAirQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave Air Left
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWaveAirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(687085472);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWaveAirLeft_Init () {
    gt_Lab01ReinforceWaveAirLeft = TriggerCreate("gt_Lab01ReinforceWaveAirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab01 Reinforce Wave Air Right
//--------------------------------------------------------------------------------------------------
bool gt_Lab01ReinforceWaveAirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(1542267758);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab01ReinforceWaveAirRight_Init () {
    gt_Lab01ReinforceWaveAirRight = TriggerCreate("gt_Lab01ReinforceWaveAirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Bridge Control Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_Lab02BridgeControlDestroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_panelDelay;
    fixed lv_animationTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelDelay = 0.5;
    lv_animationTime = 1.5;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(783558179)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_obj_Ping[1][0]);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(25), "Sparks_Protoss");
    ActorSend(ActorFromDoodad(DoodadFromId(1767418984)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(882621517)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(2139565349)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1039421038)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1750503871)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(621186522)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(359656590)), "AnimPlay Stand");

    Wait(lv_panelDelay, c_timeGame);
    UnitIssueOrder(UnitFromId(453256766), Order(AbilityCommand("PortCity_Bridge_UnitNW8Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1163145351), Order(AbilityCommand("PortCity_Bridge_UnitNW8Out", 0)), c_orderQueueReplace);
    Wait(lv_animationTime, c_timeGame);
    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(25), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02BridgeControlDestroyed_Init () {
    gt_Lab02BridgeControlDestroyed = TriggerCreate("gt_Lab02BridgeControlDestroyed_Func");
    TriggerAddEventUnitDied(gt_Lab02BridgeControlDestroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Scout Sabotage
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ScoutSabotage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ActorSend(ActorFromDoodad(DoodadFromId(1836884359)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1989544258)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1386879130)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1937225465)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1836884359)), "ModelSwap Korhal_Platform_LandingLights 1");
    ActorSend(ActorFromDoodad(DoodadFromId(212550697)), "ModelSwap ElectricConduitPathMedium 3");
    ActorSend(ActorFromDoodad(DoodadFromId(1883283708)), "ModelSwap ElectricConduitPathMedium 3");
    TriggerExecute(gt_MarkLab02, true, false);
    TriggerEnable(gt_Lab02Overload, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ScoutSabotage_Init () {
    gt_Lab02ScoutSabotage = TriggerCreate("gt_Lab02ScoutSabotage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Overload
//--------------------------------------------------------------------------------------------------
bool gt_Lab02Overload_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_overloaded;
    unit lv_stasis;
    region lv_lab;
    int lv_channelTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER) || (UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_lab = RegionFromId(11);
    lv_channelTime = gv_lab02_Channel_Time;
    lv_stasis = gv_lab02_Stasis;
    libCOMI_gf_DisplayUnitProgressBar(lv_stasis, gv_lab_Overload_Text, 0, gv_lab_Overload_Time);
    libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
    libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, true);
    while ((gf_PlayersInLabET(lv_lab) == true) && (lv_overloaded == false)) {
        if ((gf_EnemiesInLabET(lv_lab) == false)) {
            gv_lab02_Channel_Time += 1;
            lv_channelTime += 1;
            libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
            libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
            TriggerExecute(gt_Lab02ReinforceWavesQ, true, false);
            if ((lv_channelTime >= gv_lab_Overload_Time)) {
                lv_overloaded = true;
            }

        }

        Wait(1.0, c_timeGame);
    }
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, false);
    if ((lv_overloaded == true)) {
        TriggerExecute(gt_Lab02OverloadComplete, true, false);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02Overload_Init () {
    gt_Lab02Overload = TriggerCreate("gt_Lab02Overload_Func");
    TriggerEnable(gt_Lab02Overload, false);
    TriggerAddEventUnitRegion(gt_Lab02Overload, null, RegionFromId(11), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Overload Complete
//--------------------------------------------------------------------------------------------------
bool gt_Lab02OverloadComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionLabDestroyed, true, false);
    TriggerExecute(gt_Lab02DestroyStasisTube, true, false);
    TriggerExecute(gt_Lab02CleanDoodads, true, false);
    TriggerExecute(gt_MainObjOverloadLabsUpdate, true, false);
    TriggerExecute(gt_GameLab03Activation, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02OverloadComplete_Init () {
    gt_Lab02OverloadComplete = TriggerCreate("gt_Lab02OverloadComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Destroy Stasis Tube
//--------------------------------------------------------------------------------------------------
bool gt_Lab02DestroyStasisTube_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Terran, UnitGetPosition(gv_lab02_Stasis));
    UnitKill(gv_lab02_Stasis);
    PingDestroy(gv_obj_Ping[1][1]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02DestroyStasisTube_Init () {
    gt_Lab02DestroyStasisTube = TriggerCreate("gt_Lab02DestroyStasisTube_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Clean Doodads
//--------------------------------------------------------------------------------------------------
bool gt_Lab02CleanDoodads_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(53), "ElectricalArcs");
    Wait(3.0, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1836884359)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1989544258)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1386879130)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1937225465)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1836884359)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1408524870)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2122766799)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1860286810)), "ModelSwap Streetlight 0");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02CleanDoodads_Init () {
    gt_Lab02CleanDoodads = TriggerCreate("gt_Lab02CleanDoodads_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Waves Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWavesQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Lab02ReinforceWave01Q, true, false);
    TriggerExecute(gt_Lab02ReinforceWave02Q, true, false);
    TriggerExecute(gt_Lab02ReinforceWave03Q, true, false);
    TriggerExecute(gt_Lab02ReinforceWaveAirQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWavesQ_Init () {
    gt_Lab02ReinforceWavesQ = TriggerCreate("gt_Lab02ReinforceWavesQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave01 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave01Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_01))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab02ReinforceWavesGate, true, false);
    TriggerExecute(gt_Lab02ReinforceWave01Subway01, true, false);
    TriggerExecute(gt_Lab02ReinforceWave01Subway02, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave01Q_Init () {
    gt_Lab02ReinforceWave01Q = TriggerCreate("gt_Lab02ReinforceWave01Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Waves Gate
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWavesGate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitIsAlive(UnitFromId(783558179)) == true)) {
        UnitKill(UnitFromId(783558179));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWavesGate_Init () {
    gt_Lab02ReinforceWavesGate = TriggerCreate("gt_Lab02ReinforceWavesGate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave01 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave01Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto8C129AA5_g;
    int auto8C129AA5_u;
    unit auto8C129AA5_var;
    unitgroup auto63D50048_g;
    int auto63D50048_u;
    unit auto63D50048_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto8C129AA5_g = lv_patrol;
    auto8C129AA5_u = UnitGroupCount(auto8C129AA5_g, c_unitCountAll);
    for (;; auto8C129AA5_u -= 1) {
        auto8C129AA5_var = UnitGroupUnitFromEnd(auto8C129AA5_g, auto8C129AA5_u);
        if (auto8C129AA5_var == null) { break; }
        AISetUnitScriptControlled(auto8C129AA5_var, true);
        UnitIssueOrder(auto8C129AA5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto63D50048_g = lv_patrol;
    auto63D50048_u = UnitGroupCount(auto63D50048_g, c_unitCountAll);
    for (;; auto63D50048_u -= 1) {
        auto63D50048_var = UnitGroupUnitFromEnd(auto63D50048_g, auto63D50048_u);
        if (auto63D50048_var == null) { break; }
        AISetUnitScriptControlled(auto63D50048_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave01Subway01_Init () {
    gt_Lab02ReinforceWave01Subway01 = TriggerCreate("gt_Lab02ReinforceWave01Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave01 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave01Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto212A7E24_g;
    int auto212A7E24_u;
    unit auto212A7E24_var;
    unitgroup autoD2DBF63D_g;
    int autoD2DBF63D_u;
    unit autoD2DBF63D_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    auto212A7E24_g = lv_patrol;
    auto212A7E24_u = UnitGroupCount(auto212A7E24_g, c_unitCountAll);
    for (;; auto212A7E24_u -= 1) {
        auto212A7E24_var = UnitGroupUnitFromEnd(auto212A7E24_g, auto212A7E24_u);
        if (auto212A7E24_var == null) { break; }
        AISetUnitScriptControlled(auto212A7E24_var, true);
        UnitIssueOrder(auto212A7E24_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoD2DBF63D_g = lv_patrol;
    autoD2DBF63D_u = UnitGroupCount(autoD2DBF63D_g, c_unitCountAll);
    for (;; autoD2DBF63D_u -= 1) {
        autoD2DBF63D_var = UnitGroupUnitFromEnd(autoD2DBF63D_g, autoD2DBF63D_u);
        if (autoD2DBF63D_var == null) { break; }
        AISetUnitScriptControlled(autoD2DBF63D_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave01Subway02_Init () {
    gt_Lab02ReinforceWave01Subway02 = TriggerCreate("gt_Lab02ReinforceWave01Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave02 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave02Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_02))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab02ReinforceWave02Subway01, true, false);
    TriggerExecute(gt_Lab02ReinforceWave02Subway02, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave02Q_Init () {
    gt_Lab02ReinforceWave02Q = TriggerCreate("gt_Lab02ReinforceWave02Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave02 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave02Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoF26213C6_g;
    int autoF26213C6_u;
    unit autoF26213C6_var;
    unitgroup autoD6A3E5F0_g;
    int autoD6A3E5F0_u;
    unit autoD6A3E5F0_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    autoF26213C6_g = lv_patrol;
    autoF26213C6_u = UnitGroupCount(autoF26213C6_g, c_unitCountAll);
    for (;; autoF26213C6_u -= 1) {
        autoF26213C6_var = UnitGroupUnitFromEnd(autoF26213C6_g, autoF26213C6_u);
        if (autoF26213C6_var == null) { break; }
        AISetUnitScriptControlled(autoF26213C6_var, true);
        UnitIssueOrder(autoF26213C6_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoD6A3E5F0_g = lv_patrol;
    autoD6A3E5F0_u = UnitGroupCount(autoD6A3E5F0_g, c_unitCountAll);
    for (;; autoD6A3E5F0_u -= 1) {
        autoD6A3E5F0_var = UnitGroupUnitFromEnd(autoD6A3E5F0_g, autoD6A3E5F0_u);
        if (autoD6A3E5F0_var == null) { break; }
        AISetUnitScriptControlled(autoD6A3E5F0_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave02Subway01_Init () {
    gt_Lab02ReinforceWave02Subway01 = TriggerCreate("gt_Lab02ReinforceWave02Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave02 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave02Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto5972DE2A_g;
    int auto5972DE2A_u;
    unit auto5972DE2A_var;
    unitgroup auto063C42B9_g;
    int auto063C42B9_u;
    unit auto063C42B9_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    auto5972DE2A_g = lv_patrol;
    auto5972DE2A_u = UnitGroupCount(auto5972DE2A_g, c_unitCountAll);
    for (;; auto5972DE2A_u -= 1) {
        auto5972DE2A_var = UnitGroupUnitFromEnd(auto5972DE2A_g, auto5972DE2A_u);
        if (auto5972DE2A_var == null) { break; }
        AISetUnitScriptControlled(auto5972DE2A_var, true);
        UnitIssueOrder(auto5972DE2A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto063C42B9_g = lv_patrol;
    auto063C42B9_u = UnitGroupCount(auto063C42B9_g, c_unitCountAll);
    for (;; auto063C42B9_u -= 1) {
        auto063C42B9_var = UnitGroupUnitFromEnd(auto063C42B9_g, auto063C42B9_u);
        if (auto063C42B9_var == null) { break; }
        AISetUnitScriptControlled(auto063C42B9_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave02Subway02_Init () {
    gt_Lab02ReinforceWave02Subway02 = TriggerCreate("gt_Lab02ReinforceWave02Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave03 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave03Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_03))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab02ReinforceWave03Subway01, true, false);
    TriggerExecute(gt_Lab02ReinforceWave03Subway02, true, false);
    TriggerEnable(gt_Lab02ReinforceWavesQ, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave03Q_Init () {
    gt_Lab02ReinforceWave03Q = TriggerCreate("gt_Lab02ReinforceWave03Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave03 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave03Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto934C114E_g;
    int auto934C114E_u;
    unit auto934C114E_var;
    unitgroup auto0F5185A1_g;
    int auto0F5185A1_u;
    unit auto0F5185A1_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto934C114E_g = lv_patrol;
    auto934C114E_u = UnitGroupCount(auto934C114E_g, c_unitCountAll);
    for (;; auto934C114E_u -= 1) {
        auto934C114E_var = UnitGroupUnitFromEnd(auto934C114E_g, auto934C114E_u);
        if (auto934C114E_var == null) { break; }
        AISetUnitScriptControlled(auto934C114E_var, true);
        UnitIssueOrder(auto934C114E_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto0F5185A1_g = lv_patrol;
    auto0F5185A1_u = UnitGroupCount(auto0F5185A1_g, c_unitCountAll);
    for (;; auto0F5185A1_u -= 1) {
        auto0F5185A1_var = UnitGroupUnitFromEnd(auto0F5185A1_g, auto0F5185A1_u);
        if (auto0F5185A1_var == null) { break; }
        AISetUnitScriptControlled(auto0F5185A1_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave03Subway01_Init () {
    gt_Lab02ReinforceWave03Subway01 = TriggerCreate("gt_Lab02ReinforceWave03Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave03 Subway02
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWave03Subway02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoF41DB68C_g;
    int autoF41DB68C_u;
    unit autoF41DB68C_var;
    unitgroup autoEC1A3F3C_g;
    int autoEC1A3F3C_u;
    unit autoEC1A3F3C_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(29);
    lv_rallyPoint = PointFromId(2091237364);
    TriggerExecute(gt_MapSubway02Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway02Close, true, false);
    autoF41DB68C_g = lv_patrol;
    autoF41DB68C_u = UnitGroupCount(autoF41DB68C_g, c_unitCountAll);
    for (;; autoF41DB68C_u -= 1) {
        autoF41DB68C_var = UnitGroupUnitFromEnd(autoF41DB68C_g, autoF41DB68C_u);
        if (autoF41DB68C_var == null) { break; }
        AISetUnitScriptControlled(autoF41DB68C_var, true);
        UnitIssueOrder(autoF41DB68C_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(11))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoEC1A3F3C_g = lv_patrol;
    autoEC1A3F3C_u = UnitGroupCount(autoEC1A3F3C_g, c_unitCountAll);
    for (;; autoEC1A3F3C_u -= 1) {
        autoEC1A3F3C_var = UnitGroupUnitFromEnd(autoEC1A3F3C_g, autoEC1A3F3C_u);
        if (autoEC1A3F3C_var == null) { break; }
        AISetUnitScriptControlled(autoEC1A3F3C_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWave03Subway02_Init () {
    gt_Lab02ReinforceWave03Subway02 = TriggerCreate("gt_Lab02ReinforceWave03Subway02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave Air Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWaveAirQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_Air))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab02ReinforceWaveAirLeft, true, false);
    TriggerExecute(gt_Lab02ReinforceWaveAirRight, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWaveAirQ_Init () {
    gt_Lab02ReinforceWaveAirQ = TriggerCreate("gt_Lab02ReinforceWaveAirQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave Air Left
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWaveAirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1169215111);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWaveAirLeft_Init () {
    gt_Lab02ReinforceWaveAirLeft = TriggerCreate("gt_Lab02ReinforceWaveAirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab02 Reinforce Wave Air Right
//--------------------------------------------------------------------------------------------------
bool gt_Lab02ReinforceWaveAirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(802389572);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab02ReinforceWaveAirRight_Init () {
    gt_Lab02ReinforceWaveAirRight = TriggerCreate("gt_Lab02ReinforceWaveAirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Bridge Control Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_Lab03BridgeControlDestroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_panelDelay;
    fixed lv_animationTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelDelay = 0.5;
    lv_animationTime = 1.5;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(585359531)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_obj_Ping[2][0]);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(27), "Sparks_Protoss");
    ActorSend(ActorFromDoodad(DoodadFromId(180297638)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1656194603)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(41278065)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1329449363)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(2131956766)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1859091130)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(853034580)), "AnimPlay Stand");

    Wait(lv_panelDelay, c_timeGame);
    UnitIssueOrder(UnitFromId(1285095773), Order(AbilityCommand("PortCity_Bridge_UnitSE8Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(346262964), Order(AbilityCommand("PortCity_Bridge_UnitSE8Out", 0)), c_orderQueueReplace);
    Wait(lv_animationTime, c_timeGame);
    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(27), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03BridgeControlDestroyed_Init () {
    gt_Lab03BridgeControlDestroyed = TriggerCreate("gt_Lab03BridgeControlDestroyed_Func");
    TriggerAddEventUnitDied(gt_Lab03BridgeControlDestroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Scout Sabotage
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ScoutSabotage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ActorSend(ActorFromDoodad(DoodadFromId(2069866157)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1403670622)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(460765260)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1254417024)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2069866157)), "ModelSwap Korhal_Platform_LandingLights 1");
    ActorSend(ActorFromDoodad(DoodadFromId(764968293)), "ModelSwap ElectricConduitPathMedium 3");
    ActorSend(ActorFromDoodad(DoodadFromId(21368473)), "ModelSwap ElectricConduitPathMedium 3");
    TriggerExecute(gt_MarkLab03, true, false);
    TriggerEnable(gt_Lab03Overload, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ScoutSabotage_Init () {
    gt_Lab03ScoutSabotage = TriggerCreate("gt_Lab03ScoutSabotage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Overload
//--------------------------------------------------------------------------------------------------
bool gt_Lab03Overload_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_overloaded;
    unit lv_stasis;
    region lv_lab;
    int lv_channelTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER) || (UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_lab = RegionFromId(12);
    lv_channelTime = gv_lab03_Channel_Time;
    lv_stasis = gv_lab03_Stasis;
    libCOMI_gf_DisplayUnitProgressBar(lv_stasis, gv_lab_Overload_Text, 0, gv_lab_Overload_Time);
    libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
    libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, true);
    while ((gf_PlayersInLabET(lv_lab) == true) && (lv_overloaded == false)) {
        if ((gf_EnemiesInLabET(lv_lab) == false)) {
            gv_lab03_Channel_Time += 1;
            lv_channelTime += 1;
            libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
            libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
            TriggerExecute(gt_Lab03ReinforceWavesQ, true, false);
            if ((lv_channelTime >= gv_lab_Overload_Time)) {
                lv_overloaded = true;
            }

        }

        Wait(1.0, c_timeGame);
    }
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, false);
    if ((lv_overloaded == true)) {
        TriggerExecute(gt_Lab03OverloadComplete, true, false);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03Overload_Init () {
    gt_Lab03Overload = TriggerCreate("gt_Lab03Overload_Func");
    TriggerEnable(gt_Lab03Overload, false);
    TriggerAddEventUnitRegion(gt_Lab03Overload, null, RegionFromId(12), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Overload Complete
//--------------------------------------------------------------------------------------------------
bool gt_Lab03OverloadComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionLabDestroyed, true, false);
    TriggerExecute(gt_Lab03DestroyStasisTube, true, false);
    TriggerExecute(gt_Lab03CleanDoodads, true, false);
    TriggerExecute(gt_MainObjOverloadLabsUpdate, true, false);
    TriggerExecute(gt_GameLab04Activation, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03OverloadComplete_Init () {
    gt_Lab03OverloadComplete = TriggerCreate("gt_Lab03OverloadComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Destroy Stasis Tube
//--------------------------------------------------------------------------------------------------
bool gt_Lab03DestroyStasisTube_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Terran, UnitGetPosition(gv_lab03_Stasis));
    UnitKill(gv_lab03_Stasis);
    PingDestroy(gv_obj_Ping[2][1]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03DestroyStasisTube_Init () {
    gt_Lab03DestroyStasisTube = TriggerCreate("gt_Lab03DestroyStasisTube_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Clean Doodads
//--------------------------------------------------------------------------------------------------
bool gt_Lab03CleanDoodads_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(53), "ElectricalArcs");
    Wait(3.0, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2069866157)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1403670622)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(460765260)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1254417024)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2069866157)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(615911387)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(716469777)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1120584780)), "ModelSwap Streetlight 0");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03CleanDoodads_Init () {
    gt_Lab03CleanDoodads = TriggerCreate("gt_Lab03CleanDoodads_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Waves Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWavesQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Lab03ReinforceWave01Q, true, false);
    TriggerExecute(gt_Lab03ReinforceWave02Q, true, false);
    TriggerExecute(gt_Lab03ReinforceWave03Q, true, false);
    TriggerExecute(gt_Lab03ReinforceWaveAirQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWavesQ_Init () {
    gt_Lab03ReinforceWavesQ = TriggerCreate("gt_Lab03ReinforceWavesQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave01 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave01Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_01))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab03ReinforceWavesGate, true, false);
    TriggerExecute(gt_Lab03ReinforceWave01Subway04, true, false);
    TriggerExecute(gt_Lab03ReinforceWave01Subway05, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave01Q_Init () {
    gt_Lab03ReinforceWave01Q = TriggerCreate("gt_Lab03ReinforceWave01Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Waves Gate
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWavesGate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitIsAlive(UnitFromId(585359531)) == true)) {
        UnitKill(UnitFromId(585359531));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWavesGate_Init () {
    gt_Lab03ReinforceWavesGate = TriggerCreate("gt_Lab03ReinforceWavesGate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave01 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave01Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto6B77C212_g;
    int auto6B77C212_u;
    unit auto6B77C212_var;
    unitgroup auto7E7640A1_g;
    int auto7E7640A1_u;
    unit auto7E7640A1_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto6B77C212_g = lv_patrol;
    auto6B77C212_u = UnitGroupCount(auto6B77C212_g, c_unitCountAll);
    for (;; auto6B77C212_u -= 1) {
        auto6B77C212_var = UnitGroupUnitFromEnd(auto6B77C212_g, auto6B77C212_u);
        if (auto6B77C212_var == null) { break; }
        AISetUnitScriptControlled(auto6B77C212_var, true);
        UnitIssueOrder(auto6B77C212_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto7E7640A1_g = lv_patrol;
    auto7E7640A1_u = UnitGroupCount(auto7E7640A1_g, c_unitCountAll);
    for (;; auto7E7640A1_u -= 1) {
        auto7E7640A1_var = UnitGroupUnitFromEnd(auto7E7640A1_g, auto7E7640A1_u);
        if (auto7E7640A1_var == null) { break; }
        AISetUnitScriptControlled(auto7E7640A1_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave01Subway04_Init () {
    gt_Lab03ReinforceWave01Subway04 = TriggerCreate("gt_Lab03ReinforceWave01Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave01 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave01Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoB0FE95FF_g;
    int autoB0FE95FF_u;
    unit autoB0FE95FF_var;
    unitgroup auto2A8EA69D_g;
    int auto2A8EA69D_u;
    unit auto2A8EA69D_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    autoB0FE95FF_g = lv_patrol;
    autoB0FE95FF_u = UnitGroupCount(autoB0FE95FF_g, c_unitCountAll);
    for (;; autoB0FE95FF_u -= 1) {
        autoB0FE95FF_var = UnitGroupUnitFromEnd(autoB0FE95FF_g, autoB0FE95FF_u);
        if (autoB0FE95FF_var == null) { break; }
        AISetUnitScriptControlled(autoB0FE95FF_var, true);
        UnitIssueOrder(autoB0FE95FF_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto2A8EA69D_g = lv_patrol;
    auto2A8EA69D_u = UnitGroupCount(auto2A8EA69D_g, c_unitCountAll);
    for (;; auto2A8EA69D_u -= 1) {
        auto2A8EA69D_var = UnitGroupUnitFromEnd(auto2A8EA69D_g, auto2A8EA69D_u);
        if (auto2A8EA69D_var == null) { break; }
        AISetUnitScriptControlled(auto2A8EA69D_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave01Subway05_Init () {
    gt_Lab03ReinforceWave01Subway05 = TriggerCreate("gt_Lab03ReinforceWave01Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave02 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave02Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_02))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab03ReinforceWave02Subway04, true, false);
    TriggerExecute(gt_Lab03ReinforceWave02Subway05, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave02Q_Init () {
    gt_Lab03ReinforceWave02Q = TriggerCreate("gt_Lab03ReinforceWave02Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave02 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave02Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto700083C5_g;
    int auto700083C5_u;
    unit auto700083C5_var;
    unitgroup auto6D40D251_g;
    int auto6D40D251_u;
    unit auto6D40D251_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto700083C5_g = lv_patrol;
    auto700083C5_u = UnitGroupCount(auto700083C5_g, c_unitCountAll);
    for (;; auto700083C5_u -= 1) {
        auto700083C5_var = UnitGroupUnitFromEnd(auto700083C5_g, auto700083C5_u);
        if (auto700083C5_var == null) { break; }
        AISetUnitScriptControlled(auto700083C5_var, true);
        UnitIssueOrder(auto700083C5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto6D40D251_g = lv_patrol;
    auto6D40D251_u = UnitGroupCount(auto6D40D251_g, c_unitCountAll);
    for (;; auto6D40D251_u -= 1) {
        auto6D40D251_var = UnitGroupUnitFromEnd(auto6D40D251_g, auto6D40D251_u);
        if (auto6D40D251_var == null) { break; }
        AISetUnitScriptControlled(auto6D40D251_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave02Subway04_Init () {
    gt_Lab03ReinforceWave02Subway04 = TriggerCreate("gt_Lab03ReinforceWave02Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave02 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave02Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto40D3C3DE_g;
    int auto40D3C3DE_u;
    unit auto40D3C3DE_var;
    unitgroup auto1182C304_g;
    int auto1182C304_u;
    unit auto1182C304_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(0);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    auto40D3C3DE_g = lv_patrol;
    auto40D3C3DE_u = UnitGroupCount(auto40D3C3DE_g, c_unitCountAll);
    for (;; auto40D3C3DE_u -= 1) {
        auto40D3C3DE_var = UnitGroupUnitFromEnd(auto40D3C3DE_g, auto40D3C3DE_u);
        if (auto40D3C3DE_var == null) { break; }
        AISetUnitScriptControlled(auto40D3C3DE_var, true);
        UnitIssueOrder(auto40D3C3DE_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto1182C304_g = lv_patrol;
    auto1182C304_u = UnitGroupCount(auto1182C304_g, c_unitCountAll);
    for (;; auto1182C304_u -= 1) {
        auto1182C304_var = UnitGroupUnitFromEnd(auto1182C304_g, auto1182C304_u);
        if (auto1182C304_var == null) { break; }
        AISetUnitScriptControlled(auto1182C304_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave02Subway05_Init () {
    gt_Lab03ReinforceWave02Subway05 = TriggerCreate("gt_Lab03ReinforceWave02Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave03 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave03Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_03))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab03ReinforceWave03Subway04, true, false);
    TriggerExecute(gt_Lab03ReinforceWave03Subway05, true, false);
    TriggerEnable(gt_Lab03ReinforceWavesQ, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave03Q_Init () {
    gt_Lab03ReinforceWave03Q = TriggerCreate("gt_Lab03ReinforceWave03Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave03 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave03Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto2621B354_g;
    int auto2621B354_u;
    unit auto2621B354_var;
    unitgroup auto7D9E6B86_g;
    int auto7D9E6B86_u;
    unit auto7D9E6B86_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    auto2621B354_g = lv_patrol;
    auto2621B354_u = UnitGroupCount(auto2621B354_g, c_unitCountAll);
    for (;; auto2621B354_u -= 1) {
        auto2621B354_var = UnitGroupUnitFromEnd(auto2621B354_g, auto2621B354_u);
        if (auto2621B354_var == null) { break; }
        AISetUnitScriptControlled(auto2621B354_var, true);
        UnitIssueOrder(auto2621B354_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto7D9E6B86_g = lv_patrol;
    auto7D9E6B86_u = UnitGroupCount(auto7D9E6B86_g, c_unitCountAll);
    for (;; auto7D9E6B86_u -= 1) {
        auto7D9E6B86_var = UnitGroupUnitFromEnd(auto7D9E6B86_g, auto7D9E6B86_u);
        if (auto7D9E6B86_var == null) { break; }
        AISetUnitScriptControlled(auto7D9E6B86_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave03Subway04_Init () {
    gt_Lab03ReinforceWave03Subway04 = TriggerCreate("gt_Lab03ReinforceWave03Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave03 Subway05
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWave03Subway05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto954BA764_g;
    int auto954BA764_u;
    unit auto954BA764_var;
    unitgroup autoC24C60B0_g;
    int autoC24C60B0_u;
    unit autoC24C60B0_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(32);
    lv_rallyPoint = PointFromId(1120475627);
    TriggerExecute(gt_MapSubway05Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway05Close, true, false);
    auto954BA764_g = lv_patrol;
    auto954BA764_u = UnitGroupCount(auto954BA764_g, c_unitCountAll);
    for (;; auto954BA764_u -= 1) {
        auto954BA764_var = UnitGroupUnitFromEnd(auto954BA764_g, auto954BA764_u);
        if (auto954BA764_var == null) { break; }
        AISetUnitScriptControlled(auto954BA764_var, true);
        UnitIssueOrder(auto954BA764_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoC24C60B0_g = lv_patrol;
    autoC24C60B0_u = UnitGroupCount(autoC24C60B0_g, c_unitCountAll);
    for (;; autoC24C60B0_u -= 1) {
        autoC24C60B0_var = UnitGroupUnitFromEnd(autoC24C60B0_g, autoC24C60B0_u);
        if (autoC24C60B0_var == null) { break; }
        AISetUnitScriptControlled(autoC24C60B0_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWave03Subway05_Init () {
    gt_Lab03ReinforceWave03Subway05 = TriggerCreate("gt_Lab03ReinforceWave03Subway05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave Air Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWaveAirQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_Air))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab03ReinforceWaveAirLeft, true, false);
    TriggerExecute(gt_Lab03ReinforceWaveAirRight, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWaveAirQ_Init () {
    gt_Lab03ReinforceWaveAirQ = TriggerCreate("gt_Lab03ReinforceWaveAirQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave Air Left
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWaveAirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1481128987);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWaveAirLeft_Init () {
    gt_Lab03ReinforceWaveAirLeft = TriggerCreate("gt_Lab03ReinforceWaveAirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab03 Reinforce Wave Air Right
//--------------------------------------------------------------------------------------------------
bool gt_Lab03ReinforceWaveAirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(538921433);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab03ReinforceWaveAirRight_Init () {
    gt_Lab03ReinforceWaveAirRight = TriggerCreate("gt_Lab03ReinforceWaveAirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Bridge Control Destroyed 1
//--------------------------------------------------------------------------------------------------
bool gt_Lab04BridgeControlDestroyed1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_panelDelay;
    fixed lv_animationTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelDelay = 0.5;
    lv_animationTime = 1.5;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(1068989153)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_obj_Ping[3][0]);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(38), "Sparks_Protoss");
    ActorSend(ActorFromDoodad(DoodadFromId(1855849111)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1873712963)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(207983349)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1272984790)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1760113138)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1424398956)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1342646573)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1661765217)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1205460964)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1510913699)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1220053797)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(762255884)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(224844570)), "AnimPlay Stand");

    Wait(lv_panelDelay, c_timeGame);
    UnitIssueOrder(UnitFromId(2108459526), Order(AbilityCommand("PortCity_Bridge_UnitSE10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1312325610), Order(AbilityCommand("PortCity_Bridge_UnitSE10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2088894626), Order(AbilityCommand("PortCity_Bridge_UnitNW10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(907205946), Order(AbilityCommand("PortCity_Bridge_UnitNW10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1576040229), Order(AbilityCommand("MetalGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
    Wait(lv_animationTime, c_timeGame);
    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(38), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04BridgeControlDestroyed1_Init () {
    gt_Lab04BridgeControlDestroyed1 = TriggerCreate("gt_Lab04BridgeControlDestroyed1_Func");
    TriggerAddEventUnitDied(gt_Lab04BridgeControlDestroyed1, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Bridge Control Destroyed 2
//--------------------------------------------------------------------------------------------------
bool gt_Lab04BridgeControlDestroyed2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_panelDelay;
    fixed lv_animationTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelDelay = 0.5;
    lv_animationTime = 1.5;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(634356193)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_obj_Ping[3][1]);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(56), "Sparks_Protoss");
    ActorSend(ActorFromDoodad(DoodadFromId(292452361)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(66369538)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1725693871)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1828833601)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(718009998)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1013688424)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(658547202)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1314288436)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(242978879)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(1359450765)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(430081394)), "AnimPlay Stand");
    ActorSend(ActorFromDoodad(DoodadFromId(111468158)), "AnimPlay Stand");

    Wait(lv_panelDelay, c_timeGame);
    UnitIssueOrder(UnitFromId(598440984), Order(AbilityCommand("PortCity_Bridge_UnitSE10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(357575440), Order(AbilityCommand("PortCity_Bridge_UnitSE10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1489923562), Order(AbilityCommand("PortCity_Bridge_UnitNW10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(981141779), Order(AbilityCommand("PortCity_Bridge_UnitNW10Out", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1119640594), Order(AbilityCommand("MetalGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
    Wait(lv_animationTime, c_timeGame);
    libNtve_gf_RemoveDoodadsinRegion(RegionFromId(56), "Sparks_Protoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04BridgeControlDestroyed2_Init () {
    gt_Lab04BridgeControlDestroyed2 = TriggerCreate("gt_Lab04BridgeControlDestroyed2_Func");
    TriggerAddEventUnitDied(gt_Lab04BridgeControlDestroyed2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Scout Sabotage
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ScoutSabotage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ActorSend(ActorFromDoodad(DoodadFromId(2129077349)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(934923569)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1723066212)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1691007266)), "ModelSwap Korhal_Platform_LandingLights 1");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2129077349)), "ModelSwap Korhal_Platform_LandingLights 1");
    ActorSend(ActorFromDoodad(DoodadFromId(614906812)), "ModelSwap ElectricConduitPathMedium 3");
    ActorSend(ActorFromDoodad(DoodadFromId(1090623390)), "ModelSwap ElectricConduitPathMedium 3");
    TriggerExecute(gt_MarkLab04, true, false);
    TriggerEnable(gt_Lab04Overload, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ScoutSabotage_Init () {
    gt_Lab04ScoutSabotage = TriggerCreate("gt_Lab04ScoutSabotage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Overload
//--------------------------------------------------------------------------------------------------
bool gt_Lab04Overload_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_overloaded;
    unit lv_stasis;
    region lv_lab;
    int lv_channelTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER) || (UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_lab = RegionFromId(15);
    lv_channelTime = gv_lab04_Channel_Time;
    lv_stasis = gv_lab04_Stasis;
    libCOMI_gf_DisplayUnitProgressBar(lv_stasis, gv_lab_Overload_Text, 0, gv_lab_Overload_Time);
    libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
    libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, true);
    while ((gf_PlayersInLabET(lv_lab) == true) && (lv_overloaded == false)) {
        if ((gf_EnemiesInLabET(lv_lab) == false)) {
            gv_lab04_Channel_Time += 1;
            lv_channelTime += 1;
            libCOMI_gf_SetUnitProgressBarProgress(lv_stasis, lv_channelTime);
            libCOMI_gf_SetUnitProgressBarProgress2(lv_stasis, (gv_lab_Overload_Time - lv_channelTime));
            TriggerExecute(gt_Lab04ReinforceWavesQ, true, false);
            if ((lv_channelTime >= gv_lab_Overload_Time)) {
                lv_overloaded = true;
            }

        }

        Wait(1.0, c_timeGame);
    }
    libCOMI_gf_ShowHideUnitProgressBar(lv_stasis, false);
    if ((lv_overloaded == true)) {
        TriggerExecute(gt_Lab04OverloadComplete, true, false);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04Overload_Init () {
    gt_Lab04Overload = TriggerCreate("gt_Lab04Overload_Func");
    TriggerEnable(gt_Lab04Overload, false);
    TriggerAddEventUnitRegion(gt_Lab04Overload, null, RegionFromId(15), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Overload Complete
//--------------------------------------------------------------------------------------------------
bool gt_Lab04OverloadComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_Lab04DestroyStasisTube, true, false);
    TriggerExecute(gt_Lab04CleanDoodads, true, false);
    TriggerExecute(gt_MainObjOverloadLabsUpdate, true, false);
    TriggerExecute(gt_GameDreggBattleQ, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04OverloadComplete_Init () {
    gt_Lab04OverloadComplete = TriggerCreate("gt_Lab04OverloadComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Destroy Stasis Tube
//--------------------------------------------------------------------------------------------------
bool gt_Lab04DestroyStasisTube_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Terran, UnitGetPosition(gv_lab04_Stasis));
    UnitKill(gv_lab04_Stasis);
    PingDestroy(gv_obj_Ping[3][2]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04DestroyStasisTube_Init () {
    gt_Lab04DestroyStasisTube = TriggerCreate("gt_Lab04DestroyStasisTube_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Clean Doodads
//--------------------------------------------------------------------------------------------------
bool gt_Lab04CleanDoodads_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(53), "ElectricalArcs");
    Wait(3.0, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2129077349)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(934923569)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1723066212)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1691007266)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(2129077349)), "ModelSwap Korhal_Platform_LandingLights 3");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1562789249)), "ModelSwap Streetlight 0");
    Wait(0.25, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(718204609)), "ModelSwap Streetlight 0");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04CleanDoodads_Init () {
    gt_Lab04CleanDoodads = TriggerCreate("gt_Lab04CleanDoodads_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Waves Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWavesQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Lab04ReinforceWave01Q, true, false);
    TriggerExecute(gt_Lab04ReinforceWave02Q, true, false);
    TriggerExecute(gt_Lab04ReinforceWave03Q, true, false);
    TriggerExecute(gt_Lab04ReinforceWaveAirQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWavesQ_Init () {
    gt_Lab04ReinforceWavesQ = TriggerCreate("gt_Lab04ReinforceWavesQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave01 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave01Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_01))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab04ReinforceWavesGate01, true, false);
    TriggerExecute(gt_Lab04ReinforceWavesGate02, true, false);
    TriggerExecute(gt_Lab04ReinforceWave01Subway01, true, false);
    TriggerExecute(gt_Lab04ReinforceWave01Subway04, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave01Q_Init () {
    gt_Lab04ReinforceWave01Q = TriggerCreate("gt_Lab04ReinforceWave01Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Waves Gate01
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWavesGate01_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitIsAlive(UnitFromId(1068989153)) == true)) {
        UnitKill(UnitFromId(1068989153));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWavesGate01_Init () {
    gt_Lab04ReinforceWavesGate01 = TriggerCreate("gt_Lab04ReinforceWavesGate01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Waves Gate02
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWavesGate02_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitIsAlive(UnitFromId(634356193)) == true)) {
        UnitKill(UnitFromId(634356193));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWavesGate02_Init () {
    gt_Lab04ReinforceWavesGate02 = TriggerCreate("gt_Lab04ReinforceWavesGate02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave01 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave01Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoD72B82FF_g;
    int autoD72B82FF_u;
    unit autoD72B82FF_var;
    unitgroup autoF48FEAA4_g;
    int autoF48FEAA4_u;
    unit autoF48FEAA4_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    autoD72B82FF_g = lv_patrol;
    autoD72B82FF_u = UnitGroupCount(autoD72B82FF_g, c_unitCountAll);
    for (;; autoD72B82FF_u -= 1) {
        autoD72B82FF_var = UnitGroupUnitFromEnd(autoD72B82FF_g, autoD72B82FF_u);
        if (autoD72B82FF_var == null) { break; }
        AISetUnitScriptControlled(autoD72B82FF_var, true);
        UnitIssueOrder(autoD72B82FF_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoF48FEAA4_g = lv_patrol;
    autoF48FEAA4_u = UnitGroupCount(autoF48FEAA4_g, c_unitCountAll);
    for (;; autoF48FEAA4_u -= 1) {
        autoF48FEAA4_var = UnitGroupUnitFromEnd(autoF48FEAA4_g, autoF48FEAA4_u);
        if (autoF48FEAA4_var == null) { break; }
        AISetUnitScriptControlled(autoF48FEAA4_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave01Subway01_Init () {
    gt_Lab04ReinforceWave01Subway01 = TriggerCreate("gt_Lab04ReinforceWave01Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave01 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave01Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoF985474F_g;
    int autoF985474F_u;
    unit autoF985474F_var;
    unitgroup auto21BABCC8_g;
    int auto21BABCC8_u;
    unit auto21BABCC8_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    autoF985474F_g = lv_patrol;
    autoF985474F_u = UnitGroupCount(autoF985474F_g, c_unitCountAll);
    for (;; autoF985474F_u -= 1) {
        autoF985474F_var = UnitGroupUnitFromEnd(autoF985474F_g, autoF985474F_u);
        if (autoF985474F_var == null) { break; }
        AISetUnitScriptControlled(autoF985474F_var, true);
        UnitIssueOrder(autoF985474F_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto21BABCC8_g = lv_patrol;
    auto21BABCC8_u = UnitGroupCount(auto21BABCC8_g, c_unitCountAll);
    for (;; auto21BABCC8_u -= 1) {
        auto21BABCC8_var = UnitGroupUnitFromEnd(auto21BABCC8_g, auto21BABCC8_u);
        if (auto21BABCC8_var == null) { break; }
        AISetUnitScriptControlled(auto21BABCC8_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave01Subway04_Init () {
    gt_Lab04ReinforceWave01Subway04 = TriggerCreate("gt_Lab04ReinforceWave01Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave02 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave02Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_02))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab04ReinforceWave02Subway01, true, false);
    TriggerExecute(gt_Lab04ReinforceWave02Subway04, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave02Q_Init () {
    gt_Lab04ReinforceWave02Q = TriggerCreate("gt_Lab04ReinforceWave02Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave02 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave02Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto7CC0E500_g;
    int auto7CC0E500_u;
    unit auto7CC0E500_var;
    unitgroup auto9B21DB19_g;
    int auto9B21DB19_u;
    unit auto9B21DB19_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto7CC0E500_g = lv_patrol;
    auto7CC0E500_u = UnitGroupCount(auto7CC0E500_g, c_unitCountAll);
    for (;; auto7CC0E500_u -= 1) {
        auto7CC0E500_var = UnitGroupUnitFromEnd(auto7CC0E500_g, auto7CC0E500_u);
        if (auto7CC0E500_var == null) { break; }
        AISetUnitScriptControlled(auto7CC0E500_var, true);
        UnitIssueOrder(auto7CC0E500_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto9B21DB19_g = lv_patrol;
    auto9B21DB19_u = UnitGroupCount(auto9B21DB19_g, c_unitCountAll);
    for (;; auto9B21DB19_u -= 1) {
        auto9B21DB19_var = UnitGroupUnitFromEnd(auto9B21DB19_g, auto9B21DB19_u);
        if (auto9B21DB19_var == null) { break; }
        AISetUnitScriptControlled(auto9B21DB19_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave02Subway01_Init () {
    gt_Lab04ReinforceWave02Subway01 = TriggerCreate("gt_Lab04ReinforceWave02Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave02 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave02Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoE80466F7_g;
    int autoE80466F7_u;
    unit autoE80466F7_var;
    unitgroup autoC580D4C3_g;
    int autoC580D4C3_u;
    unit autoC580D4C3_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    autoE80466F7_g = lv_patrol;
    autoE80466F7_u = UnitGroupCount(autoE80466F7_g, c_unitCountAll);
    for (;; autoE80466F7_u -= 1) {
        autoE80466F7_var = UnitGroupUnitFromEnd(autoE80466F7_g, autoE80466F7_u);
        if (autoE80466F7_var == null) { break; }
        AISetUnitScriptControlled(autoE80466F7_var, true);
        UnitIssueOrder(autoE80466F7_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoC580D4C3_g = lv_patrol;
    autoC580D4C3_u = UnitGroupCount(autoC580D4C3_g, c_unitCountAll);
    for (;; autoC580D4C3_u -= 1) {
        autoC580D4C3_var = UnitGroupUnitFromEnd(autoC580D4C3_g, autoC580D4C3_u);
        if (autoC580D4C3_var == null) { break; }
        AISetUnitScriptControlled(autoC580D4C3_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave02Subway04_Init () {
    gt_Lab04ReinforceWave02Subway04 = TriggerCreate("gt_Lab04ReinforceWave02Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave03 Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave03Q_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_03))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab04ReinforceWave03Subway01, true, false);
    TriggerExecute(gt_Lab04ReinforceWave03Subway04, true, false);
    TriggerEnable(gt_Lab04ReinforceWavesQ, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave03Q_Init () {
    gt_Lab04ReinforceWave03Q = TriggerCreate("gt_Lab04ReinforceWave03Q_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave03 Subway01
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave03Subway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup auto84CAC26E_g;
    int auto84CAC26E_u;
    unit auto84CAC26E_var;
    unitgroup autoF782E9E9_g;
    int autoF782E9E9_u;
    unit autoF782E9E9_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway01Close, true, false);
    auto84CAC26E_g = lv_patrol;
    auto84CAC26E_u = UnitGroupCount(auto84CAC26E_g, c_unitCountAll);
    for (;; auto84CAC26E_u -= 1) {
        auto84CAC26E_var = UnitGroupUnitFromEnd(auto84CAC26E_g, auto84CAC26E_u);
        if (auto84CAC26E_var == null) { break; }
        AISetUnitScriptControlled(auto84CAC26E_var, true);
        UnitIssueOrder(auto84CAC26E_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    autoF782E9E9_g = lv_patrol;
    autoF782E9E9_u = UnitGroupCount(autoF782E9E9_g, c_unitCountAll);
    for (;; autoF782E9E9_u -= 1) {
        autoF782E9E9_var = UnitGroupUnitFromEnd(autoF782E9E9_g, autoF782E9E9_u);
        if (autoF782E9E9_var == null) { break; }
        AISetUnitScriptControlled(autoF782E9E9_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave03Subway01_Init () {
    gt_Lab04ReinforceWave03Subway01 = TriggerCreate("gt_Lab04ReinforceWave03Subway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave03 Subway04
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWave03Subway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    unitgroup lv_patrol;

    // Automatic Variable Declarations
    unitgroup autoEE4FC8DB_g;
    int autoEE4FC8DB_u;
    unit autoEE4FC8DB_var;
    unitgroup auto287CB98F_g;
    int auto287CB98F_u;
    unit auto287CB98F_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_patrol = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    lv_patrol = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapSubway04Close, true, false);
    autoEE4FC8DB_g = lv_patrol;
    autoEE4FC8DB_u = UnitGroupCount(autoEE4FC8DB_g, c_unitCountAll);
    for (;; autoEE4FC8DB_u -= 1) {
        autoEE4FC8DB_var = UnitGroupUnitFromEnd(autoEE4FC8DB_g, autoEE4FC8DB_u);
        if (autoEE4FC8DB_var == null) { break; }
        AISetUnitScriptControlled(autoEE4FC8DB_var, true);
        UnitIssueOrder(autoEE4FC8DB_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(15))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    auto287CB98F_g = lv_patrol;
    auto287CB98F_u = UnitGroupCount(auto287CB98F_g, c_unitCountAll);
    for (;; auto287CB98F_u -= 1) {
        auto287CB98F_var = UnitGroupUnitFromEnd(auto287CB98F_g, auto287CB98F_u);
        if (auto287CB98F_var == null) { break; }
        AISetUnitScriptControlled(auto287CB98F_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWave03Subway04_Init () {
    gt_Lab04ReinforceWave03Subway04 = TriggerCreate("gt_Lab04ReinforceWave03Subway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave Air Q
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWaveAirQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lab01_Channel_Time >= gv_lab_Wave_Time_Air))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_Lab04ReinforceWaveAirLeft, true, false);
    TriggerExecute(gt_Lab04ReinforceWaveAirRight, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWaveAirQ_Init () {
    gt_Lab04ReinforceWaveAirQ = TriggerCreate("gt_Lab04ReinforceWaveAirQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave Air Left
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWaveAirLeft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(60);
    lv_rallyPoint = PointFromId(1097657986);
    TriggerExecute(gt_MapAirGate01Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWaveAirLeft_Init () {
    gt_Lab04ReinforceWaveAirLeft = TriggerCreate("gt_Lab04ReinforceWaveAirLeft_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lab04 Reinforce Wave Air Right
//--------------------------------------------------------------------------------------------------
bool gt_Lab04ReinforceWaveAirRight_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;
    bool lv_dropComplete;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    lv_spawnExitRegion = RegionFromId(61);
    lv_rallyPoint = PointFromId(1883917573);
    TriggerExecute(gt_MapAirGate02Open, true, false);
    Wait(1.5, c_timeGame);
    lv_dropComplete = gf_CreateAirDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    TriggerExecute(gt_MapAirGate02Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Lab04ReinforceWaveAirRight_Init () {
    gt_Lab04ReinforceWaveAirRight = TriggerCreate("gt_Lab04ReinforceWaveAirRight_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ProgressBar Display
//--------------------------------------------------------------------------------------------------
bool gt_ProgressBarDisplay_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_DisplayProgressBar(StringExternal("Param/Value/647EE98D"), gv_progress_Bar_Evolution, gv_progress_Bar_Max);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ProgressBarDisplay_Init () {
    gt_ProgressBarDisplay = TriggerCreate("gt_ProgressBarDisplay_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ProgressBar Update
//--------------------------------------------------------------------------------------------------
bool gt_ProgressBarUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_progress_Bar_Evolution += 1;
    libCOMI_gf_SetProgressBarProgress(gv_progress_Bar_Evolution);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ProgressBarUpdate_Init () {
    gt_ProgressBarUpdate = TriggerCreate("gt_ProgressBarUpdate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ProgressBar Hide
//--------------------------------------------------------------------------------------------------
bool gt_ProgressBarHide_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_ShowHideProgressBar(false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ProgressBarHide_Init () {
    gt_ProgressBarHide = TriggerCreate("gt_ProgressBarHide_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Setup Q
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01SetupQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_BonusDatabot01SpawnSubway04, true, true);
    TriggerExecute(gt_BonusDatabot01SetupObjective, true, false);
    TriggerExecute(gt_BonusDatabot01SetupPing, true, false);
    TriggerEnable(gt_BonusDatabot01DatabotKilled, true);
    TriggerExecute(gt_TransmissionBonusDatabot, true, false);
    TriggerExecute(gt_BonusDatabot01DatabotMovetoConsole, true, false);
    TriggerExecute(gt_BonusDatabot01EscortDatabot, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01SetupQ_Init () {
    gt_BonusDatabot01SetupQ = TriggerCreate("gt_BonusDatabot01SetupQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Spawn Subway04
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01SpawnSubway04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    lv_spawnExitRegion = RegionFromId(31);
    lv_rallyPoint = PointFromId(1252005497);
    gv_bonus_Databot_Escaped[lv_bonusNo] = false;
    gv_bonus_Escape_Point[lv_bonusNo] = RegionGetCenter(RegionFromId(28));
    TriggerExecute(gt_MapSubway04Open, true, false);
    Wait(1.25, c_timeGame);
    gv_bonus_Escort_Group[lv_bonusNo] = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Databot", 0, gv_pLAYER_04_ENEMY, RegionGetCenter(lv_spawnExitRegion));
    gv_bonus_Databot[lv_bonusNo] = UnitLastCreated();
    UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("attack", 0), lv_rallyPoint), c_orderQueueReplace);
    TriggerExecute(gt_MapSubway04Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01SpawnSubway04_Init () {
    gt_BonusDatabot01SpawnSubway04 = TriggerCreate("gt_BonusDatabot01SpawnSubway04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Setup Objective
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01SetupObjective_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    int lv_objectivePriority;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_objectivePriority = 5;

    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectiveCampaign("DestroyDatabotET");
    gv_bonus_Objective[lv_bonusNo] = ObjectiveLastCreated();
    ObjectiveSetPrimary(gv_bonus_Objective[lv_bonusNo], false);
    ObjectiveSetPriority(gv_bonus_Objective[lv_bonusNo], lv_objectivePriority);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01SetupObjective_Init () {
    gt_BonusDatabot01SetupObjective = TriggerCreate("gt_BonusDatabot01SetupObjective_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Setup Ping
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01SetupPing_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Secondary, UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), StringExternal("Param/Value/9AFB60DA"));
    gv_bonus_Ping[lv_bonusNo] = PingLastCreated();
    PingSetUnit(gv_bonus_Ping[lv_bonusNo], gv_bonus_Databot[lv_bonusNo]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01SetupPing_Init () {
    gt_BonusDatabot01SetupPing = TriggerCreate("gt_BonusDatabot01SetupPing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Databot Killed
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01DatabotKilled_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_bonus_Databot[lv_bonusNo]))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_bonus_Ping[lv_bonusNo]);
    TriggerExecute(gt_TransmissionBonusDatabotDestroyed, true, false);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/C959F0B8"));
    ObjectiveSetState(gv_bonus_Objective[lv_bonusNo], c_objectiveStateCompleted);
    TriggerExecute(gt_BonusDatabot01EscortRetreat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01DatabotKilled_Init () {
    gt_BonusDatabot01DatabotKilled = TriggerCreate("gt_BonusDatabot01DatabotKilled_Func");
    TriggerEnable(gt_BonusDatabot01DatabotKilled, false);
    TriggerAddEventUnitDied(gt_BonusDatabot01DatabotKilled, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Databot Move to Console
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01DatabotMovetoConsole_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    point lv_consolePoint;
    bool lv_checkpointReached;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_consolePoint = PointFromId(1076474771);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/E4933796"));
    lv_checkpointReached = false;
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (lv_checkpointReached == false)) {
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), lv_consolePoint) <= 0.5)) {
            lv_checkpointReached = true;
        }
        else {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), lv_consolePoint), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot01DatabotRecoverData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01DatabotMovetoConsole_Init () {
    gt_BonusDatabot01DatabotMovetoConsole = TriggerCreate("gt_BonusDatabot01DatabotMovetoConsole_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Databot Recover Data
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01DatabotRecoverData_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    string lv_objectiveHeader;
    string lv_objectiveTail;
    string lv_objectiveString;
    int lv_runningTime;
    point lv_consolePoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_objectiveHeader = "Destroy Databot (<c val=\"52E787\">Recovering Data: ";
    lv_objectiveTail = "</c>)";
    lv_objectiveString = "";

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_consolePoint = PointFromId(1076474771);
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (lv_runningTime < gv_bonus_Recovery_Time)) {
        lv_runningTime += 1;
        lv_objectiveString = (lv_objectiveHeader + gf_ConvertTimertoString(FixedToInt((gv_bonus_Recovery_Time - lv_runningTime))) + lv_objectiveTail);
        ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringToText(lv_objectiveString));
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), lv_consolePoint) <= 1.0)) {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), lv_consolePoint), c_orderQueueReplace);
        }

        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot01DatabotEscaping, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01DatabotRecoverData_Init () {
    gt_BonusDatabot01DatabotRecoverData = TriggerCreate("gt_BonusDatabot01DatabotRecoverData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Databot Escaping
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01DatabotEscaping_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/82C43345"));
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (gv_bonus_Databot_Escaped[lv_bonusNo] == false)) {
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), gv_bonus_Escape_Point[lv_bonusNo]) <= 0.5)) {
            gv_bonus_Databot_Escaped[lv_bonusNo] = true;
        }
        else {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), gv_bonus_Escape_Point[lv_bonusNo]), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot01DatabotEscaped, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01DatabotEscaping_Init () {
    gt_BonusDatabot01DatabotEscaping = TriggerCreate("gt_BonusDatabot01DatabotEscaping_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Databot Escaped
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01DatabotEscaped_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup auto5D9E7A21_g;
    int auto5D9E7A21_u;
    unit auto5D9E7A21_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitInvulnerable(gv_bonus_Databot[lv_bonusNo], true);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionBonusDatabotFailed, true, false);
    TriggerQueueExit();
    UnitRemove(gv_bonus_Databot[lv_bonusNo]);
    PingDestroy(gv_bonus_Ping[lv_bonusNo]);
    TriggerEnable(gt_BonusDatabot01EscortDatabot, false);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/93E9DCE2"));
    ObjectiveSetState(gv_bonus_Objective[lv_bonusNo], c_objectiveStateFailed);
    if ((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
        while ((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
            auto5D9E7A21_g = gv_bonus_Escort_Group[lv_bonusNo];
            auto5D9E7A21_u = UnitGroupCount(auto5D9E7A21_g, c_unitCountAll);
            for (;; auto5D9E7A21_u -= 1) {
                auto5D9E7A21_var = UnitGroupUnitFromEnd(auto5D9E7A21_g, auto5D9E7A21_u);
                if (auto5D9E7A21_var == null) { break; }
                if ((DistanceBetweenPoints(UnitGetPosition(auto5D9E7A21_var), gv_bonus_Escape_Point[lv_bonusNo]) <= 1.0)) {
                    UnitRemove(auto5D9E7A21_var);
                }
                else {
                    UnitIssueOrder(auto5D9E7A21_var, OrderTargetingPoint(AbilityCommand("move", 0), gv_bonus_Escape_Point[lv_bonusNo]), c_orderQueueReplace);
                }
            }
            Wait(1.0, c_timeGame);
        }
    }

    TriggerExecute(gt_MapSubway01Close, true, false);
    gv_bonus_Escort_Group[lv_bonusNo] = UnitGroupEmpty();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01DatabotEscaped_Init () {
    gt_BonusDatabot01DatabotEscaped = TriggerCreate("gt_BonusDatabot01DatabotEscaped_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Escort Databot
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01EscortDatabot_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup auto7A9B1285_g;
    int auto7A9B1285_u;
    unit auto7A9B1285_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while ((TriggerIsEnabled(TriggerGetCurrent()) == true) && (UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
        auto7A9B1285_g = gv_bonus_Escort_Group[lv_bonusNo];
        auto7A9B1285_u = UnitGroupCount(auto7A9B1285_g, c_unitCountAll);
        for (;; auto7A9B1285_u -= 1) {
            auto7A9B1285_var = UnitGroupUnitFromEnd(auto7A9B1285_g, auto7A9B1285_u);
            if (auto7A9B1285_var == null) { break; }
            if ((DistanceBetweenPoints(UnitGetPosition(auto7A9B1285_var), UnitGetPosition(gv_bonus_Databot[lv_bonusNo])) > 2.0)) {
                AISetUnitScriptControlled(auto7A9B1285_var, true);
                UnitIssueOrder(auto7A9B1285_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_bonus_Databot[lv_bonusNo])), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(auto7A9B1285_var, false);
            }

        }
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01EscortDatabot_Init () {
    gt_BonusDatabot01EscortDatabot = TriggerCreate("gt_BonusDatabot01EscortDatabot_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot01 Escort Retreat
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot01EscortRetreat_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup autoC4D90A95_g;
    int autoC4D90A95_u;
    unit autoC4D90A95_var;
    unitgroup auto5259EFB2_g;
    int auto5259EFB2_u;
    unit auto5259EFB2_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (true) {
        if ((RandomInt(0, 100) < 50)) {
            auto5259EFB2_g = gv_bonus_Escort_Group[lv_bonusNo];
            auto5259EFB2_u = UnitGroupCount(auto5259EFB2_g, c_unitCountAll);
            for (;; auto5259EFB2_u -= 1) {
                auto5259EFB2_var = UnitGroupUnitFromEnd(auto5259EFB2_g, auto5259EFB2_u);
                if (auto5259EFB2_var == null) { break; }
                AISetUnitScriptControlled(auto5259EFB2_var, true);
                UnitIssueOrder(auto5259EFB2_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(8))), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(auto5259EFB2_var, false);
            }
        }
        else {
            autoC4D90A95_g = gv_bonus_Escort_Group[lv_bonusNo];
            autoC4D90A95_u = UnitGroupCount(autoC4D90A95_g, c_unitCountAll);
            for (;; autoC4D90A95_u -= 1) {
                autoC4D90A95_var = UnitGroupUnitFromEnd(autoC4D90A95_g, autoC4D90A95_u);
                if (autoC4D90A95_var == null) { break; }
                AISetUnitScriptControlled(autoC4D90A95_var, true);
                UnitIssueOrder(autoC4D90A95_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(13))), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(autoC4D90A95_var, false);
            }
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot01EscortRetreat_Init () {
    gt_BonusDatabot01EscortRetreat = TriggerCreate("gt_BonusDatabot01EscortRetreat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Setup Q
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02SetupQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_BonusDatabot02SpawnSubway01, true, true);
    TriggerExecute(gt_BonusDatabot02SetupObjective, true, false);
    TriggerExecute(gt_BonusDatabot02SetupPing, true, false);
    TriggerEnable(gt_BonusDatabot02DatabotKilled, true);
    TriggerExecute(gt_TransmissionBonusDatabot, true, false);
    TriggerExecute(gt_BonusDatabot02DatabotMovetoConsole, true, false);
    TriggerExecute(gt_BonusDatabot02EscortDatabot, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02SetupQ_Init () {
    gt_BonusDatabot02SetupQ = TriggerCreate("gt_BonusDatabot02SetupQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Spawn Subway01
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02SpawnSubway01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    int lv_resourceBucket;
    int lv_techBucket;
    region lv_spawnExitRegion;
    point lv_rallyPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnExitRegion = RegionFromId(28);
    lv_rallyPoint = PointFromId(1368025130);
    gv_bonus_Databot_Escaped[lv_bonusNo] = false;
    gv_bonus_Escape_Point[lv_bonusNo] = RegionGetCenter(RegionFromId(31));
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.25, c_timeGame);
    gv_bonus_Escort_Group[lv_bonusNo] = gf_CreateSubwayDropForcePartolET(lv_resourceBucket, lv_techBucket, lv_spawnExitRegion, lv_rallyPoint);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Databot", 0, gv_pLAYER_04_ENEMY, RegionGetCenter(lv_spawnExitRegion));
    gv_bonus_Databot[lv_bonusNo] = UnitLastCreated();
    UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("attack", 0), lv_rallyPoint), c_orderQueueReplace);
    TriggerExecute(gt_MapSubway01Close, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02SpawnSubway01_Init () {
    gt_BonusDatabot02SpawnSubway01 = TriggerCreate("gt_BonusDatabot02SpawnSubway01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Setup Objective
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02SetupObjective_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    int lv_objectivePriority;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;
    lv_objectivePriority = 4;

    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectiveCampaign("DestroyDatabotET");
    gv_bonus_Objective[lv_bonusNo] = ObjectiveLastCreated();
    ObjectiveSetPrimary(gv_bonus_Objective[lv_bonusNo], false);
    ObjectiveSetPriority(gv_bonus_Objective[lv_bonusNo], lv_objectivePriority);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02SetupObjective_Init () {
    gt_BonusDatabot02SetupObjective = TriggerCreate("gt_BonusDatabot02SetupObjective_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Setup Ping
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02SetupPing_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Secondary, UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), StringExternal("Param/Value/380F23FB"));
    gv_bonus_Ping[lv_bonusNo] = PingLastCreated();
    PingSetUnit(gv_bonus_Ping[lv_bonusNo], gv_bonus_Databot[lv_bonusNo]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02SetupPing_Init () {
    gt_BonusDatabot02SetupPing = TriggerCreate("gt_BonusDatabot02SetupPing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Databot Killed
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02DatabotKilled_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_bonus_Databot[lv_bonusNo]))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_bonus_Ping[lv_bonusNo]);
    TriggerExecute(gt_TransmissionBonusDatabotDestroyed, true, false);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/32246B23"));
    ObjectiveSetState(gv_bonus_Objective[lv_bonusNo], c_objectiveStateCompleted);
    TriggerExecute(gt_BonusDatabot02EscortRetreat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02DatabotKilled_Init () {
    gt_BonusDatabot02DatabotKilled = TriggerCreate("gt_BonusDatabot02DatabotKilled_Func");
    TriggerEnable(gt_BonusDatabot02DatabotKilled, false);
    TriggerAddEventUnitDied(gt_BonusDatabot02DatabotKilled, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Databot Move to Console
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02DatabotMovetoConsole_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    point lv_consolePoint;
    bool lv_checkpointReached;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_consolePoint = PointFromId(1076474771);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/C9E3C8C7"));
    lv_checkpointReached = false;
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (lv_checkpointReached == false)) {
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), lv_consolePoint) <= 0.5)) {
            lv_checkpointReached = true;
        }
        else {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), lv_consolePoint), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot02DatabotRecoverData, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02DatabotMovetoConsole_Init () {
    gt_BonusDatabot02DatabotMovetoConsole = TriggerCreate("gt_BonusDatabot02DatabotMovetoConsole_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Databot Recover Data
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02DatabotRecoverData_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;
    string lv_objectiveHeader;
    string lv_objectiveTail;
    string lv_objectiveString;
    int lv_runningTime;
    point lv_consolePoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;
    lv_objectiveHeader = "Destroy Databot (<c val=\"52E787\">Recovering Data: ";
    lv_objectiveTail = "</c>)";
    lv_objectiveString = "";

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_consolePoint = PointFromId(1076474771);
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (lv_runningTime < gv_bonus_Recovery_Time)) {
        lv_runningTime += 1;
        lv_objectiveString = (lv_objectiveHeader + gf_ConvertTimertoString(FixedToInt((gv_bonus_Recovery_Time - lv_runningTime))) + lv_objectiveTail);
        ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringToText(lv_objectiveString));
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), lv_consolePoint) <= 1.0)) {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), lv_consolePoint), c_orderQueueReplace);
        }

        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot02DatabotEscaping, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02DatabotRecoverData_Init () {
    gt_BonusDatabot02DatabotRecoverData = TriggerCreate("gt_BonusDatabot02DatabotRecoverData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Databot Escaping
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02DatabotEscaping_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bonusNo = 1;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/A520DE76"));
    while ((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (gv_bonus_Databot_Escaped[lv_bonusNo] == false)) {
        if ((DistanceBetweenPoints(UnitGetPosition(gv_bonus_Databot[lv_bonusNo]), gv_bonus_Escape_Point[lv_bonusNo]) <= 0.5)) {
            gv_bonus_Databot_Escaped[lv_bonusNo] = true;
        }
        else {
            UnitIssueOrder(gv_bonus_Databot[lv_bonusNo], OrderTargetingPoint(AbilityCommand("move", 0), gv_bonus_Escape_Point[lv_bonusNo]), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_BonusDatabot02DatabotEscaped, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02DatabotEscaping_Init () {
    gt_BonusDatabot02DatabotEscaping = TriggerCreate("gt_BonusDatabot02DatabotEscaping_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Databot Escaped
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02DatabotEscaped_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup auto59017DE9_g;
    int auto59017DE9_u;
    unit auto59017DE9_var;

    // Variable Initialization
    lv_bonusNo = 1;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitInvulnerable(gv_bonus_Databot[lv_bonusNo], true);
    TriggerExecute(gt_MapSubway01Open, true, false);
    Wait(1.0, c_timeGame);
    TriggerQueueEnter();
    TriggerExecute(gt_TransmissionBonusDatabotFailed, true, false);
    TriggerQueueExit();
    UnitRemove(gv_bonus_Databot[lv_bonusNo]);
    PingDestroy(gv_bonus_Ping[lv_bonusNo]);
    TriggerEnable(gt_BonusDatabot02EscortDatabot, false);
    ObjectiveSetName(gv_bonus_Objective[lv_bonusNo], StringExternal("Param/Value/A01AA4F0"));
    ObjectiveSetState(gv_bonus_Objective[lv_bonusNo], c_objectiveStateFailed);
    if ((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
        while ((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
            auto59017DE9_g = gv_bonus_Escort_Group[lv_bonusNo];
            auto59017DE9_u = UnitGroupCount(auto59017DE9_g, c_unitCountAll);
            for (;; auto59017DE9_u -= 1) {
                auto59017DE9_var = UnitGroupUnitFromEnd(auto59017DE9_g, auto59017DE9_u);
                if (auto59017DE9_var == null) { break; }
                if ((DistanceBetweenPoints(UnitGetPosition(auto59017DE9_var), gv_bonus_Escape_Point[lv_bonusNo]) <= 1.0)) {
                    UnitRemove(auto59017DE9_var);
                }
                else {
                    UnitIssueOrder(auto59017DE9_var, OrderTargetingPoint(AbilityCommand("move", 0), gv_bonus_Escape_Point[lv_bonusNo]), c_orderQueueReplace);
                }
            }
            Wait(1.0, c_timeGame);
        }
    }

    TriggerExecute(gt_MapSubway01Close, true, false);
    gv_bonus_Escort_Group[lv_bonusNo] = UnitGroupEmpty();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02DatabotEscaped_Init () {
    gt_BonusDatabot02DatabotEscaped = TriggerCreate("gt_BonusDatabot02DatabotEscaped_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Escort Databot
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02EscortDatabot_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup autoFB18312F_g;
    int autoFB18312F_u;
    unit autoFB18312F_var;

    // Variable Initialization
    lv_bonusNo = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    while ((TriggerIsEnabled(TriggerGetCurrent()) == true) && (UnitIsAlive(gv_bonus_Databot[lv_bonusNo]) == true) && (UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0)) {
        autoFB18312F_g = gv_bonus_Escort_Group[lv_bonusNo];
        autoFB18312F_u = UnitGroupCount(autoFB18312F_g, c_unitCountAll);
        for (;; autoFB18312F_u -= 1) {
            autoFB18312F_var = UnitGroupUnitFromEnd(autoFB18312F_g, autoFB18312F_u);
            if (autoFB18312F_var == null) { break; }
            if ((DistanceBetweenPoints(UnitGetPosition(autoFB18312F_var), UnitGetPosition(gv_bonus_Databot[lv_bonusNo])) > 2.0)) {
                AISetUnitScriptControlled(autoFB18312F_var, true);
                UnitIssueOrder(autoFB18312F_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_bonus_Databot[lv_bonusNo])), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(autoFB18312F_var, false);
            }

        }
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02EscortDatabot_Init () {
    gt_BonusDatabot02EscortDatabot = TriggerCreate("gt_BonusDatabot02EscortDatabot_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Databot02 Escort Retreat
//--------------------------------------------------------------------------------------------------
bool gt_BonusDatabot02EscortRetreat_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bonusNo;

    // Automatic Variable Declarations
    unitgroup auto08D6035F_g;
    int auto08D6035F_u;
    unit auto08D6035F_var;
    unitgroup autoC00BE768_g;
    int autoC00BE768_u;
    unit autoC00BE768_var;

    // Variable Initialization
    lv_bonusNo = 1;

    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_bonus_Escort_Group[lv_bonusNo], c_unitCountAlive) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (true) {
        if ((RandomInt(0, 100) < 50)) {
            autoC00BE768_g = gv_bonus_Escort_Group[lv_bonusNo];
            autoC00BE768_u = UnitGroupCount(autoC00BE768_g, c_unitCountAll);
            for (;; autoC00BE768_u -= 1) {
                autoC00BE768_var = UnitGroupUnitFromEnd(autoC00BE768_g, autoC00BE768_u);
                if (autoC00BE768_var == null) { break; }
                AISetUnitScriptControlled(autoC00BE768_var, true);
                UnitIssueOrder(autoC00BE768_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(8))), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(autoC00BE768_var, false);
            }
        }
        else {
            auto08D6035F_g = gv_bonus_Escort_Group[lv_bonusNo];
            auto08D6035F_u = UnitGroupCount(auto08D6035F_g, c_unitCountAll);
            for (;; auto08D6035F_u -= 1) {
                auto08D6035F_var = UnitGroupUnitFromEnd(auto08D6035F_g, auto08D6035F_u);
                if (auto08D6035F_var == null) { break; }
                AISetUnitScriptControlled(auto08D6035F_var, true);
                UnitIssueOrder(auto08D6035F_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(13))), c_orderQueueReplace);
                Wait(0.5, c_timeGame);
                AISetUnitScriptControlled(auto08D6035F_var, false);
            }
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusDatabot02EscortRetreat_Init () {
    gt_BonusDatabot02EscortRetreat = TriggerCreate("gt_BonusDatabot02EscortRetreat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Start Intro
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionStartIntro_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_transmissionDelay;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_transmissionDelay = 2.0;

    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/54B63D1A"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    Wait(lv_transmissionDelay, c_timeReal);
    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/D62C1FF1"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    Wait(lv_transmissionDelay, c_timeReal);
    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/AA0654D4"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    Wait(lv_transmissionDelay, c_timeReal);
    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/69AFFD59"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionStartIntro_Init () {
    gt_TransmissionStartIntro = TriggerCreate("gt_TransmissionStartIntro_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Scout Sending
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScoutSending_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Short - gv_transmission_Portrait_Short), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/C5BA50A3"));
    Wait(gv_transmission_Time_Short, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScoutSending_Init () {
    gt_TransmissionScoutSending = TriggerCreate("gt_TransmissionScoutSending_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Scout Inside
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScoutInside_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Short - gv_transmission_Portrait_Short), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/9F808E52"));
    Wait(gv_transmission_Time_Short, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScoutInside_Init () {
    gt_TransmissionScoutInside = TriggerCreate("gt_TransmissionScoutInside_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Scout Mark Gates
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScoutMarkGates_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/BAE04AFB"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScoutMarkGates_Init () {
    gt_TransmissionScoutMarkGates = TriggerCreate("gt_TransmissionScoutMarkGates_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Scout Labs
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScoutLabs_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/802D04DC"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScoutLabs_Init () {
    gt_TransmissionScoutLabs = TriggerCreate("gt_TransmissionScoutLabs_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Scout Sabotage
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScoutSabotage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/736F85D8"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScoutSabotage_Init () {
    gt_TransmissionScoutSabotage = TriggerCreate("gt_TransmissionScoutSabotage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Dregg Spawned
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDreggSpawned_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/A2B176C1"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDreggSpawned_Init () {
    gt_TransmissionDreggSpawned = TriggerCreate("gt_TransmissionDreggSpawned_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Enemy Attacking Q
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionEnemyAttackingQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
    libCOMI_gf_SendMissionTransmission("AttackWave", true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
    libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
    TriggerQueueExit();
    Wait(20.0, c_timeAI);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionEnemyAttackingQ_Init () {
    gt_TransmissionEnemyAttackingQ = TriggerCreate("gt_TransmissionEnemyAttackingQ_Func");
    TriggerAddEventPlayerAIWave(gt_TransmissionEnemyAttackingQ, gv_pLAYER_03_ENEMY);
    TriggerAddEventPlayerAIWave(gt_TransmissionEnemyAttackingQ, gv_pLAYER_04_ENEMY);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Lab Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionLabDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - gv_transmission_Portrait_Base), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/F6965C11"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionLabDestroyed_Init () {
    gt_TransmissionLabDestroyed = TriggerCreate("gt_TransmissionLabDestroyed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Dregg Flees
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDreggFlees_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Short - gv_transmission_Portrait_Short), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/AD663284"));
    Wait(gv_transmission_Time_Short, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDreggFlees_Init () {
    gt_TransmissionDreggFlees = TriggerCreate("gt_TransmissionDreggFlees_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Dregg Final Battle Setup
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDreggFinalBattleSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Short - gv_transmission_Portrait_Short), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/5B0B39F2"));
    Wait(gv_transmission_Time_Short, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDreggFinalBattleSetup_Init () {
    gt_TransmissionDreggFinalBattleSetup = TriggerCreate("gt_TransmissionDreggFinalBattleSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Dregg Final Battle
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDreggFinalBattle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Short - gv_transmission_Portrait_Short), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/1C0D83F6"));
    Wait(gv_transmission_Time_Short, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDreggFinalBattle_Init () {
    gt_TransmissionDreggFinalBattle = TriggerCreate("gt_TransmissionDreggFinalBattle_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Databot
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusDatabot_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/A3EC0CC7"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusDatabot_Init () {
    gt_TransmissionBonusDatabot = TriggerCreate("gt_TransmissionBonusDatabot_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Databot Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusDatabotDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/3C83CADA"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusDatabotDestroyed_Init () {
    gt_TransmissionBonusDatabotDestroyed = TriggerCreate("gt_TransmissionBonusDatabotDestroyed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Databot Failed
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusDatabotFailed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_game_Over == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/0FA34292"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusDatabotFailed_Init () {
    gt_TransmissionBonusDatabotFailed = TriggerCreate("gt_TransmissionBonusDatabotFailed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Victory
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/2CE70383"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionVictory_Init () {
    gt_TransmissionVictory = TriggerCreate("gt_TransmissionVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Defeat Allied Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDefeatAlliedDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/450314EE"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDefeatAlliedDestroyed_Init () {
    gt_TransmissionDefeatAlliedDestroyed = TriggerCreate("gt_TransmissionDefeatAlliedDestroyed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Defeat Dregg Fully Evolved
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionDefeatDreggFullyEvolved_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    SoundPlayForPlayer(SoundLink("UI_TransmissionStart", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel("PrimalZerg01Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), SoundLink("RoachPrimal_Ready2", 0), (gv_transmission_Time_Base - 3.25), c_transmissionDurationAdd, false);
    UIDisplayMessage(libCOMI_gf_HumanPlayers(), c_messageAreaSubtitle, StringExternal("Param/Value/B541D1C4"));
    Wait(gv_transmission_Time_Base, c_timeGame);
    UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionDefeatDreggFullyEvolved_Init () {
    gt_TransmissionDefeatDreggFullyEvolved = TriggerCreate("gt_TransmissionDefeatDreggFullyEvolved_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool gt_Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoBF7A5ED3_g;
    int autoBF7A5ED3_u;
    unit autoBF7A5ED3_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Victory);
    gv_game_Over = true;
    TransmissionClearAll();
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    libCOMI_gf_CinematicModeCampaign(true, 1.5, true);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraLockInput(gv_pLAYER_02_USER, true);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_pLAYER_02_USER);
    UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
    autoBF7A5ED3_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBF7A5ED3_u = UnitGroupCount(autoBF7A5ED3_g, c_unitCountAll);
    for (;; autoBF7A5ED3_u -= 1) {
        autoBF7A5ED3_var = UnitGroupUnitFromEnd(autoBF7A5ED3_g, autoBF7A5ED3_u);
        if (autoBF7A5ED3_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoBF7A5ED3_var, true);
    }
    TriggerExecute(gt_TransmissionVictory, true, false);
    CameraPan(gv_pLAYER_01_USER, gv_victory_Point, 1.5, -1, 10.0, false);
    CameraPan(gv_pLAYER_02_USER, gv_victory_Point, 1.5, -1, 10.0, false);
    UISetCursorVisible(PlayerGroupAll(), true);
    Wait(4.0, c_timeGame);
    libCOMI_gf_EndCampaignMission(c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Victory_Init () {
    gt_Victory = TriggerCreate("gt_Victory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Allied Base Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAlliedBaseDestroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_cameraTarget;

    // Automatic Variable Declarations
    unitgroup auto03ADDCCB_g;
    int auto03ADDCCB_u;
    unit auto03ADDCCB_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(lib37CC0EF2_gf_DefeatAnyPlayerBaseDead())) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Defeat);
    gv_game_Over = true;
    TransmissionClearAll();
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    libCOMI_gf_CinematicModeCampaign(true, 1.5, true);
    TriggerExecute(gt_TransmissionDefeatAlliedDestroyed, true, false);
    if ((libNtve_gf_UnitGroupIsDead(UnitGroup(null, gv_pLAYER_01_USER, null, UnitFilter((1 << c_targetFilterPreventDefeat), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == true)) {
        lv_cameraTarget = PlayerStartLocation(gv_pLAYER_01_USER);
    }
    else {
        lv_cameraTarget = PlayerStartLocation(gv_pLAYER_02_USER);
    }
    Wait(2.0, c_timeReal);
    auto03ADDCCB_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto03ADDCCB_u = UnitGroupCount(auto03ADDCCB_g, c_unitCountAll);
    for (;; auto03ADDCCB_u -= 1) {
        auto03ADDCCB_var = UnitGroupUnitFromEnd(auto03ADDCCB_g, auto03ADDCCB_u);
        if (auto03ADDCCB_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto03ADDCCB_var, true);
    }
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraLockInput(gv_pLAYER_02_USER, true);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_pLAYER_02_USER);
    UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
    if ((RegionContainsPoint(RegionCircle(lv_cameraTarget, 8.0), CameraGetTarget(gv_pLAYER_01_USER)) == false)) {
        CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoDefault(), 2.0, -1, 10.0, false);
        CameraPan(gv_pLAYER_01_USER, lv_cameraTarget, 2.0, -1, 10.0, false);
    }

    if ((RegionContainsPoint(RegionCircle(lv_cameraTarget, 8.0), CameraGetTarget(gv_pLAYER_02_USER)) == false)) {
        CameraApplyInfo(gv_pLAYER_02_USER, CameraInfoDefault(), 2.0, -1, 10.0, false);
        CameraPan(gv_pLAYER_02_USER, lv_cameraTarget, 2.0, -1, 10.0, false);
    }

    Wait(4.0, c_timeReal);
    UISetCursorVisible(PlayerGroupAll(), true);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAlliedBaseDestroyed_Init () {
    gt_DefeatAlliedBaseDestroyed = TriggerCreate("gt_DefeatAlliedBaseDestroyed_Func");
    TriggerAddEventTimePeriodic(gt_DefeatAlliedBaseDestroyed, 1.0, c_timeAI);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Dregg Fully Evolved
//--------------------------------------------------------------------------------------------------
bool gt_DefeatDreggFullyEvolved_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE5BD17C5_g;
    int autoE5BD17C5_u;
    unit autoE5BD17C5_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Defeat);
    gv_game_Over = true;
    TransmissionClearAll();
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    libCOMI_gf_CinematicModeCampaign(true, 1.5, true);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraLockInput(gv_pLAYER_02_USER, true);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_pLAYER_02_USER);
    UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
    autoE5BD17C5_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE5BD17C5_u = UnitGroupCount(autoE5BD17C5_g, c_unitCountAll);
    for (;; autoE5BD17C5_u -= 1) {
        autoE5BD17C5_var = UnitGroupUnitFromEnd(autoE5BD17C5_g, autoE5BD17C5_u);
        if (autoE5BD17C5_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoE5BD17C5_var, true);
    }
    Wait(2.0, c_timeGame);
    TriggerExecute(gt_TransmissionDefeatDreggFullyEvolved, true, false);
    CameraPan(gv_pLAYER_01_USER, UnitGetPosition(gv_dregg), 1.5, -1, 10.0, false);
    CameraPan(gv_pLAYER_02_USER, UnitGetPosition(gv_dregg), 1.5, -1, 10.0, false);
    UISetCursorVisible(PlayerGroupAll(), true);
    Wait(6.0, c_timeGame);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatDreggFullyEvolved_Init () {
    gt_DefeatDreggFullyEvolved = TriggerCreate("gt_DefeatDreggFullyEvolved_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat
//--------------------------------------------------------------------------------------------------
bool gt_Defeat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_EndCampaignMission(c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Defeat_Init () {
    gt_Defeat = TriggerCreate("gt_Defeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI Attack Waves
//--------------------------------------------------------------------------------------------------
bool gt_AIAttackWaves_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gf_RunAttackWaveatMissionTime(gt_AttackWave01, (2.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave02, (5.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave03, (8.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave04, (11.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave05, (14.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave06, (17.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave07, (20.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave07, (22.0 * 60.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AIAttackWaves_Init () {
    gt_AIAttackWaves = TriggerCreate("gt_AIAttackWaves_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 01
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_03_ENEMY) != 1))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_03_ENEMY) != 2))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_04_ENEMY) != 1))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_04_ENEMY) != 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    lv_spawnPoint = RegionGetCenter(RegionFromId(8));
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave01_Init () {
    gt_AttackWave01 = TriggerCreate("gt_AttackWave01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 02
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    lv_spawnPoint = RegionGetCenter(RegionFromId(13));
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave02_Init () {
    gt_AttackWave02 = TriggerCreate("gt_AttackWave02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 03
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    int lv_numberOfStructures_ExpLeft;
    int lv_numberOfStructures_ExpRight;
    point lv_attackPathWaypoint;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    playergroup auto200FB8AA_g;
    int auto200FB8AA_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    auto200FB8AA_g = libCOMI_gf_HumanPlayers();
    auto200FB8AA_var = -1;
    while (true) {
        auto200FB8AA_var = PlayerGroupNextPlayer(auto200FB8AA_g, auto200FB8AA_var);
        if (auto200FB8AA_var < 0) { break; }
        lv_numberOfStructures_ExpLeft += UnitGroupCount(UnitGroup(null, auto200FB8AA_var, RegionFromId(3), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
        lv_numberOfStructures_ExpRight += UnitGroupCount(UnitGroup(null, auto200FB8AA_var, RegionFromId(4), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
    }
    if ((((lv_numberOfStructures_ExpLeft == 0) && (lv_numberOfStructures_ExpRight == 0)) || ((lv_numberOfStructures_ExpLeft > 0) && (lv_numberOfStructures_ExpRight > 0)))) {
        if ((RandomInt(0, 100) < 50)) {
            lv_attackPathWaypoint = PointFromId(367);
            lv_spawnPoint = RegionGetCenter(RegionFromId(8));
            gv_attack_Wave_Wave05_Path = PointFromId(358);
            gv_attack_Wave_Wave05_Spawn = RegionGetCenter(RegionFromId(13));
        }
        else {
            lv_attackPathWaypoint = PointFromId(358);
            lv_spawnPoint = RegionGetCenter(RegionFromId(13));
            gv_attack_Wave_Wave05_Path = PointFromId(367);
            gv_attack_Wave_Wave05_Spawn = RegionGetCenter(RegionFromId(8));
        }
    }
    else {
        if ((lv_numberOfStructures_ExpLeft > lv_numberOfStructures_ExpRight)) {
            lv_attackPathWaypoint = PointFromId(367);
            lv_spawnPoint = RegionGetCenter(RegionFromId(8));
            gv_attack_Wave_Wave05_Path = PointFromId(358);
            gv_attack_Wave_Wave05_Spawn = RegionGetCenter(RegionFromId(13));
        }
        else {
            lv_attackPathWaypoint = PointFromId(358);
            lv_spawnPoint = RegionGetCenter(RegionFromId(13));
            gv_attack_Wave_Wave05_Path = PointFromId(367);
            gv_attack_Wave_Wave05_Spawn = RegionGetCenter(RegionFromId(8));
        }
    }
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave03_Init () {
    gt_AttackWave03 = TriggerCreate("gt_AttackWave03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 04
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    lv_spawnPoint = RegionGetCenter(RegionFromId(8));
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave04_Init () {
    gt_AttackWave04 = TriggerCreate("gt_AttackWave04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 05
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_attackPathWaypoint;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_spawnPoint = gv_attack_Wave_Wave05_Spawn;
    lv_attackPathWaypoint = gv_attack_Wave_Wave05_Path;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave05_Init () {
    gt_AttackWave05 = TriggerCreate("gt_AttackWave05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 06
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave06_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__6Larger;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__6Larger;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
    lv_spawnPoint = RegionGetCenter(RegionFromId(13));
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave06_Init () {
    gt_AttackWave06 = TriggerCreate("gt_AttackWave06_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 07
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave07_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    point lv_spawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__7Largest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__7Largest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    if ((RandomInt(0, 100) < 50)) {
        lv_spawnPoint = RegionGetCenter(RegionFromId(8));
    }
    else {
        lv_spawnPoint = RegionGetCenter(RegionFromId(13));
    }
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, lv_spawnPoint, true);
    libCOMI_gf_AddAttackForceWaypoint(PointFromId(983836456), false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave07_Init () {
    gt_AttackWave07 = TriggerCreate("gt_AttackWave07_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Bankpreloading_Init();
    gt_Init01LoadData_Init();
    gt_Init02Players_Init();
    gt_Init03LoadingComplete_Init();
    gt_Init05Units_Init();
    gt_Init09Doodads_Init();
    gt_AIStart_Init();
    gt_GameStartQ_Init();
    gt_GameScoutsGathedData_Init();
    gt_GameLab01Activation_Init();
    gt_GameLab02Activation_Init();
    gt_GameLab03Activation_Init();
    gt_GameLab04Activation_Init();
    gt_GameDreggBattleQ_Init();
    gt_GameLabStartTimer_Init();
    gt_GameLabStartTimerHide_Init();
    gt_MapStartSpawnQ_Init();
    gt_MapStartSpawnLabQ_Init();
    gt_MapUnitDroppedFromHercules_Init();
    gt_MapSubway01Open_Init();
    gt_MapSubway01Close_Init();
    gt_MapSubway02Open_Init();
    gt_MapSubway02Close_Init();
    gt_MapSubway03Open_Init();
    gt_MapSubway03Close_Init();
    gt_MapSubway04Open_Init();
    gt_MapSubway04Close_Init();
    gt_MapSubway05Open_Init();
    gt_MapSubway05Close_Init();
    gt_MapAirGate01Open_Init();
    gt_MapAirGate01Close_Init();
    gt_MapAirGate02Open_Init();
    gt_MapAirGate02Close_Init();
    gt_MapLab01Gate01Subway03_Init();
    gt_MapLab01Rally00Subway03_Init();
    gt_MapLab01Rally01Subway02_Init();
    gt_MapLab01Rally02Subway05_Init();
    gt_MapLab01Rally03Subway03_Init();
    gt_MapLab01Reinforce01AirLeft_Init();
    gt_MapLab01Reinforce02AirRight_Init();
    gt_MapLab01ReinforceAmon_Init();
    gt_MapLab02Gate01Subway02_Init();
    gt_MapLab02Gate02Subway02_Init();
    gt_MapLab02Rally00Subway02_Init();
    gt_MapLab02Rally01Subway01_Init();
    gt_MapLab02Rally02Subway01_Init();
    gt_MapLab02Rally03Subway02_Init();
    gt_MapLab02Reinforce01AirLeft_Init();
    gt_MapLab02Reinforce02AirRight_Init();
    gt_MapLab02ReinforceAmon_Init();
    gt_MapLab03Gate01Subway05_Init();
    gt_MapLab03Gate02Subway05_Init();
    gt_MapLab03Rally00Subway05_Init();
    gt_MapLab03Rally01Subway04_Init();
    gt_MapLab03Rally02Subway05_Init();
    gt_MapLab03Rally03Subway04_Init();
    gt_MapLab03Reinforce01AirLeft_Init();
    gt_MapLab03Reinforce02AirRight_Init();
    gt_MapLab03ReinforceAmon_Init();
    gt_MapLab04Lock_Init();
    gt_MapLab04Bridge01Subway01_Init();
    gt_MapLab04Bridge01ReinforceAmon_Init();
    gt_MapLab04Bridge02Subway04_Init();
    gt_MapLab04Bridge02ReinforceAmon_Init();
    gt_MapLab04Guard01Subway01_Init();
    gt_MapLab04Guard02Subway01_Init();
    gt_MapLab04Guard03Subway04_Init();
    gt_MapLab04Guard04Subway04_Init();
    gt_MapLab04Reinforce01AirLeft_Init();
    gt_MapLab04Reinforce02AirRight_Init();
    gt_MapLab04ReinforceAmon_Init();
    gt_FinalBattleAmon01_Init();
    gt_FinalBattleAmon02_Init();
    gt_FinalBattleAmon03_Init();
    gt_FinalBattleAmon04_Init();
    gt_FinalBattleAttackPlayers_Init();
    gt_DreggQ_Init();
    gt_DreggCreate_Init();
    gt_DreggRespawn_Init();
    gt_DreggLabMove_Init();
    gt_DreggPing_Init();
    gt_DreggPingDestroy_Init();
    gt_DreggSetKillableState_Init();
    gt_DreggCannotDie_Init();
    gt_DreggDied_Init();
    gt_DreggFleesEffect_Init();
    gt_DreggHasFleeandHealing_Init();
    gt_DreggFleeforFinalBattle_Init();
    gt_DreggFleeMove_Init();
    gt_DreggIssueOrder_Init();
    gt_DreggStayInLabChannel_Init();
    gt_DreggEvolve_Init();
    gt_DreggEvolveEffect_Init();
    gt_DreggAttackQ_Init();
    gt_DreggAttackSetup_Init();
    gt_DreggAttackPlayers_Init();
    gt_DreggSetRank2_Init();
    gt_DreggSetRank3_Init();
    gt_DreggSetRank4_Init();
    gt_DreggSetStateChannel_Init();
    gt_DreggSetStateAttacking_Init();
    gt_DreggSetStateFleed_Init();
    gt_DreggSetStateWon_Init();
    gt_DreggSetStateFinalBattle_Init();
    gt_DreggSetStateEvolvingorFinalBattle_Init();
    gt_SygScoutSpawn_Init();
    gt_SygScoutLeft_Init();
    gt_SygScoutTopLeft_Init();
    gt_SygScoutMid_Init();
    gt_SygScoutRight_Init();
    gt_SygScoutTopRight_Init();
    gt_SygScoutAllianceTempOn_Init();
    gt_SygScoutAllianceTempOff_Init();
    gt_SygScoutExitLeftSubway02_Init();
    gt_SygScoutExitTopLeftSubway01_Init();
    gt_SygScoutExitMidSubway03_Init();
    gt_SygScoutExitRightSubway05_Init();
    gt_SygScoutExitTopRightSubway04_Init();
    gt_SygScoutForceLabActivation_Init();
    gt_MainObjOverloadLabsSetup_Init();
    gt_MainObjOverloadLabsUpdate_Init();
    gt_MainObjOverloadLabCompleted_Init();
    gt_MainObjOverloadLabHide_Init();
    gt_MainObjDreggEvolutionSetup_Init();
    gt_MainObjDreggEvolutionCompleted_Init();
    gt_MainObjDreggEvolutionFailed_Init();
    gt_MainObjDreggEvolutionHide_Init();
    gt_MainObjDestroyDreggSetup_Init();
    gt_MainObjDestroyDreggComplete_Init();
    gt_MarkBridgeControls_Init();
    gt_MarkLab01_Init();
    gt_MarkLab02_Init();
    gt_MarkLab03_Init();
    gt_MarkLab04_Init();
    gt_Lab01BridgeControlDestroyed_Init();
    gt_Lab01ScoutSabotage_Init();
    gt_Lab01Overload_Init();
    gt_Lab01OverloadComplete_Init();
    gt_Lab01DestroyStasisTube_Init();
    gt_Lab01CleanDoodads_Init();
    gt_Lab01ReinforceWavesQ_Init();
    gt_Lab01ReinforceWave01Q_Init();
    gt_Lab01ReinforceWavesGate_Init();
    gt_Lab01ReinforceWave01Subway03_Init();
    gt_Lab01ReinforceWave01Subway04_Init();
    gt_Lab01ReinforceWave02Q_Init();
    gt_Lab01ReinforceWave02Subway03_Init();
    gt_Lab01ReinforceWave02Subway04_Init();
    gt_Lab01ReinforceWave03Q_Init();
    gt_Lab01ReinforceWave03Subway03_Init();
    gt_Lab01ReinforceWave03Subway04_Init();
    gt_Lab01ReinforceWaveAirQ_Init();
    gt_Lab01ReinforceWaveAirLeft_Init();
    gt_Lab01ReinforceWaveAirRight_Init();
    gt_Lab02BridgeControlDestroyed_Init();
    gt_Lab02ScoutSabotage_Init();
    gt_Lab02Overload_Init();
    gt_Lab02OverloadComplete_Init();
    gt_Lab02DestroyStasisTube_Init();
    gt_Lab02CleanDoodads_Init();
    gt_Lab02ReinforceWavesQ_Init();
    gt_Lab02ReinforceWave01Q_Init();
    gt_Lab02ReinforceWavesGate_Init();
    gt_Lab02ReinforceWave01Subway01_Init();
    gt_Lab02ReinforceWave01Subway02_Init();
    gt_Lab02ReinforceWave02Q_Init();
    gt_Lab02ReinforceWave02Subway01_Init();
    gt_Lab02ReinforceWave02Subway02_Init();
    gt_Lab02ReinforceWave03Q_Init();
    gt_Lab02ReinforceWave03Subway01_Init();
    gt_Lab02ReinforceWave03Subway02_Init();
    gt_Lab02ReinforceWaveAirQ_Init();
    gt_Lab02ReinforceWaveAirLeft_Init();
    gt_Lab02ReinforceWaveAirRight_Init();
    gt_Lab03BridgeControlDestroyed_Init();
    gt_Lab03ScoutSabotage_Init();
    gt_Lab03Overload_Init();
    gt_Lab03OverloadComplete_Init();
    gt_Lab03DestroyStasisTube_Init();
    gt_Lab03CleanDoodads_Init();
    gt_Lab03ReinforceWavesQ_Init();
    gt_Lab03ReinforceWave01Q_Init();
    gt_Lab03ReinforceWavesGate_Init();
    gt_Lab03ReinforceWave01Subway04_Init();
    gt_Lab03ReinforceWave01Subway05_Init();
    gt_Lab03ReinforceWave02Q_Init();
    gt_Lab03ReinforceWave02Subway04_Init();
    gt_Lab03ReinforceWave02Subway05_Init();
    gt_Lab03ReinforceWave03Q_Init();
    gt_Lab03ReinforceWave03Subway04_Init();
    gt_Lab03ReinforceWave03Subway05_Init();
    gt_Lab03ReinforceWaveAirQ_Init();
    gt_Lab03ReinforceWaveAirLeft_Init();
    gt_Lab03ReinforceWaveAirRight_Init();
    gt_Lab04BridgeControlDestroyed1_Init();
    gt_Lab04BridgeControlDestroyed2_Init();
    gt_Lab04ScoutSabotage_Init();
    gt_Lab04Overload_Init();
    gt_Lab04OverloadComplete_Init();
    gt_Lab04DestroyStasisTube_Init();
    gt_Lab04CleanDoodads_Init();
    gt_Lab04ReinforceWavesQ_Init();
    gt_Lab04ReinforceWave01Q_Init();
    gt_Lab04ReinforceWavesGate01_Init();
    gt_Lab04ReinforceWavesGate02_Init();
    gt_Lab04ReinforceWave01Subway01_Init();
    gt_Lab04ReinforceWave01Subway04_Init();
    gt_Lab04ReinforceWave02Q_Init();
    gt_Lab04ReinforceWave02Subway01_Init();
    gt_Lab04ReinforceWave02Subway04_Init();
    gt_Lab04ReinforceWave03Q_Init();
    gt_Lab04ReinforceWave03Subway01_Init();
    gt_Lab04ReinforceWave03Subway04_Init();
    gt_Lab04ReinforceWaveAirQ_Init();
    gt_Lab04ReinforceWaveAirLeft_Init();
    gt_Lab04ReinforceWaveAirRight_Init();
    gt_ProgressBarDisplay_Init();
    gt_ProgressBarUpdate_Init();
    gt_ProgressBarHide_Init();
    gt_BonusDatabot01SetupQ_Init();
    gt_BonusDatabot01SpawnSubway04_Init();
    gt_BonusDatabot01SetupObjective_Init();
    gt_BonusDatabot01SetupPing_Init();
    gt_BonusDatabot01DatabotKilled_Init();
    gt_BonusDatabot01DatabotMovetoConsole_Init();
    gt_BonusDatabot01DatabotRecoverData_Init();
    gt_BonusDatabot01DatabotEscaping_Init();
    gt_BonusDatabot01DatabotEscaped_Init();
    gt_BonusDatabot01EscortDatabot_Init();
    gt_BonusDatabot01EscortRetreat_Init();
    gt_BonusDatabot02SetupQ_Init();
    gt_BonusDatabot02SpawnSubway01_Init();
    gt_BonusDatabot02SetupObjective_Init();
    gt_BonusDatabot02SetupPing_Init();
    gt_BonusDatabot02DatabotKilled_Init();
    gt_BonusDatabot02DatabotMovetoConsole_Init();
    gt_BonusDatabot02DatabotRecoverData_Init();
    gt_BonusDatabot02DatabotEscaping_Init();
    gt_BonusDatabot02DatabotEscaped_Init();
    gt_BonusDatabot02EscortDatabot_Init();
    gt_BonusDatabot02EscortRetreat_Init();
    gt_TransmissionStartIntro_Init();
    gt_TransmissionScoutSending_Init();
    gt_TransmissionScoutInside_Init();
    gt_TransmissionScoutMarkGates_Init();
    gt_TransmissionScoutLabs_Init();
    gt_TransmissionScoutSabotage_Init();
    gt_TransmissionDreggSpawned_Init();
    gt_TransmissionEnemyAttackingQ_Init();
    gt_TransmissionLabDestroyed_Init();
    gt_TransmissionDreggFlees_Init();
    gt_TransmissionDreggFinalBattleSetup_Init();
    gt_TransmissionDreggFinalBattle_Init();
    gt_TransmissionBonusDatabot_Init();
    gt_TransmissionBonusDatabotDestroyed_Init();
    gt_TransmissionBonusDatabotFailed_Init();
    gt_TransmissionVictory_Init();
    gt_TransmissionDefeatAlliedDestroyed_Init();
    gt_TransmissionDefeatDreggFullyEvolved_Init();
    gt_Victory_Init();
    gt_DefeatAlliedBaseDestroyed_Init();
    gt_DefeatDreggFullyEvolved_Init();
    gt_Defeat_Init();
    gt_AIAttackWaves_Init();
    gt_AttackWave01_Init();
    gt_AttackWave02_Init();
    gt_AttackWave03_Init();
    gt_AttackWave04_Init();
    gt_AttackWave05_Init();
    gt_AttackWave06_Init();
    gt_AttackWave07_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitCustomAI();
    InitTriggers();
}

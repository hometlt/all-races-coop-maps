<?xml version="1.0" encoding="utf-8"?>
<TriggerData>
    <Root>
        <Item Type="CustomScript" Id="3F5BB665"/>
    </Root>
    <Element Type="CustomScript" Id="3F5BB665">
        <Identifier>Triggers</Identifier>
        <ScriptCode>
            //==================================================================================================
            // 
            // Generated AI Script
            // 
            // AI Name: Hybrid Wave AI
            // 
            //==================================================================================================
            include &quot;TriggerLibs/natives&quot;
            include &quot;TriggerLibs/AI&quot;
            include &quot;TriggerLibs/Computer&quot;
            //--------------------------------------------------------------------------------------------------
            // Globals
            //--------------------------------------------------------------------------------------------------
            point[17] aiE127FAE1_defGather;
            string[17] aiE127FAE1_customData;
            wave[17] aiE127FAE1_lastWave;
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave1_enabled;
            wave[17] aiE127FAE1_wave1_lastWave;
            trigger aiE127FAE1_wave1_trigger = null;
            int aiE127FAE1_wave1_runPlayer;
            playergroup aiE127FAE1_wave1_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave1_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave1_enabled[init_i] = true;
                    aiE127FAE1_wave1_lastWave[init_i] = null;
                }
                aiE127FAE1_wave1_trigger = TriggerCreate(&quot;aiE127FAE1_wave1_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave1_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave1_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave1_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave1_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave1_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave1_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave1_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave1_runPlayer;
                playergroup target = aiE127FAE1_wave1_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave1_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 270; }
                if (d == 2) { ta = 270; }
                if (d == 3) { ta = 270; }
                if (d == 4) { ta = 270; }
                if (d == 5) { ta = 270; }
                if (d == 6) { ta = 270; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave01_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave1_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave1_runPlayer = p;
                aiE127FAE1_wave1_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave1_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave2_enabled;
            wave[17] aiE127FAE1_wave2_lastWave;
            trigger aiE127FAE1_wave2_trigger = null;
            int aiE127FAE1_wave2_runPlayer;
            playergroup aiE127FAE1_wave2_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave2_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave2_enabled[init_i] = true;
                    aiE127FAE1_wave2_lastWave[init_i] = null;
                }
                aiE127FAE1_wave2_trigger = TriggerCreate(&quot;aiE127FAE1_wave2_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave2_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave2_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave2_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave2_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave2_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave2_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave2_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave2_runPlayer;
                playergroup target = aiE127FAE1_wave2_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave2_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 210; }
                if (d == 2) { ta = 210; }
                if (d == 3) { ta = 210; }
                if (d == 4) { ta = 210; }
                if (d == 5) { ta = 210; }
                if (d == 6) { ta = 210; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave02_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave2_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave2_runPlayer = p;
                aiE127FAE1_wave2_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave2_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave3_enabled;
            wave[17] aiE127FAE1_wave3_lastWave;
            trigger aiE127FAE1_wave3_trigger = null;
            int aiE127FAE1_wave3_runPlayer;
            playergroup aiE127FAE1_wave3_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave3_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave3_enabled[init_i] = true;
                    aiE127FAE1_wave3_lastWave[init_i] = null;
                }
                aiE127FAE1_wave3_trigger = TriggerCreate(&quot;aiE127FAE1_wave3_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave3_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave3_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave3_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave3_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave3_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave3_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave3_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave3_runPlayer;
                playergroup target = aiE127FAE1_wave3_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave3_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 240; }
                if (d == 2) { ta = 240; }
                if (d == 3) { ta = 240; }
                if (d == 4) { ta = 240; }
                if (d == 5) { ta = 240; }
                if (d == 6) { ta = 240; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave03_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave3_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave3_runPlayer = p;
                aiE127FAE1_wave3_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave3_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave4_enabled;
            wave[17] aiE127FAE1_wave4_lastWave;
            trigger aiE127FAE1_wave4_trigger = null;
            int aiE127FAE1_wave4_runPlayer;
            playergroup aiE127FAE1_wave4_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave4_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave4_enabled[init_i] = true;
                    aiE127FAE1_wave4_lastWave[init_i] = null;
                }
                aiE127FAE1_wave4_trigger = TriggerCreate(&quot;aiE127FAE1_wave4_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave4_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave4_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave4_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave4_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave4_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave4_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave4_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave4_runPlayer;
                playergroup target = aiE127FAE1_wave4_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave4_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 240; }
                if (d == 2) { ta = 240; }
                if (d == 3) { ta = 240; }
                if (d == 4) { ta = 240; }
                if (d == 5) { ta = 240; }
                if (d == 6) { ta = 240; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave04_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave4_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave4_runPlayer = p;
                aiE127FAE1_wave4_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave4_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave5_enabled;
            wave[17] aiE127FAE1_wave5_lastWave;
            trigger aiE127FAE1_wave5_trigger = null;
            int aiE127FAE1_wave5_runPlayer;
            playergroup aiE127FAE1_wave5_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave5_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave5_enabled[init_i] = true;
                    aiE127FAE1_wave5_lastWave[init_i] = null;
                }
                aiE127FAE1_wave5_trigger = TriggerCreate(&quot;aiE127FAE1_wave5_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave5_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave5_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave5_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave5_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave5_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave5_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave5_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave5_runPlayer;
                playergroup target = aiE127FAE1_wave5_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave5_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 210; }
                if (d == 2) { ta = 210; }
                if (d == 3) { ta = 210; }
                if (d == 4) { ta = 210; }
                if (d == 5) { ta = 210; }
                if (d == 6) { ta = 210; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave05_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave5_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave5_runPlayer = p;
                aiE127FAE1_wave5_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave5_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave6_enabled;
            wave[17] aiE127FAE1_wave6_lastWave;
            trigger aiE127FAE1_wave6_trigger = null;
            int aiE127FAE1_wave6_runPlayer;
            playergroup aiE127FAE1_wave6_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave6_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave6_enabled[init_i] = true;
                    aiE127FAE1_wave6_lastWave[init_i] = null;
                }
                aiE127FAE1_wave6_trigger = TriggerCreate(&quot;aiE127FAE1_wave6_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave6_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave6_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave6_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave6_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave6_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave6_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave6_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave6_runPlayer;
                playergroup target = aiE127FAE1_wave6_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave6_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 210; }
                if (d == 2) { ta = 210; }
                if (d == 3) { ta = 210; }
                if (d == 4) { ta = 210; }
                if (d == 5) { ta = 210; }
                if (d == 6) { ta = 210; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave06_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave6_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave6_runPlayer = p;
                aiE127FAE1_wave6_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave6_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave: 
            //--------------------------------------------------------------------------------------------------
            bool[17] aiE127FAE1_wave7_enabled;
            wave[17] aiE127FAE1_wave7_lastWave;
            trigger aiE127FAE1_wave7_trigger = null;
            int aiE127FAE1_wave7_runPlayer;
            playergroup aiE127FAE1_wave7_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave7_init () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    aiE127FAE1_wave7_enabled[init_i] = true;
                    aiE127FAE1_wave7_lastWave[init_i] = null;
                }
                aiE127FAE1_wave7_trigger = TriggerCreate(&quot;aiE127FAE1_wave7_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave7_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave7_enabled[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave7_isEnabled (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                return aiE127FAE1_wave7_enabled[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave7_createdWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_wave7_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave7_runFunc (bool c, bool a) {
                int p = aiE127FAE1_wave7_runPlayer;
                playergroup target = aiE127FAE1_wave7_runTarget;
                int d;
                point gatherPoint = null;
                int ta = 0;
                int tg = 0;
                int ts = 0;
                int tf = 0;
                int td = 0;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                d = PlayerDifficulty(p);
                if (!aiE127FAE1_wave7_enabled[p]) {
                    td = 0;
                    if (td &gt; 0) {
                        Wait(td, c_timeAI);
                    }
                    return true;
                }
                aiE127FAE1_customData[p] = &quot;&quot;;
                ta = 0;
                if (d == 1) { ta = 210; }
                if (d == 2) { ta = 210; }
                if (d == 3) { ta = 210; }
                if (d == 4) { ta = 210; }
                if (d == 5) { ta = 210; }
                if (d == 6) { ta = 210; }
                tg = 0;
                ts = ta;
                TriggerExecute(TriggerFind(&quot;gt_AttackWave07_Func&quot;), true, false);
                if (tg &gt; 0 &amp;&amp; tg &lt; ta) {
                    Wait(ta - tg, c_timeAI);
                    ts = tg;
                }
                AIAttackWaveSetTargetPlayer(p, target);
                gatherPoint = aiE127FAE1_defGather[p];
                AIAttackWaveSetGatherPoint(p, gatherPoint);
                AIAttackWaveClearWaypoints(p);
                Wait(ts, c_timeAI);
                tf = 0;
                if (tf &gt; 0) {
                    Wait(tf, c_timeAI);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave7_run (int p, playergroup target, bool wait) {
                aiE127FAE1_wave7_runPlayer = p;
                aiE127FAE1_wave7_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_wave7_trigger, false, wait);
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave Wrappers
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave_enable (int w, int p, bool val) {
                if (w == 1) { aiE127FAE1_wave1_enable(p, val); }
                if (w == 2) { aiE127FAE1_wave2_enable(p, val); }
                if (w == 3) { aiE127FAE1_wave3_enable(p, val); }
                if (w == 4) { aiE127FAE1_wave4_enable(p, val); }
                if (w == 5) { aiE127FAE1_wave5_enable(p, val); }
                if (w == 6) { aiE127FAE1_wave6_enable(p, val); }
                if (w == 7) { aiE127FAE1_wave7_enable(p, val); }
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_wave_isEnabled (int w, int p) {
                if (w == 1) { return aiE127FAE1_wave1_isEnabled(p); }
                if (w == 2) { return aiE127FAE1_wave2_isEnabled(p); }
                if (w == 3) { return aiE127FAE1_wave3_isEnabled(p); }
                if (w == 4) { return aiE127FAE1_wave4_isEnabled(p); }
                if (w == 5) { return aiE127FAE1_wave5_isEnabled(p); }
                if (w == 6) { return aiE127FAE1_wave6_isEnabled(p); }
                if (w == 7) { return aiE127FAE1_wave7_isEnabled(p); }
                return false;
            }
            //--------------------------------------------------------------------------------------------------
            unitgroup aiE127FAE1_wave_createdUnits (int w, int p) {
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_wave_createdWave (int w, int p) {
                if (w == 1) { return aiE127FAE1_wave1_createdWave(p); }
                if (w == 2) { return aiE127FAE1_wave2_createdWave(p); }
                if (w == 3) { return aiE127FAE1_wave3_createdWave(p); }
                if (w == 4) { return aiE127FAE1_wave4_createdWave(p); }
                if (w == 5) { return aiE127FAE1_wave5_createdWave(p); }
                if (w == 6) { return aiE127FAE1_wave6_createdWave(p); }
                if (w == 7) { return aiE127FAE1_wave7_createdWave(p); }
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_wave_run (int w, int p, playergroup target, bool wait) {
                if (w == 1) { aiE127FAE1_wave1_run(p, target, wait); }
                if (w == 2) { aiE127FAE1_wave2_run(p, target, wait); }
                if (w == 3) { aiE127FAE1_wave3_run(p, target, wait); }
                if (w == 4) { aiE127FAE1_wave4_run(p, target, wait); }
                if (w == 5) { aiE127FAE1_wave5_run(p, target, wait); }
                if (w == 6) { aiE127FAE1_wave6_run(p, target, wait); }
                if (w == 7) { aiE127FAE1_wave7_run(p, target, wait); }
            }
            //--------------------------------------------------------------------------------------------------
            // Attack Wave Sequence
            //--------------------------------------------------------------------------------------------------
            trigger aiE127FAE1_waves_trigger = null;
            int aiE127FAE1_waves_runPlayer;
            playergroup aiE127FAE1_waves_runTarget;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_waves_init () {
                aiE127FAE1_waves_trigger = TriggerCreate(&quot;aiE127FAE1_waves_runFunc&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_waves_runFunc (bool c, bool a) {
                int p = aiE127FAE1_waves_runPlayer;
                playergroup target = aiE127FAE1_waves_runTarget;
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                aiE127FAE1_wave1_run(p, target, true);
                aiE127FAE1_wave2_run(p, target, true);
                aiE127FAE1_wave3_run(p, target, true);
                aiE127FAE1_wave4_run(p, target, true);
                aiE127FAE1_wave5_run(p, target, true);
                aiE127FAE1_wave6_run(p, target, true);
                aiE127FAE1_wave7_run(p, target, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_waves_run (int p, playergroup target) {
                aiE127FAE1_waves_runPlayer = p;
                aiE127FAE1_waves_runTarget = PlayerGroupCopy(target);
                TriggerExecute(aiE127FAE1_waves_trigger, false, false);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_waves_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_wave1_enable(p, val);
                aiE127FAE1_wave2_enable(p, val);
                aiE127FAE1_wave3_enable(p, val);
                aiE127FAE1_wave4_enable(p, val);
                aiE127FAE1_wave5_enable(p, val);
                aiE127FAE1_wave6_enable(p, val);
                aiE127FAE1_wave7_enable(p, val);
            }
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_waves_stop () {
                TriggerStop(aiE127FAE1_waves_trigger);
                TriggerStop(aiE127FAE1_wave1_trigger);
                TriggerStop(aiE127FAE1_wave2_trigger);
                TriggerStop(aiE127FAE1_wave3_trigger);
                TriggerStop(aiE127FAE1_wave4_trigger);
                TriggerStop(aiE127FAE1_wave5_trigger);
                TriggerStop(aiE127FAE1_wave6_trigger);
                TriggerStop(aiE127FAE1_wave7_trigger);
            }
            //--------------------------------------------------------------------------------------------------
            // Configuration
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_setDefGather (int p, point val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                aiE127FAE1_defGather[p] = val;
            }
            //--------------------------------------------------------------------------------------------------
            string aiE127FAE1_getCustomData (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_customData[p];
            }
            //--------------------------------------------------------------------------------------------------
            wave aiE127FAE1_getLastWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                return aiE127FAE1_lastWave[p];
            }
            //--------------------------------------------------------------------------------------------------
            // Start
            //--------------------------------------------------------------------------------------------------
            bool aiE127FAE1_initialized = false;
            //--------------------------------------------------------------------------------------------------
            void aiE127FAE1_start (int p) {
                int init_i;
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (!aiE127FAE1_initialized) {
                    aiE127FAE1_wave1_init();
                    aiE127FAE1_wave2_init();
                    aiE127FAE1_wave3_init();
                    aiE127FAE1_wave4_init();
                    aiE127FAE1_wave5_init();
                    aiE127FAE1_wave6_init();
                    aiE127FAE1_wave7_init();
                    aiE127FAE1_waves_init();
                    for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                        aiE127FAE1_defGather[init_i] = PointFromId(0);
                    }
                    aiE127FAE1_initialized = true;
                }
                AICampaignStart(p);
            }
            //==================================================================================================
            // 
            // Generated Map Script
            // 
            // Name:   RTC 2017: Dominion War Machines
            // 
            //==================================================================================================
            include &quot;TriggerLibs/NativeLib&quot;
            include &quot;TriggerLibs/SwarmLib&quot;
            include &quot;LibCOMI&quot;
            //--------------------------------------------------------------------------------------------------
            // Library Initialization
            //--------------------------------------------------------------------------------------------------
            void InitLibs () {
                libNtve_InitLib();
                libHots_InitLib();
                libCOMI_InitLib();
            }
            //--------------------------------------------------------------------------------------------------
            // Constants
            //--------------------------------------------------------------------------------------------------
            int gv_pLAYER_01_USER = 1;
            int gv_pLAYER_02_USER = 2;
            const int gv_pLAYER_03_ENEMY = 6;
            const int gv_pLAYER_04_ENEMY = 7;
            //--------------------------------------------------------------------------------------------------
            // Global Variables
            //--------------------------------------------------------------------------------------------------
            playergroup gv_enemyGroup;
            timer gv_timer_Window_Countdown;
            int gv_countdown_Warp_Device;
            int gv_ping_Duration;
            timer gv_timer_WarpDevice_1;
            int gv_timer_Window_1;
            timer gv_timer_WarpDevice_2A;
            timer gv_timer_WarpDevice_2B;
            timer gv_timer_WarpDevices_Phase2_AB;
            int gv_timer_Window_2;
            timer gv_timer_WarpDevice_3A;
            timer gv_timer_WarpDevice_3B;
            timer gv_timer_WarpDevice_3C;
            timer gv_timer_WarpDevices_Phase3_ABC;
            timer gv_timer_WarpDevices_Phase3_AB;
            timer gv_timer_WarpDevices_Phase3_BC;
            timer gv_timer_WarpDevices_Phase3_AC;
            int gv_timer_Window_3;
            timer gv_timer_WarpDevice_4A;
            timer gv_timer_WarpDevice_4B;
            timer gv_timer_WarpDevice_4C;
            timer gv_timer_WarpDevice_4D;
            timer gv_timer_WarpDevices_Phase4_ABCD;
            timer gv_timer_WarpDevices_Phase4_ABC;
            timer gv_timer_WarpDevices_Phase4_ACD;
            timer gv_timer_WarpDevices_Phase4_ABD;
            timer gv_timer_WarpDevices_Phase4_BCD;
            timer gv_timer_WarpDevices_Phase4_AB;
            timer gv_timer_WarpDevices_Phase4_AC;
            timer gv_timer_WarpDevices_Phase4_AD;
            timer gv_timer_WarpDevices_Phase4_BC;
            timer gv_timer_WarpDevices_Phase4_BD;
            timer gv_timer_WarpDevices_Phase4_CD;
            int gv_timer_Window_4;
            timer gv_timer_WarpDevice_5A;
            timer gv_timer_WarpDevice_5B;
            timer gv_timer_WarpDevice_5C;
            timer gv_timer_WarpDevice_5D;
            timer gv_timer_WarpDevices_Phase5_ABCD;
            timer gv_timer_WarpDevices_Phase5_ABC;
            timer gv_timer_WarpDevices_Phase5_ACD;
            timer gv_timer_WarpDevices_Phase5_ABD;
            timer gv_timer_WarpDevices_Phase5_BCD;
            timer gv_timer_WarpDevices_Phase5_AB;
            timer gv_timer_WarpDevices_Phase5_AC;
            timer gv_timer_WarpDevices_Phase5_AD;
            timer gv_timer_WarpDevices_Phase5_BC;
            timer gv_timer_WarpDevices_Phase5_BD;
            timer gv_timer_WarpDevices_Phase5_CD;
            int gv_timer_Window_5;
            point gv_attackWaveA_Wave05Path;
            region[3][11] gv_attackSpawn;
            int gv_objective_PrimaryObjective_1;
            int gv_var_WarpDevices_Remaining;
            int gv_var_WarpDevices_Destroyed;
            int gv_objective_PrimaryObjective_2;
            int gv_var_WarpDevices_Activated;
            int gv_var_WarpDevices_Activated_MaxCount;
            int gv_objective_Primary_DestroyOdins;
            int gv_var_Odins_Dead;
            int gv_var_Odins_MaxCount;
            int gv_camera_MissionComplete;
            int gv_secondary_BonusObjective_1;
            int gv_secondary_BonusObjective_2;
            int gv_clock_BonusObjective_2;
            void InitGlobals () {
                gv_enemyGroup = PlayerGroupEmpty();
                gv_timer_Window_Countdown = TimerCreate();
                gv_timer_WarpDevice_1 = TimerCreate();
                gv_timer_Window_1 = c_timerWindowNone;
                gv_timer_WarpDevice_2A = TimerCreate();
                gv_timer_WarpDevice_2B = TimerCreate();
                gv_timer_WarpDevices_Phase2_AB = TimerCreate();
                gv_timer_Window_2 = c_timerWindowNone;
                gv_timer_WarpDevice_3A = TimerCreate();
                gv_timer_WarpDevice_3B = TimerCreate();
                gv_timer_WarpDevice_3C = TimerCreate();
                gv_timer_WarpDevices_Phase3_ABC = TimerCreate();
                gv_timer_WarpDevices_Phase3_AB = TimerCreate();
                gv_timer_WarpDevices_Phase3_BC = TimerCreate();
                gv_timer_WarpDevices_Phase3_AC = TimerCreate();
                gv_timer_Window_3 = c_timerWindowNone;
                gv_timer_WarpDevice_4A = TimerCreate();
                gv_timer_WarpDevice_4B = TimerCreate();
                gv_timer_WarpDevice_4C = TimerCreate();
                gv_timer_WarpDevice_4D = TimerCreate();
                gv_timer_WarpDevices_Phase4_ABCD = TimerCreate();
                gv_timer_WarpDevices_Phase4_ABC = TimerCreate();
                gv_timer_WarpDevices_Phase4_ACD = TimerCreate();
                gv_timer_WarpDevices_Phase4_ABD = TimerCreate();
                gv_timer_WarpDevices_Phase4_BCD = TimerCreate();
                gv_timer_WarpDevices_Phase4_AB = TimerCreate();
                gv_timer_WarpDevices_Phase4_AC = TimerCreate();
                gv_timer_WarpDevices_Phase4_AD = TimerCreate();
                gv_timer_WarpDevices_Phase4_BC = TimerCreate();
                gv_timer_WarpDevices_Phase4_BD = TimerCreate();
                gv_timer_WarpDevices_Phase4_CD = TimerCreate();
                gv_timer_Window_4 = c_timerWindowNone;
                gv_timer_WarpDevice_5A = TimerCreate();
                gv_timer_WarpDevice_5B = TimerCreate();
                gv_timer_WarpDevice_5C = TimerCreate();
                gv_timer_WarpDevice_5D = TimerCreate();
                gv_timer_WarpDevices_Phase5_ABCD = TimerCreate();
                gv_timer_WarpDevices_Phase5_ABC = TimerCreate();
                gv_timer_WarpDevices_Phase5_ACD = TimerCreate();
                gv_timer_WarpDevices_Phase5_ABD = TimerCreate();
                gv_timer_WarpDevices_Phase5_BCD = TimerCreate();
                gv_timer_WarpDevices_Phase5_AB = TimerCreate();
                gv_timer_WarpDevices_Phase5_AC = TimerCreate();
                gv_timer_WarpDevices_Phase5_AD = TimerCreate();
                gv_timer_WarpDevices_Phase5_BC = TimerCreate();
                gv_timer_WarpDevices_Phase5_BD = TimerCreate();
                gv_timer_WarpDevices_Phase5_CD = TimerCreate();
                gv_timer_Window_5 = c_timerWindowNone;
                gv_objective_PrimaryObjective_1 = c_invalidObjectiveId;
                gv_objective_PrimaryObjective_2 = c_invalidObjectiveId;
                gv_objective_Primary_DestroyOdins = c_invalidObjectiveId;
                gv_secondary_BonusObjective_1 = c_invalidObjectiveId;
                gv_secondary_BonusObjective_2 = c_invalidObjectiveId;
                gv_clock_BonusObjective_2 = 480;
            }
            //--------------------------------------------------------------------------------------------------
            // Global Function Declarations
            //--------------------------------------------------------------------------------------------------
            void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime);
            point gf_AttackWaveSpawn ();
            void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time);
            //--------------------------------------------------------------------------------------------------
            // Trigger Variables
            //--------------------------------------------------------------------------------------------------
            trigger gt_Init01LoadData;
            trigger gt_Init02Players;
            trigger gt_Init03LoadingComplete;
            trigger gt_Init04Technology;
            trigger gt_Init05Units;
            trigger gt_Init06MusicSound;
            trigger gt_Init07Environment;
            trigger gt_Init08Difficulties;
            trigger gt_Init09MapSpecifics;
            trigger gt_StartGameQ;
            trigger gt_MessageStart;
            trigger gt_MessageMoebiusUnitWarning;
            trigger gt_MessageHalfWay;
            trigger gt_EncounterPredator;
            trigger gt_EncounterWarpDevice2A;
            trigger gt_EncounterTerminationBotA;
            trigger gt_EncounterTerminationBotB;
            trigger gt_EncounterLaserDrillTank;
            trigger gt_EncounterSkyMarshal;
            trigger gt_EncounterArchangel;
            trigger gt_PredatorUpgrades;
            trigger gt_SkyMarshal1;
            trigger gt_SkyMarshal2;
            trigger gt_SkyMarshal3;
            trigger gt_SkyMarshal4;
            trigger gt_UnitWarpInMcKenzieMessage;
            trigger gt_UnitWarp3AP1;
            trigger gt_UnitWarp3AP2;
            trigger gt_UnitWarp3BP1;
            trigger gt_UnitWarp3BP2;
            trigger gt_UnitWarp3CP1;
            trigger gt_UnitWarp3CP2;
            trigger gt_UnitWarp4ABP1;
            trigger gt_UnitWarp4ABP2;
            trigger gt_UnitWarp4CP1;
            trigger gt_UnitWarp4CP2;
            trigger gt_UnitWarp4DP1;
            trigger gt_UnitWarp4DP2;
            trigger gt_UnitWarp5ABP1;
            trigger gt_UnitWarp5ABP2;
            trigger gt_UnitWarp5CDP1;
            trigger gt_UnitWarp5CDP2;
            trigger gt_AbilitiesWarpDevice1;
            trigger gt_AbilitiesWarpDevice2A;
            trigger gt_AbilitiesWarpDevice2B;
            trigger gt_AbilitiesWarpDevice3A;
            trigger gt_AbilitiesWarpDevice3B;
            trigger gt_AbilitiesWarpDevice3C;
            trigger gt_AbilitiesWarpDevice4A;
            trigger gt_AbilitiesWarpDevice4B;
            trigger gt_AbilitiesWarpDevice4BLightingStorm;
            trigger gt_AbilitiesWarpDevice4C;
            trigger gt_AbilitiesWarpDevice4CLightingStorm;
            trigger gt_AbilitiesWarpDevice4D;
            trigger gt_AbilitiesWarpDevice5A;
            trigger gt_AbilitiesWarpDevice5B;
            trigger gt_AbilitiesWarpDevice5BLightingStorm;
            trigger gt_AbilitiesWarpDevice5C;
            trigger gt_AbilitiesWarpDevice5CLightingStorm;
            trigger gt_AbilitiesWarpDevice5D;
            trigger gt_UIMinimapAlert;
            trigger gt_WarpDevicePhase1Ping;
            trigger gt_WarpDevicePhase1Setup;
            trigger gt_WarpDevice1Destroyed;
            trigger gt_WarpDevice1Activated;
            trigger gt_DestroyTimerWindow1;
            trigger gt_WarpDevice1Device1WarpOut;
            trigger gt_WarpDevice1BulwarkCompanyWarpOut;
            trigger gt_WarpDevice1PhalanxSquadronWarpOut;
            trigger gt_WarpDevicePhase2Ping;
            trigger gt_WarpDevicePhase2Setup;
            trigger gt_WarpDevice2ADestroyed;
            trigger gt_WarpDevice2BDestroyed;
            trigger gt_DestroyTimerWindow2;
            trigger gt_WarpDevice2AActivated;
            trigger gt_WarpDevice2BActivated;
            trigger gt_WarpDevicesPhase2ABActivated;
            trigger gt_WarpDevice2ADevice2AWarpOut;
            trigger gt_WarpDevice2BDevice2BWarpOut;
            trigger gt_WarpDevice2ASkyFuryWarpOut;
            trigger gt_WarpDevice2BNightWolfWarpOut;
            trigger gt_WarpDevice2BWingedNightmareWarpOut;
            trigger gt_WarpDevicePhase3Ping;
            trigger gt_WarpDevicePhase3Setup;
            trigger gt_WarpDevice3ADestroyed;
            trigger gt_WarpDevice3BDestroyed;
            trigger gt_WarpDevice3CDestroyed;
            trigger gt_DestroyTimerWindow3;
            trigger gt_WarpDevice3AActivated;
            trigger gt_WarpDevice3BActivated;
            trigger gt_WarpDevice3CActivated;
            trigger gt_WarpDevicesPhase3ABActivated;
            trigger gt_WarpDevicesPhase3ACActivated;
            trigger gt_WarpDevicesPhase3BCActivated;
            trigger gt_WarpDevicesPhase3ABCActivated;
            trigger gt_WarpDevice3ADevice3AWarpOut;
            trigger gt_WarpDevice3BDevice3BWarpOut;
            trigger gt_WarpDevice3CDevice3CWarpOut;
            trigger gt_WarpDevice3AOutbackHunterWarpOut;
            trigger gt_WarpDevice3BRedAdderWarpOut;
            trigger gt_WarpDevice3CShockDivisionWarpOut;
            trigger gt_WarpDevicePhase4Ping;
            trigger gt_WarpDevicePhase4Setup;
            trigger gt_WarpDevice4ADestroyed;
            trigger gt_WarpDevice4BDestroyed;
            trigger gt_WarpDevice4CDestroyed;
            trigger gt_WarpDevice4DDestroyed;
            trigger gt_DestroyTimerWindow4;
            trigger gt_WarpDevice4AActivated;
            trigger gt_WarpDevice4BActivated;
            trigger gt_WarpDevice4CActivated;
            trigger gt_WarpDevice4DActivated;
            trigger gt_WarpDevicesPhase4ABCDActivated;
            trigger gt_WarpDevicesPhase4ABCActivated;
            trigger gt_WarpDevicesPhase4ABDActivated;
            trigger gt_WarpDevicesPhase4ACDActivated;
            trigger gt_WarpDevicesPhase4BCDActivated;
            trigger gt_WarpDevicesPhase4ABActivated;
            trigger gt_WarpDevicesPhase4ACActivated;
            trigger gt_WarpDevicesPhase4ADActivated;
            trigger gt_WarpDevicesPhase4BCActivated;
            trigger gt_WarpDevicesPhase4BDActivated;
            trigger gt_WarpDevicesPhase4CDActivated;
            trigger gt_WarpDevice4ADevice4AWarpOut;
            trigger gt_WarpDevice4BDevice4BWarpOut;
            trigger gt_WarpDevice4CDevice4CWarpOut;
            trigger gt_WarpDevice4DDevice4DWarpOut;
            trigger gt_WarpDevice4AHurricaneRegimentG1WarpOut;
            trigger gt_WarpDevice4BHurricaneRegimentG2WarpOut;
            trigger gt_WarpDevice4CBlackhammerG1WarpOut;
            trigger gt_WarpDevice4DBlackhammerG2WarpOut;
            trigger gt_WarpDevicePhase5Ping;
            trigger gt_WarpDevicePhase5Setup;
            trigger gt_WarpDevice5ADestroyed;
            trigger gt_WarpDevice5BDestroyed;
            trigger gt_WarpDevice5CDestroyed;
            trigger gt_WarpDevice5DDestroyed;
            trigger gt_DestroyTimerWindow5;
            trigger gt_WarpDevice5AActivated;
            trigger gt_WarpDevice5BActivated;
            trigger gt_WarpDevice5CActivated;
            trigger gt_WarpDevice5DActivated;
            trigger gt_WarpDevicesPhase5ABCDActivated;
            trigger gt_WarpDevicesPhase5ABCActivated;
            trigger gt_WarpDevicesPhase5ABDActivated;
            trigger gt_WarpDevicesPhase5ACDActivated;
            trigger gt_WarpDevicesPhase5BCDActivated;
            trigger gt_WarpDevicesPhase5ABActivated;
            trigger gt_WarpDevicesPhase5ACActivated;
            trigger gt_WarpDevicesPhase5ADActivated;
            trigger gt_WarpDevicesPhase5BCActivated;
            trigger gt_WarpDevicesPhase5BDActivated;
            trigger gt_WarpDevicesPhase5CDActivated;
            trigger gt_WarpDevice5ADevice5AWarpOut;
            trigger gt_WarpDevice5BDevice5BWarpOut;
            trigger gt_WarpDevice5CDevice5CWarpOut;
            trigger gt_WarpDevice5DDevice5DWarpOut;
            trigger gt_WarpDevice5APrideofAugustgrad1;
            trigger gt_WarpDevice5BPrideofAugustgrad2;
            trigger gt_WarpDevice5CPrideofAugustgrad3;
            trigger gt_WarpDevice5DPrideofAugustgrad4;
            trigger gt_EnemyAttackingQ;
            trigger gt_Defeat;
            trigger gt_StartAI;
            trigger gt_SetupAttackWaveSpawn;
            trigger gt_AIAttackWaves;
            trigger gt_AttackWave01;
            trigger gt_AttackWave02;
            trigger gt_AttackWave03;
            trigger gt_AttackWave04;
            trigger gt_AttackWave05;
            trigger gt_AttackWave06;
            trigger gt_AttackWave07;
            trigger gt_PrimaryDestroyWarpDevicesCreate;
            trigger gt_PrimaryDestroyWarpDevicesComplete;
            trigger gt_PrimaryWarpDevicesActivatedCreate;
            trigger gt_PrimaryWarpDevicesActivatedMissionFailure;
            trigger gt_BossFightInterlude;
            trigger gt_OdinsEntertheMap;
            trigger gt_OdinsMovetoAttack;
            trigger gt_OdinBossBars;
            trigger gt_DefensiveMatrixOdinAlpha;
            trigger gt_DefensiveMatrixOdinBravo;
            trigger gt_DefensiveMatrixMcKenzieWarning;
            trigger gt_PrimaryDestroyOdinsCreate;
            trigger gt_PrimaryOdinAlphaDestroyed;
            trigger gt_PrimaryOdinBravoDestroyed;
            trigger gt_PrimaryDestroyOdinsComplete;
            trigger gt_SecondaryBonusObjective1Create;
            trigger gt_SecondaryBonusObjective1Complete;
            trigger gt_SecondaryBonusObjective2Create;
            trigger gt_SecondaryBonusObjective2TimerCountdown;
            trigger gt_SecondaryBonusObjective2Complete;
            trigger gt_SecondaryBonusObjective2Failure;
            //--------------------------------------------------------------------------------------------------
            // Custom AI Functions
            //--------------------------------------------------------------------------------------------------
            string[17] cai_playerAI;
            //--------------------------------------------------------------------------------------------------
            void InitCustomAI () {
                int init_i;
                for (init_i = 0; init_i &lt;= 16; init_i += 1) {
                    cai_playerAI[init_i] = null;
                }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_start (string ai, int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                cai_playerAI[p] = ai;
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_start(p); }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_setDefGather (int p, point val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_setDefGather(p, val); }
            }
            //--------------------------------------------------------------------------------------------------
            string cai_getCustomData (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { return aiE127FAE1_getCustomData(p); }
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            wave cai_getLastWave (int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { return aiE127FAE1_getLastWave(p); }
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            void cai_waves_run (int p, playergroup target) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_waves_run(p, target); }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_waves_enable (int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_waves_enable(p, val); }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_waves_stop (string ai) {
                if (ai == &quot;aiE127FAE1&quot;) { aiE127FAE1_waves_stop(); }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_wave_run (int w, int p, playergroup target, bool wait) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_wave_run(w, p, target, wait); }
            }
            //--------------------------------------------------------------------------------------------------
            void cai_wave_enable (int w, int p, bool val) {
                if (p &lt; 0 || p &gt;= 16) {
                    return;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { aiE127FAE1_wave_enable(w, p, val); }
            }
            //--------------------------------------------------------------------------------------------------
            bool cai_wave_isEnabled (int w, int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return false;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { return aiE127FAE1_wave_isEnabled(w, p); }
                return false;
            }
            //--------------------------------------------------------------------------------------------------
            unitgroup cai_wave_createdUnits (int w, int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { return aiE127FAE1_wave_createdUnits(w, p); }
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            wave cai_wave_createdWave (int w, int p) {
                if (p &lt; 0 || p &gt;= 16) {
                    return null;
                }
                if (cai_playerAI[p] == &quot;aiE127FAE1&quot;) { return aiE127FAE1_wave_createdWave(w, p); }
                return null;
            }
            //--------------------------------------------------------------------------------------------------
            void cai_startall () {
                AICampaignStart(3);
                AICampaignStart(4);
            }
            //--------------------------------------------------------------------------------------------------
            void cai_runall () {
                playergroup target = PlayerGroupEmpty();
            }
            //--------------------------------------------------------------------------------------------------
            // Global Functions
            //--------------------------------------------------------------------------------------------------
            trigger auto_gf_RunMissionEvent_Trigger = null;
            trigger auto_gf_RunMissionEvent_lp_missionEventTrigger;
            fixed auto_gf_RunMissionEvent_lp_missionEventTime;
            void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime) {
                auto_gf_RunMissionEvent_lp_missionEventTrigger = lp_missionEventTrigger;
                auto_gf_RunMissionEvent_lp_missionEventTime = lp_missionEventTime;
                if (auto_gf_RunMissionEvent_Trigger == null) {
                    auto_gf_RunMissionEvent_Trigger = TriggerCreate(&quot;auto_gf_RunMissionEvent_TriggerFunc&quot;);
                }
                TriggerExecute(auto_gf_RunMissionEvent_Trigger, false, false);
            }
            bool auto_gf_RunMissionEvent_TriggerFunc (bool testConds, bool runActions) {
                trigger lp_missionEventTrigger = auto_gf_RunMissionEvent_lp_missionEventTrigger;
                fixed lp_missionEventTime = auto_gf_RunMissionEvent_lp_missionEventTime;
                // Implementation
                while (!((GameGetMissionTime() &gt;= lp_missionEventTime))) {
                    Wait(0.5, c_timeAI);
                }
                if ((libCOMI_gf_GameIsOver() == false)) {
                    TriggerExecute(lp_missionEventTrigger, true, false);
                }
                return true;
            }
            point gf_AttackWaveSpawn () {
                int auto8C186D48_ae;
                int auto8C186D48_ai;
                // Variable Declarations
                int lv_mapSide;
                int lv_spawnLocationIter;
                // Variable Initialization
                // Implementation
                lv_mapSide = RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER);
                auto8C186D48_ae = 10;
                auto8C186D48_ai = 1;
                lv_spawnLocationIter = 1;
                for ( ; ( (auto8C186D48_ai &gt;= 0 &amp;&amp; lv_spawnLocationIter &lt;= auto8C186D48_ae) || (auto8C186D48_ai &lt;= 0 &amp;&amp; lv_spawnLocationIter &gt;= auto8C186D48_ae) ) ; lv_spawnLocationIter += auto8C186D48_ai ) {
                    if ((UnitGroupCount(UnitGroupAlliance(gv_pLAYER_01_USER, c_unitAllianceEnemy, gv_attackSpawn[lv_mapSide][lv_spawnLocationIter], UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32))), 0), c_unitCountAlive) &gt; RandomInt(2, 5))) {
                        return RegionGetCenter(gv_attackSpawn[lv_mapSide][lv_spawnLocationIter]);
                    }
                }
                return RegionGetCenter(RegionFromId(12));
            }
            trigger auto_gf_RunAttackWaveatMissionTime_Trigger = null;
            trigger auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
            fixed auto_gf_RunAttackWaveatMissionTime_lp_time;
            void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time) {
                auto_gf_RunAttackWaveatMissionTime_lp_attackWave = lp_attackWave;
                auto_gf_RunAttackWaveatMissionTime_lp_time = lp_time;
                if (auto_gf_RunAttackWaveatMissionTime_Trigger == null) {
                    auto_gf_RunAttackWaveatMissionTime_Trigger = TriggerCreate(&quot;auto_gf_RunAttackWaveatMissionTime_TriggerFunc&quot;);
                }
                TriggerExecute(auto_gf_RunAttackWaveatMissionTime_Trigger, false, false);
            }
            bool auto_gf_RunAttackWaveatMissionTime_TriggerFunc (bool testConds, bool runActions) {
                trigger lp_attackWave = auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
                fixed lp_time = auto_gf_RunAttackWaveatMissionTime_lp_time;
                // Implementation
                while (!((lp_time &lt;= GameGetMissionTime()))) {
                    Wait(0.3, c_timeAI);
                }
                if ((libCOMI_gf_GameIsOver() == false)) {
                    TriggerExecute(lp_attackWave, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 01 Load Data
            //--------------------------------------------------------------------------------------------------
            bool gt_Init01LoadData_Func (bool testConds, bool runActions) {
                libCOMI_gf_LoadCoopMission(&quot;COOP_Placeholder&quot;, gt_Init03LoadingComplete);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init01LoadData_Init () {
                gt_Init01LoadData = TriggerCreate(&quot;gt_Init01LoadData_Func&quot;);
                TriggerAddEventMapInit(gt_Init01LoadData);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 02 Players
            //--------------------------------------------------------------------------------------------------
            bool gt_Init02Players_Func (bool testConds, bool runActions) {
                gv_pLAYER_01_USER = libCOMI_gf_GetRolePlayer(1);
                gv_pLAYER_02_USER = libCOMI_gf_GetRolePlayer(2);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init02Players_Init () {
                gt_Init02Players = TriggerCreate(&quot;gt_Init02Players_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 03 Loading Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_Init03LoadingComplete_Func (bool testConds, bool runActions) {
                TriggerExecute(gt_Init02Players, true, false);
                TriggerExecute(gt_Init04Technology, true, false);
                TriggerExecute(gt_Init05Units, true, false);
                TriggerExecute(gt_Init06MusicSound, true, false);
                TriggerExecute(gt_Init07Environment, true, false);
                TriggerExecute(gt_Init08Difficulties, true, false);
                TriggerExecute(gt_Init09MapSpecifics, true, false);
                TriggerExecute(gt_MessageStart, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice1, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice2A, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice2B, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice3A, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice3B, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice3C, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice4A, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice4B, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice4C, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice4D, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice5A, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice5B, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice5C, true, false);
                TriggerExecute(gt_AbilitiesWarpDevice5D, true, false);
                TriggerExecute(gt_PrimaryDestroyWarpDevicesCreate, true, false);
                TriggerExecute(gt_PrimaryWarpDevicesActivatedCreate, true, false);
                TriggerExecute(gt_StartAI, true, false);
                TriggerExecute(gt_StartGameQ, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init03LoadingComplete_Init () {
                gt_Init03LoadingComplete = TriggerCreate(&quot;gt_Init03LoadingComplete_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 04 Technology
            //--------------------------------------------------------------------------------------------------
            bool gt_Init04Technology_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init04Technology_Init () {
                gt_Init04Technology = TriggerCreate(&quot;gt_Init04Technology_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 05 Units
            //--------------------------------------------------------------------------------------------------
            bool gt_Init05Units_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init05Units_Init () {
                gt_Init05Units = TriggerCreate(&quot;gt_Init05Units_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 06 Music/Sound
            //--------------------------------------------------------------------------------------------------
            bool gt_Init06MusicSound_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init06MusicSound_Init () {
                gt_Init06MusicSound = TriggerCreate(&quot;gt_Init06MusicSound_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 07 Environment
            //--------------------------------------------------------------------------------------------------
            bool gt_Init07Environment_Func (bool testConds, bool runActions) {
                GameTimeOfDaySet(&quot;00&quot;);
                GameSetToDLighting(&quot;Valhalla&quot;);
                FogSetDensity(0.1);
                VisExploreArea(gv_pLAYER_01_USER, RegionFromId(9), true, false);
                VisExploreArea(gv_pLAYER_02_USER, RegionFromId(9), true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init07Environment_Init () {
                gt_Init07Environment = TriggerCreate(&quot;gt_Init07Environment_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 08 Difficulties
            //--------------------------------------------------------------------------------------------------
            bool gt_Init08Difficulties_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init08Difficulties_Init () {
                gt_Init08Difficulties = TriggerCreate(&quot;gt_Init08Difficulties_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 09 Map Specifics
            //--------------------------------------------------------------------------------------------------
            bool gt_Init09MapSpecifics_Func (bool testConds, bool runActions) {
                gv_var_WarpDevices_Remaining = 14;
                gv_var_WarpDevices_Destroyed = 0;
                gv_var_WarpDevices_Activated_MaxCount = 4;
                gv_var_Odins_MaxCount = 2;
                gv_countdown_Warp_Device = 255;
                gv_ping_Duration = 300;
                libNtve_gf_ShowHideUnit(UnitFromId(237470653), false);
                libNtve_gf_ShowHideUnit(UnitFromId(1478913016), false);
                libNtve_gf_ShowHideUnit(UnitFromId(2034423177), false);
                libNtve_gf_ShowHideUnit(UnitFromId(1317705441), false);
                libNtve_gf_ShowHideUnit(UnitFromId(2100560276), false);
                libNtve_gf_ShowHideUnit(UnitFromId(158190500), false);
                TriggerEnable(gt_OdinsMovetoAttack, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(341160576), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(954621714), true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;attack&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;ACPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;SeekerBomb&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;OdinBarrage&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;NovaOdinAnnihilate&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                UnitAbilityEnable(UnitFromId(341160576), &quot;MutatorAmonTychusTossGrenade&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;attack&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;ACPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;SeekerBomb&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;OdinBarrage&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;NovaOdinAnnihilate&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                UnitAbilityEnable(UnitFromId(954621714), &quot;MutatorAmonTychusTossGrenade&quot;, false);
                TechTreeUpgradeAddLevel(3, &quot;HailstormMissilePods&quot;, 1);
                TechTreeUpgradeAddLevel(4, &quot;HailstormMissilePods&quot;, 1);
                TechTreeUpgradeAddLevel(3, &quot;FireSuppressionSystems&quot;, 1);
                TechTreeUpgradeAddLevel(4, &quot;FireSuppressionSystems&quot;, 1);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(403307680), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1855542024), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(587186640), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(104750364), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1606811285), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1858341235), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2097025030), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(858083693), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1399340470), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(973204725), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1726057299), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(133090505), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(259458214), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1992998589), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(927429514), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1718411304), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2034365462), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1275713661), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2057077348), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1168478675), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(813247277), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1529615179), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1106900905), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1547170578), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1277808545), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1115858509), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2026857137), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1413565778), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1705259572), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(319719901), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init09MapSpecifics_Init () {
                gt_Init09MapSpecifics = TriggerCreate(&quot;gt_Init09MapSpecifics_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Start Game Q
            //--------------------------------------------------------------------------------------------------
            bool gt_StartGameQ_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_StartGameQ_Init () {
                gt_StartGameQ = TriggerCreate(&quot;gt_StartGameQ_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Message - Start
            //--------------------------------------------------------------------------------------------------
            bool gt_MessageStart_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerQueueEnter();
                Wait(15.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 22.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/1B4A5914&quot;));
                Wait(15.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C22E11C3&quot;));
                TriggerQueueExit();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MessageStart_Init () {
                gt_MessageStart = TriggerCreate(&quot;gt_MessageStart_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Message - Moebius Unit Warning
            //--------------------------------------------------------------------------------------------------
            bool gt_MessageMoebiusUnitWarning_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5FEC4B99&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MessageMoebiusUnitWarning_Init () {
                gt_MessageMoebiusUnitWarning = TriggerCreate(&quot;gt_MessageMoebiusUnitWarning_Func&quot;);
                TriggerAddEventTimeElapsed(gt_MessageMoebiusUnitWarning, 180.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Message - Half Way
            //--------------------------------------------------------------------------------------------------
            bool gt_MessageHalfWay_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_var_WarpDevices_Remaining == 8))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                if ((gv_var_WarpDevices_Destroyed == 6)) {
                    Wait(35.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/02515619&quot;));
                }
                else {
                    if ((gv_var_WarpDevices_Destroyed == 5)) {
                        Wait(35.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/AF56A798&quot;));
                    }
                    else {
                        if ((gv_var_WarpDevices_Destroyed == 4)) {
                            Wait(35.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/97227070&quot;));
                        }
                        else {
                            if ((gv_var_WarpDevices_Destroyed == 3)) {
                                Wait(35.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/87A7D6EC&quot;));
                            }
                        }
                    }
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MessageHalfWay_Init () {
                gt_MessageHalfWay = TriggerCreate(&quot;gt_MessageHalfWay_Func&quot;);
                TriggerAddEventTimePeriodic(gt_MessageHalfWay, 5.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Predator
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterPredator_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;PredatorMkII&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/50AE05F5&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterPredator_Init () {
                gt_EncounterPredator = TriggerCreate(&quot;gt_EncounterPredator_Func&quot;);
                TriggerAddEventUnitAcquiredTarget(gt_EncounterPredator, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Warp Device 2A
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterWarpDevice2A_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(4.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/37F3BCCF&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterWarpDevice2A_Init () {
                gt_EncounterWarpDevice2A = TriggerCreate(&quot;gt_EncounterWarpDevice2A_Func&quot;);
                TriggerAddEventUnitAbility(gt_EncounterWarpDevice2A, UnitRefFromUnit(UnitFromId(587186640)), AbilityCommand(&quot;DefensiveMatrixTerranzineHarvester&quot;, 0), c_unitAbilStageAll, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Termination Bot A
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterTerminationBotA_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;TerminationBotA&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_EncounterTerminationBotB, false);
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/989ABEBB&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterTerminationBotA_Init () {
                gt_EncounterTerminationBotA = TriggerCreate(&quot;gt_EncounterTerminationBotA_Func&quot;);
                TriggerAddEventUnitAcquiredTarget(gt_EncounterTerminationBotA, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Termination Bot B
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterTerminationBotB_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;TerminationBotB&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_EncounterTerminationBotA, false);
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F907D3F4&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterTerminationBotB_Init () {
                gt_EncounterTerminationBotB = TriggerCreate(&quot;gt_EncounterTerminationBotB_Func&quot;);
                TriggerAddEventUnitAcquiredTarget(gt_EncounterTerminationBotB, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Laser Drill Tank
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterLaserDrillTank_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;LaserDrillTank&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/3FF441CC&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterLaserDrillTank_Init () {
                gt_EncounterLaserDrillTank = TriggerCreate(&quot;gt_EncounterLaserDrillTank_Func&quot;);
                TriggerAddEventUnitAcquiredTarget(gt_EncounterLaserDrillTank, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Sky Marshal
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterSkyMarshal_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;SkyMarshal&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E7502E7C&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterSkyMarshal_Init () {
                gt_EncounterSkyMarshal = TriggerCreate(&quot;gt_EncounterSkyMarshal_Func&quot;);
                TriggerAddEventUnitAbility(gt_EncounterSkyMarshal, null, AbilityCommand(&quot;EMP&quot;, 0), c_unitAbilStageAll, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Encounter - Archangel
            //--------------------------------------------------------------------------------------------------
            bool gt_EncounterArchangel_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;Archangel&quot;))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D5F4601D&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EncounterArchangel_Init () {
                gt_EncounterArchangel = TriggerCreate(&quot;gt_EncounterArchangel_Func&quot;);
                TriggerAddEventUnitAcquiredTarget(gt_EncounterArchangel, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Predator Upgrades
            //--------------------------------------------------------------------------------------------------
            bool gt_PredatorUpgrades_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_var_WarpDevices_Remaining == 11))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TechTreeUpgradeAddLevel(3, &quot;Charge&quot;, 1);
                TechTreeUpgradeAddLevel(4, &quot;Charge&quot;, 1);
                TechTreeUpgradeAddLevel(3, &quot;ZealotResearchShadowStun&quot;, 1);
                TechTreeUpgradeAddLevel(4, &quot;ZealotResearchShadowStun&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PredatorUpgrades_Init () {
                gt_PredatorUpgrades = TriggerCreate(&quot;gt_PredatorUpgrades_Func&quot;);
                TriggerAddEventTimePeriodic(gt_PredatorUpgrades, 5.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Sky Marshal 1
            //--------------------------------------------------------------------------------------------------
            bool gt_SkyMarshal1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1996239375), OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(502659468)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SkyMarshal1_Init () {
                gt_SkyMarshal1 = TriggerCreate(&quot;gt_SkyMarshal1_Func&quot;);
                TriggerAddEventUnitRangePoint(gt_SkyMarshal1, UnitRefFromUnit(UnitFromId(1996239375)), PointFromId(502659468), 25.0, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Sky Marshal 2
            //--------------------------------------------------------------------------------------------------
            bool gt_SkyMarshal2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1093936927), OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(226066303)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SkyMarshal2_Init () {
                gt_SkyMarshal2 = TriggerCreate(&quot;gt_SkyMarshal2_Func&quot;);
                TriggerAddEventUnitRangePoint(gt_SkyMarshal2, UnitRefFromUnit(UnitFromId(1093936927)), PointFromId(226066303), 25.0, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Sky Marshal 3
            //--------------------------------------------------------------------------------------------------
            bool gt_SkyMarshal3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(747999266), OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(626768344)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SkyMarshal3_Init () {
                gt_SkyMarshal3 = TriggerCreate(&quot;gt_SkyMarshal3_Func&quot;);
                TriggerAddEventUnitRangePoint(gt_SkyMarshal3, UnitRefFromUnit(UnitFromId(747999266)), PointFromId(626768344), 25.0, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Sky Marshal 4
            //--------------------------------------------------------------------------------------------------
            bool gt_SkyMarshal4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1634030613), OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1568705320)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SkyMarshal4_Init () {
                gt_SkyMarshal4 = TriggerCreate(&quot;gt_SkyMarshal4_Func&quot;);
                TriggerAddEventUnitRangePoint(gt_SkyMarshal4, UnitRefFromUnit(UnitFromId(1634030613)), PointFromId(1568705320), 25.0, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp In - McKenzie Message
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarpInMcKenzieMessage_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 9.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/51E896E6&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarpInMcKenzieMessage_Init () {
                gt_UnitWarpInMcKenzieMessage = TriggerCreate(&quot;gt_UnitWarpInMcKenzieMessage_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3A - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3AP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3AP2, false);
                UnitBehaviorAdd(UnitFromId(440079059), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(440079059), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(24277429), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(24277429), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1257455224), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1257455224), 1);
                TriggerExecute(gt_UnitWarpInMcKenzieMessage, true, false);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(440079059), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(24277429), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1257455224), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3AP1_Init () {
                gt_UnitWarp3AP1 = TriggerCreate(&quot;gt_UnitWarp3AP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3AP1, null, RegionFromId(1), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3A - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3AP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3AP1, false);
                UnitBehaviorAdd(UnitFromId(440079059), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(440079059), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(24277429), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(24277429), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1257455224), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1257455224), 1);
                TriggerExecute(gt_UnitWarpInMcKenzieMessage, true, false);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(440079059), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(24277429), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1257455224), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3AP2_Init () {
                gt_UnitWarp3AP2 = TriggerCreate(&quot;gt_UnitWarp3AP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3AP2, null, RegionFromId(1), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3B - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3BP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3BP2, false);
                UnitBehaviorAdd(UnitFromId(684906231), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(684906231), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(341137166), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(341137166), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1653142704), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1653142704), 1);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(684906231), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(341137166), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1653142704), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3BP1_Init () {
                gt_UnitWarp3BP1 = TriggerCreate(&quot;gt_UnitWarp3BP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3BP1, null, RegionFromId(2), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3B - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3BP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3BP1, false);
                UnitBehaviorAdd(UnitFromId(684906231), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(684906231), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(341137166), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(341137166), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1653142704), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1653142704), 1);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(684906231), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(341137166), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1653142704), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3BP2_Init () {
                gt_UnitWarp3BP2 = TriggerCreate(&quot;gt_UnitWarp3BP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3BP2, null, RegionFromId(2), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3C - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3CP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3CP2, false);
                UnitBehaviorAdd(UnitFromId(1497700822), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1497700822), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(4169307), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(4169307), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(202364863), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(202364863), 1);
                TriggerExecute(gt_UnitWarpInMcKenzieMessage, true, false);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1497700822), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(4169307), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(202364863), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3CP1_Init () {
                gt_UnitWarp3CP1 = TriggerCreate(&quot;gt_UnitWarp3CP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3CP1, null, RegionFromId(3), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 3C - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp3CP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp3CP1, false);
                UnitBehaviorAdd(UnitFromId(1497700822), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1497700822), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(4169307), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(4169307), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(202364863), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(202364863), 1);
                TriggerExecute(gt_UnitWarpInMcKenzieMessage, true, false);
                Wait(4.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1497700822), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(4169307), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(202364863), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp3CP2_Init () {
                gt_UnitWarp3CP2 = TriggerCreate(&quot;gt_UnitWarp3CP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp3CP2, null, RegionFromId(3), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4AB - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4ABP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4ABP2, false);
                UnitBehaviorAdd(UnitFromId(1347473060), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1347473060), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1509374101), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1509374101), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1014675706), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1014675706), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(948696247), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(948696247), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1330394034), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1330394034), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1347473060), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1509374101), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1014675706), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(948696247), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1330394034), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4ABP1_Init () {
                gt_UnitWarp4ABP1 = TriggerCreate(&quot;gt_UnitWarp4ABP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4ABP1, null, RegionFromId(5), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4AB - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4ABP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4ABP1, false);
                UnitBehaviorAdd(UnitFromId(1347473060), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1347473060), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1509374101), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1509374101), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1014675706), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1014675706), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(948696247), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(948696247), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1330394034), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1330394034), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1347473060), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1509374101), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1014675706), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(948696247), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1330394034), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4ABP2_Init () {
                gt_UnitWarp4ABP2 = TriggerCreate(&quot;gt_UnitWarp4ABP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4ABP2, null, RegionFromId(5), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4C - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4CP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4CP2, false);
                UnitBehaviorAdd(UnitFromId(479843734), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(479843734), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1805950999), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1805950999), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1415977711), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1415977711), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1745073994), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1745073994), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(248799323), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(248799323), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(479843734), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1805950999), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1415977711), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1745073994), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(248799323), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4CP1_Init () {
                gt_UnitWarp4CP1 = TriggerCreate(&quot;gt_UnitWarp4CP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4CP1, null, RegionFromId(6), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4C - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4CP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4CP1, false);
                UnitBehaviorAdd(UnitFromId(479843734), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(479843734), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1805950999), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1805950999), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1415977711), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1415977711), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1745073994), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1745073994), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(248799323), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(248799323), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(479843734), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1805950999), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1415977711), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1745073994), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(248799323), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4CP2_Init () {
                gt_UnitWarp4CP2 = TriggerCreate(&quot;gt_UnitWarp4CP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4CP2, null, RegionFromId(6), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4D - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4DP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4DP2, false);
                UnitBehaviorAdd(UnitFromId(1924763607), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1924763607), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1218607787), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1218607787), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(797904485), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(797904485), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(241432077), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(241432077), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(973001086), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(973001086), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1924763607), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1218607787), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(797904485), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(241432077), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(973001086), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4DP1_Init () {
                gt_UnitWarp4DP1 = TriggerCreate(&quot;gt_UnitWarp4DP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4DP1, null, RegionFromId(29), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 4D - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp4DP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp4DP1, false);
                UnitBehaviorAdd(UnitFromId(1924763607), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1924763607), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1218607787), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1218607787), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(797904485), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(797904485), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(241432077), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(241432077), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(973001086), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(973001086), 1);
                Wait(3.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1924763607), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1218607787), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(797904485), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(241432077), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(973001086), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp4DP2_Init () {
                gt_UnitWarp4DP2 = TriggerCreate(&quot;gt_UnitWarp4DP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp4DP2, null, RegionFromId(29), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 5AB - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp5ABP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp5ABP2, false);
                UnitBehaviorAdd(UnitFromId(1866287987), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1866287987), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1557477988), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1557477988), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(747999266), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(747999266), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(207552677), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(207552677), 1);
                Wait(3.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1866287987), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1557477988), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(747999266), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(207552677), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp5ABP1_Init () {
                gt_UnitWarp5ABP1 = TriggerCreate(&quot;gt_UnitWarp5ABP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp5ABP1, null, RegionFromId(30), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 5AB - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp5ABP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp5ABP1, false);
                UnitBehaviorAdd(UnitFromId(1866287987), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1866287987), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1557477988), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1557477988), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(747999266), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(747999266), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(207552677), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(207552677), 1);
                Wait(3.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1866287987), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1557477988), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(747999266), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(207552677), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp5ABP2_Init () {
                gt_UnitWarp5ABP2 = TriggerCreate(&quot;gt_UnitWarp5ABP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp5ABP2, null, RegionFromId(30), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 5CD - P1
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp5CDP1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp5CDP2, false);
                UnitBehaviorAdd(UnitFromId(423026101), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(423026101), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1955935199), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1955935199), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1634030613), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1634030613), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1126972430), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1126972430), 1);
                Wait(3.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(423026101), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1955935199), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1634030613), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1126972430), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp5CDP1_Init () {
                gt_UnitWarp5CDP1 = TriggerCreate(&quot;gt_UnitWarp5CDP1_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp5CDP1, null, RegionFromId(31), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Unit Warp 5CD - P2
            //--------------------------------------------------------------------------------------------------
            bool gt_UnitWarp5CDP2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_USER))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerEnable(gt_UnitWarp5CDP1, false);
                UnitBehaviorAdd(UnitFromId(423026101), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(423026101), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1955935199), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1955935199), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1634030613), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1634030613), 1);
                Wait(0.5, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1126972430), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1126972430), 1);
                Wait(3.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(423026101), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1955935199), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1634030613), true);
                Wait(0.5, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1126972430), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UnitWarp5CDP2_Init () {
                gt_UnitWarp5CDP2 = TriggerCreate(&quot;gt_UnitWarp5CDP2_Func&quot;);
                TriggerAddEventUnitRegion(gt_UnitWarp5CDP2, null, RegionFromId(31), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 1
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1855542024), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(403307680), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice1_Init () {
                gt_AbilitiesWarpDevice1 = TriggerCreate(&quot;gt_AbilitiesWarpDevice1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 2A
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice2A_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(104750364), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(587186640), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice2A_Init () {
                gt_AbilitiesWarpDevice2A = TriggerCreate(&quot;gt_AbilitiesWarpDevice2A_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 2B
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice2B_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1858341235), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(1606811285), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice2B_Init () {
                gt_AbilitiesWarpDevice2B = TriggerCreate(&quot;gt_AbilitiesWarpDevice2B_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 3A
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice3A_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(858083693), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(2097025030), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice3A_Init () {
                gt_AbilitiesWarpDevice3A = TriggerCreate(&quot;gt_AbilitiesWarpDevice3A_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 3B
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice3B_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(973204725), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(1399340470), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice3B_Init () {
                gt_AbilitiesWarpDevice3B = TriggerCreate(&quot;gt_AbilitiesWarpDevice3B_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 3C
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice3C_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(133090505), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(1726057299), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice3C_Init () {
                gt_AbilitiesWarpDevice3C = TriggerCreate(&quot;gt_AbilitiesWarpDevice3C_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4A
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4A_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1992998589), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(259458214), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4A_Init () {
                gt_AbilitiesWarpDevice4A = TriggerCreate(&quot;gt_AbilitiesWarpDevice4A_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4B
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4B_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1718411304), &quot;SJPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(927429514), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4B_Init () {
                gt_AbilitiesWarpDevice4B = TriggerCreate(&quot;gt_AbilitiesWarpDevice4B_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4B - Lighting Storm
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4BLightingStorm_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(927429514)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1718411304), Order(AbilityCommand(&quot;SJPirateLightningStorm&quot;, 0)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4BLightingStorm_Init () {
                gt_AbilitiesWarpDevice4BLightingStorm = TriggerCreate(&quot;gt_AbilitiesWarpDevice4BLightingStorm_Func&quot;);
                TriggerAddEventUnitAttacked2(gt_AbilitiesWarpDevice4BLightingStorm, UnitRefFromUnit(UnitFromId(927429514)), null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4C
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4C_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1275713661), &quot;SJPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(2034365462), &quot;DefensiveMatrixTerranzineHarvester&quot;, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4C_Init () {
                gt_AbilitiesWarpDevice4C = TriggerCreate(&quot;gt_AbilitiesWarpDevice4C_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4C - Lighting Storm
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4CLightingStorm_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(2034365462)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1275713661), Order(AbilityCommand(&quot;SJPirateLightningStorm&quot;, 0)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4CLightingStorm_Init () {
                gt_AbilitiesWarpDevice4CLightingStorm = TriggerCreate(&quot;gt_AbilitiesWarpDevice4CLightingStorm_Func&quot;);
                TriggerAddEventUnitAttacked2(gt_AbilitiesWarpDevice4CLightingStorm, UnitRefFromUnit(UnitFromId(2034365462)), null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 4D
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice4D_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1168478675), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(2057077348), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice4D_Init () {
                gt_AbilitiesWarpDevice4D = TriggerCreate(&quot;gt_AbilitiesWarpDevice4D_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5A
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5A_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1529615179), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(813247277), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5A_Init () {
                gt_AbilitiesWarpDevice5A = TriggerCreate(&quot;gt_AbilitiesWarpDevice5A_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5B
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5B_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1547170578), &quot;SJPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(1106900905), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5B_Init () {
                gt_AbilitiesWarpDevice5B = TriggerCreate(&quot;gt_AbilitiesWarpDevice5B_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5B - Lighting Storm
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5BLightingStorm_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(1106900905)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1547170578), Order(AbilityCommand(&quot;SJPirateLightningStorm&quot;, 0)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5BLightingStorm_Init () {
                gt_AbilitiesWarpDevice5BLightingStorm = TriggerCreate(&quot;gt_AbilitiesWarpDevice5BLightingStorm_Func&quot;);
                TriggerAddEventUnitAttacked2(gt_AbilitiesWarpDevice5BLightingStorm, UnitRefFromUnit(UnitFromId(1106900905)), null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5C
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5C_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1115858509), &quot;SJPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(1277808545), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5C_Init () {
                gt_AbilitiesWarpDevice5C = TriggerCreate(&quot;gt_AbilitiesWarpDevice5C_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5C - Lighting Storm
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5CLightingStorm_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(1277808545)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(1115858509), Order(AbilityCommand(&quot;SJPirateLightningStorm&quot;, 0)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5CLightingStorm_Init () {
                gt_AbilitiesWarpDevice5CLightingStorm = TriggerCreate(&quot;gt_AbilitiesWarpDevice5CLightingStorm_Func&quot;);
                TriggerAddEventUnitAttacked2(gt_AbilitiesWarpDevice5CLightingStorm, UnitRefFromUnit(UnitFromId(1277808545)), null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Abilities - Warp Device 5D
            //--------------------------------------------------------------------------------------------------
            bool gt_AbilitiesWarpDevice5D_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitAbilityEnable(UnitFromId(1413565778), &quot;SJPirateLightningStorm&quot;, false);
                UnitAbilityEnable(UnitFromId(2026857137), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AbilitiesWarpDevice5D_Init () {
                gt_AbilitiesWarpDevice5D = TriggerCreate(&quot;gt_AbilitiesWarpDevice5D_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: UI Minimap Alert
            //--------------------------------------------------------------------------------------------------
            bool gt_UIMinimapAlert_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                Wait(2.83, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                Wait(2.83, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_UIMinimapAlert_Init () {
                gt_UIMinimapAlert = TriggerCreate(&quot;gt_UIMinimapAlert_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 1 - Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase1Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_MiniMapPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(171901604), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(403307680), 1, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/6571B510&quot;));
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 11.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4621AB42&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase1Ping_Init () {
                gt_WarpDevicePhase1Ping = TriggerCreate(&quot;gt_WarpDevicePhase1Ping_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase1Ping, 90.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 1 - Setup
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase1Setup_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerExecute(gt_UIMinimapAlert, true, false);
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(403307680), 1));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(171901604), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(403307680), 1, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/6EDDB3EF&quot;));
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(403307680), false);
                TimerStart(gv_timer_WarpDevice_1, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(403307680), &quot;ProgressBar&quot;, UnitFromId(403307680), 1);
                UnitBehaviorSetDuration(UnitFromId(403307680), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(403307680), true);
                TimerWindowCreate(gv_timer_Window_Countdown, StringExternal(&quot;Param/Value/9ABA6898&quot;), true, false);
                libCOMI_gf_RepositionTimerWindow(TimerWindowLastCreated());
                TimerWindowSetFormat(TimerWindowLastCreated(), StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;));
                TimerWindowSetStyle(TimerWindowLastCreated(), c_timerWindowStyleVerticalTitleTime, false);
                TimerWindowSetFixedHeight(TimerWindowLastCreated(), 90);
                TimerStart(gv_timer_Window_Countdown, gv_countdown_Warp_Device, false, c_timeGame);
                gv_timer_Window_1 = TimerWindowLastCreated();
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5ADB8131&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase1Setup_Init () {
                gt_WarpDevicePhase1Setup = TriggerCreate(&quot;gt_WarpDevicePhase1Setup_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase1Setup, 300.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 1 - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice1Destroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitBehaviorRemove(UnitFromId(403307680), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/F13FA8C4&quot;) + TextWithColor(StringExternal(&quot;Param/Value/22A508A6&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/05AC037C&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A5D52D74&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(403307680), 1));
                TimerPause(gv_timer_WarpDevice_1, true);
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/6217B798&quot;));
                TriggerExecute(gt_DestroyTimerWindow1, true, false);
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1855542024));
                if ((GameGetMissionTime() &lt; 545.0)) {
                    Wait(15.0, c_timeGame);
                    TriggerExecute(gt_WarpDevicePhase2Ping, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice1Destroyed_Init () {
                gt_WarpDevice1Destroyed = TriggerCreate(&quot;gt_WarpDevice1Destroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice1Destroyed, UnitRefFromUnit(UnitFromId(403307680)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 1 - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice1Activated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(403307680), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/DCC0AD66&quot;) + TextWithColor(StringExternal(&quot;Param/Value/79548206&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/3445C877&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/BE68C0CB&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/47D0F5FD&quot;) + TextWithColor(StringExternal(&quot;Param/Value/DEA48F3D&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/4536D3D0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/2CD12331&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(403307680), 1));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice1BulwarkCompanyWarpOut, true, false);
                TriggerExecute(gt_WarpDevice1PhalanxSquadronWarpOut, true, false);
                TriggerExecute(gt_WarpDevice1Device1WarpOut, true, false);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/26939DF1&quot;));
                TriggerExecute(gt_DestroyTimerWindow1, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice1Activated_Init () {
                gt_WarpDevice1Activated = TriggerCreate(&quot;gt_WarpDevice1Activated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice1Activated, gv_timer_WarpDevice_1);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Timer Window 1
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyTimerWindow1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                TimerWindowDestroy(gv_timer_Window_1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyTimerWindow1_Init () {
                gt_DestroyTimerWindow1 = TriggerCreate(&quot;gt_DestroyTimerWindow1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 1 - Device 1 Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice1Device1WarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(15), 7.0, true);
                VisRevealArea(2, RegionFromId(15), 7.0, true);
                UnitBehaviorAdd(UnitFromId(403307680), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(403307680), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(403307680), false);
                UnitRemove(UnitFromId(1855542024));
                UnitBehaviorRemove(UnitFromId(403307680), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice1Device1WarpOut_Init () {
                gt_WarpDevice1Device1WarpOut = TriggerCreate(&quot;gt_WarpDevice1Device1WarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 1 - Bulwark Company Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice1BulwarkCompanyWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(224595078), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1396559946), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1396559946), 1);
                UnitBehaviorAdd(UnitFromId(5115357), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(5115357), 1);
                UnitBehaviorAdd(UnitFromId(1279860404), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1279860404), 1);
                UnitBehaviorAdd(UnitFromId(1272873528), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1272873528), 1);
                UnitBehaviorAdd(UnitFromId(1307690045), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1307690045), 1);
                UnitBehaviorAdd(UnitFromId(865433033), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(865433033), 1);
                UnitBehaviorAdd(UnitFromId(453453885), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(453453885), 1);
                UnitBehaviorAdd(UnitFromId(577810521), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(577810521), 1);
                UnitBehaviorAdd(UnitFromId(1440505675), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1440505675), 1);
                UnitBehaviorAdd(UnitFromId(1177160612), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1177160612), 1);
                UnitBehaviorAdd(UnitFromId(1662490337), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1662490337), 1);
                UnitBehaviorAdd(UnitFromId(1188030951), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1188030951), 1);
                UnitBehaviorAdd(UnitFromId(477823429), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(477823429), 1);
                UnitBehaviorAdd(UnitFromId(2072528325), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2072528325), 1);
                UnitBehaviorAdd(UnitFromId(836626702), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(836626702), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(224595078), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1396559946));
                UnitRemove(UnitFromId(5115357));
                UnitRemove(UnitFromId(1279860404));
                UnitRemove(UnitFromId(1272873528));
                UnitRemove(UnitFromId(1307690045));
                UnitRemove(UnitFromId(865433033));
                UnitRemove(UnitFromId(453453885));
                UnitRemove(UnitFromId(577810521));
                UnitRemove(UnitFromId(1440505675));
                UnitRemove(UnitFromId(1177160612));
                UnitRemove(UnitFromId(1662490337));
                UnitRemove(UnitFromId(1188030951));
                UnitRemove(UnitFromId(477823429));
                UnitRemove(UnitFromId(2072528325));
                UnitRemove(UnitFromId(836626702));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice1BulwarkCompanyWarpOut_Init () {
                gt_WarpDevice1BulwarkCompanyWarpOut = TriggerCreate(&quot;gt_WarpDevice1BulwarkCompanyWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 1 - Phalanx Squadron Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice1PhalanxSquadronWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(891819270), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(810643622), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(810643622), 1);
                UnitBehaviorAdd(UnitFromId(487531869), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(487531869), 1);
                UnitBehaviorAdd(UnitFromId(334320478), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(334320478), 1);
                UnitBehaviorAdd(UnitFromId(1073173624), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1073173624), 1);
                UnitBehaviorAdd(UnitFromId(1876091719), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1876091719), 1);
                UnitBehaviorAdd(UnitFromId(2073217388), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2073217388), 1);
                UnitBehaviorAdd(UnitFromId(1683590831), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1683590831), 1);
                UnitBehaviorAdd(UnitFromId(1149735162), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1149735162), 1);
                UnitBehaviorAdd(UnitFromId(139550711), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(139550711), 1);
                UnitBehaviorAdd(UnitFromId(1598096026), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1598096026), 1);
                UnitBehaviorAdd(UnitFromId(1548093155), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1548093155), 1);
                UnitBehaviorAdd(UnitFromId(1015274103), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1015274103), 1);
                UnitBehaviorAdd(UnitFromId(1062609324), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1015274103), 1);
                UnitBehaviorAdd(UnitFromId(1196484844), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1196484844), 1);
                UnitBehaviorAdd(UnitFromId(1503942872), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1503942872), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(891819270), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(810643622));
                UnitRemove(UnitFromId(487531869));
                UnitRemove(UnitFromId(334320478));
                UnitRemove(UnitFromId(1073173624));
                UnitRemove(UnitFromId(1876091719));
                UnitRemove(UnitFromId(2073217388));
                UnitRemove(UnitFromId(1683590831));
                UnitRemove(UnitFromId(1149735162));
                UnitRemove(UnitFromId(139550711));
                UnitRemove(UnitFromId(1598096026));
                UnitRemove(UnitFromId(1548093155));
                UnitRemove(UnitFromId(1015274103));
                UnitRemove(UnitFromId(1062609324));
                UnitRemove(UnitFromId(1196484844));
                UnitRemove(UnitFromId(1503942872));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice1PhalanxSquadronWarpOut_Init () {
                gt_WarpDevice1PhalanxSquadronWarpOut = TriggerCreate(&quot;gt_WarpDevice1PhalanxSquadronWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 2 - Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase2Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_MiniMapPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(834789013), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(587186640), 2, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/4CD8D7D0&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(733671905), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1606811285), 3, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/0292F395&quot;));
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/CB516856&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase2Ping_Init () {
                gt_WarpDevicePhase2Ping = TriggerCreate(&quot;gt_WarpDevicePhase2Ping_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 2 - Setup
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase2Setup_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerExecute(gt_UIMinimapAlert, true, false);
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(587186640), 2));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(834789013), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(587186640), 2, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/7E456232&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1606811285), 3));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(733671905), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1606811285), 3, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/DE3528A6&quot;));
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(587186640), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1606811285), false);
                TimerStart(gv_timer_WarpDevice_2A, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(587186640), &quot;ProgressBar&quot;, UnitFromId(587186640), 1);
                UnitBehaviorSetDuration(UnitFromId(587186640), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(587186640), true);
                TimerStart(gv_timer_WarpDevice_2B, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1606811285), &quot;ProgressBar&quot;, UnitFromId(1606811285), 1);
                UnitBehaviorSetDuration(UnitFromId(1606811285), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(1606811285), true);
                TimerStart(gv_timer_WarpDevices_Phase2_AB, gv_countdown_Warp_Device, false, c_timeGame);
                TimerWindowCreate(gv_timer_Window_Countdown, StringExternal(&quot;Param/Value/339F32E1&quot;), true, false);
                libCOMI_gf_RepositionTimerWindow(TimerWindowLastCreated());
                TimerWindowSetFormat(TimerWindowLastCreated(), StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;));
                TimerWindowSetStyle(TimerWindowLastCreated(), c_timerWindowStyleVerticalTitleTime, false);
                TimerWindowSetFixedHeight(TimerWindowLastCreated(), 90);
                TimerStart(gv_timer_Window_Countdown, gv_countdown_Warp_Device, false, c_timeGame);
                gv_timer_Window_2 = TimerWindowLastCreated();
                Wait(4.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E7145521&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase2Setup_Init () {
                gt_WarpDevicePhase2Setup = TriggerCreate(&quot;gt_WarpDevicePhase2Setup_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase2Setup, 585.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2A - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2ADestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitBehaviorRemove(UnitFromId(587186640), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/01A843C7&quot;) + TextWithColor(StringExternal(&quot;Param/Value/DBF8AFA7&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/19DB75DB&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/88B82E59&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(587186640), 2));
                TimerPause(gv_timer_WarpDevice_2A, true);
                TimerPause(gv_timer_WarpDevices_Phase2_AB, true);
                if ((UnitIsAlive(UnitFromId(587186640)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1606811285)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(1606811285)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/CB32F015&quot;));
                }
                else {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/438CA995&quot;));
                    TriggerExecute(gt_DestroyTimerWindow2, true, false);
                    if ((GameGetMissionTime() &lt; 830.0)) {
                        Wait(15.0, c_timeGame);
                        TriggerExecute(gt_WarpDevicePhase3Ping, true, false);
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(104750364));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2ADestroyed_Init () {
                gt_WarpDevice2ADestroyed = TriggerCreate(&quot;gt_WarpDevice2ADestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice2ADestroyed, UnitRefFromUnit(UnitFromId(587186640)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2B - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2BDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitBehaviorRemove(UnitFromId(1606811285), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/06F4B29B&quot;) + TextWithColor(StringExternal(&quot;Param/Value/0B5E0183&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/0EF5F4D0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/EA1E3E2B&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1606811285), 3));
                TimerPause(gv_timer_WarpDevice_2B, true);
                TimerPause(gv_timer_WarpDevices_Phase2_AB, true);
                if ((UnitIsAlive(UnitFromId(587186640)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1606811285)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(587186640)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C2684ECF&quot;));
                }
                else {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F06DEEA4&quot;));
                    TriggerExecute(gt_DestroyTimerWindow2, true, false);
                    if ((GameGetMissionTime() &lt; 830.0)) {
                        Wait(15.0, c_timeGame);
                        TriggerExecute(gt_WarpDevicePhase3Ping, true, false);
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1858341235));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2BDestroyed_Init () {
                gt_WarpDevice2BDestroyed = TriggerCreate(&quot;gt_WarpDevice2BDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice2BDestroyed, UnitRefFromUnit(UnitFromId(1606811285)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Timer Window 2
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyTimerWindow2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                TimerWindowDestroy(gv_timer_Window_2);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyTimerWindow2_Init () {
                gt_DestroyTimerWindow2 = TriggerCreate(&quot;gt_DestroyTimerWindow2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2A - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2AActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(587186640), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/4CC6873A&quot;) + TextWithColor(StringExternal(&quot;Param/Value/FBEA6F66&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/72F98B00&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/1E42412C&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/ED5FC2AD&quot;) + TextWithColor(StringExternal(&quot;Param/Value/80581678&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/B09056AF&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9DF27339&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(587186640), 2));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice2ASkyFuryWarpOut, true, false);
                TriggerExecute(gt_WarpDevice2ADevice2AWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(1606811285)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/949A64ED&quot;));
                    TriggerExecute(gt_DestroyTimerWindow2, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2AActivated_Init () {
                gt_WarpDevice2AActivated = TriggerCreate(&quot;gt_WarpDevice2AActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice2AActivated, gv_timer_WarpDevice_2A);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2B - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2BActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1606811285), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/F08F17C4&quot;) + TextWithColor(StringExternal(&quot;Param/Value/7542902F&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/7F2351FC&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/86E361B9&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/BACD7C58&quot;) + TextWithColor(StringExternal(&quot;Param/Value/94136C0B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/34D03E5D&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/DF9BB72F&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1606811285), 3));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice2BNightWolfWarpOut, true, false);
                TriggerExecute(gt_WarpDevice2BWingedNightmareWarpOut, true, false);
                TriggerExecute(gt_WarpDevice2BDevice2BWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(587186640)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/DA871C86&quot;));
                    TriggerExecute(gt_DestroyTimerWindow2, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2BActivated_Init () {
                gt_WarpDevice2BActivated = TriggerCreate(&quot;gt_WarpDevice2BActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice2BActivated, gv_timer_WarpDevice_2B);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 2 - AB - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase2ABActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B03EFBB6&quot;));
                TriggerExecute(gt_DestroyTimerWindow2, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase2ABActivated_Init () {
                gt_WarpDevicesPhase2ABActivated = TriggerCreate(&quot;gt_WarpDevicesPhase2ABActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase2ABActivated, gv_timer_WarpDevices_Phase2_AB);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2A - Device 2A Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2ADevice2AWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(16), 7.0, true);
                VisRevealArea(2, RegionFromId(16), 7.0, true);
                UnitBehaviorAdd(UnitFromId(587186640), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(587186640), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(587186640), false);
                UnitRemove(UnitFromId(104750364));
                UnitBehaviorRemove(UnitFromId(587186640), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2ADevice2AWarpOut_Init () {
                gt_WarpDevice2ADevice2AWarpOut = TriggerCreate(&quot;gt_WarpDevice2ADevice2AWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2B - Device 2B Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2BDevice2BWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(17), 7.0, true);
                VisRevealArea(2, RegionFromId(17), 7.0, true);
                UnitBehaviorAdd(UnitFromId(1606811285), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1606811285), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1606811285), false);
                UnitRemove(UnitFromId(1858341235));
                UnitBehaviorRemove(UnitFromId(1606811285), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2BDevice2BWarpOut_Init () {
                gt_WarpDevice2BDevice2BWarpOut = TriggerCreate(&quot;gt_WarpDevice2BDevice2BWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2A - Sky Fury Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2ASkyFuryWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2096489416), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1378987811), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1378987811), 1);
                UnitBehaviorAdd(UnitFromId(1369395756), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1369395756), 1);
                UnitBehaviorAdd(UnitFromId(1371585284), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1371585284), 1);
                UnitBehaviorAdd(UnitFromId(149639928), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(149639928), 1);
                UnitBehaviorAdd(UnitFromId(958706358), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(958706358), 1);
                UnitBehaviorAdd(UnitFromId(1241761329), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1241761329), 1);
                UnitBehaviorAdd(UnitFromId(607052240), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(607052240), 1);
                UnitBehaviorAdd(UnitFromId(2090424624), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2090424624), 1);
                UnitBehaviorAdd(UnitFromId(1853064341), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1853064341), 1);
                UnitBehaviorAdd(UnitFromId(384393536), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(384393536), 1);
                UnitBehaviorAdd(UnitFromId(1566480301), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1566480301), 1);
                UnitBehaviorAdd(UnitFromId(475308470), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(475308470), 1);
                UnitBehaviorAdd(UnitFromId(1469954248), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1469954248), 1);
                UnitBehaviorAdd(UnitFromId(792843363), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(792843363), 1);
                UnitBehaviorAdd(UnitFromId(201390700), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(201390700), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2096489416), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1378987811));
                UnitRemove(UnitFromId(1369395756));
                UnitRemove(UnitFromId(1371585284));
                UnitRemove(UnitFromId(149639928));
                UnitRemove(UnitFromId(958706358));
                UnitRemove(UnitFromId(1241761329));
                UnitRemove(UnitFromId(607052240));
                UnitRemove(UnitFromId(2090424624));
                UnitRemove(UnitFromId(1853064341));
                UnitRemove(UnitFromId(384393536));
                UnitRemove(UnitFromId(1566480301));
                UnitRemove(UnitFromId(475308470));
                UnitRemove(UnitFromId(1469954248));
                UnitRemove(UnitFromId(792843363));
                UnitRemove(UnitFromId(201390700));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2ASkyFuryWarpOut_Init () {
                gt_WarpDevice2ASkyFuryWarpOut = TriggerCreate(&quot;gt_WarpDevice2ASkyFuryWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2B - Night Wolf Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2BNightWolfWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1873091865), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(692738471), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(692738471), 1);
                UnitBehaviorAdd(UnitFromId(1437526936), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1437526936), 1);
                UnitBehaviorAdd(UnitFromId(1645054798), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1645054798), 1);
                UnitBehaviorAdd(UnitFromId(1787547162), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1787547162), 1);
                UnitBehaviorAdd(UnitFromId(916567594), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(916567594), 1);
                UnitBehaviorAdd(UnitFromId(1872172529), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1872172529), 1);
                UnitBehaviorAdd(UnitFromId(156255729), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(156255729), 1);
                UnitBehaviorAdd(UnitFromId(560752051), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(560752051), 1);
                UnitBehaviorAdd(UnitFromId(945530145), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(945530145), 1);
                UnitBehaviorAdd(UnitFromId(33564), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(33564), 1);
                UnitBehaviorAdd(UnitFromId(1745206805), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1745206805), 1);
                UnitBehaviorAdd(UnitFromId(2023689869), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2023689869), 1);
                UnitBehaviorAdd(UnitFromId(1338179562), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1338179562), 1);
                UnitBehaviorAdd(UnitFromId(6915602), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(6915602), 1);
                UnitBehaviorAdd(UnitFromId(391454602), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(391454602), 1);
                UnitBehaviorAdd(UnitFromId(2109631407), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2109631407), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1873091865), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(692738471));
                UnitRemove(UnitFromId(1437526936));
                UnitRemove(UnitFromId(1645054798));
                UnitRemove(UnitFromId(1787547162));
                UnitRemove(UnitFromId(916567594));
                UnitRemove(UnitFromId(1872172529));
                UnitRemove(UnitFromId(156255729));
                UnitRemove(UnitFromId(560752051));
                UnitRemove(UnitFromId(945530145));
                UnitRemove(UnitFromId(33564));
                UnitRemove(UnitFromId(1745206805));
                UnitRemove(UnitFromId(2023689869));
                UnitRemove(UnitFromId(1338179562));
                UnitRemove(UnitFromId(6915602));
                UnitRemove(UnitFromId(391454602));
                UnitRemove(UnitFromId(2109631407));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2BNightWolfWarpOut_Init () {
                gt_WarpDevice2BNightWolfWarpOut = TriggerCreate(&quot;gt_WarpDevice2BNightWolfWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 2B - Winged Nightmare Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice2BWingedNightmareWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1241203197), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1527505713), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1527505713), 1);
                UnitBehaviorAdd(UnitFromId(270825847), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(270825847), 1);
                UnitBehaviorAdd(UnitFromId(1701108525), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1701108525), 1);
                UnitBehaviorAdd(UnitFromId(1379723893), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1379723893), 1);
                UnitBehaviorAdd(UnitFromId(2134527037), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2134527037), 1);
                UnitBehaviorAdd(UnitFromId(477719837), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(477719837), 1);
                UnitBehaviorAdd(UnitFromId(1622826170), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1622826170), 1);
                UnitBehaviorAdd(UnitFromId(963447073), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(963447073), 1);
                UnitBehaviorAdd(UnitFromId(253531289), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(253531289), 1);
                UnitBehaviorAdd(UnitFromId(470029802), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(470029802), 1);
                UnitBehaviorAdd(UnitFromId(416936616), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(416936616), 1);
                UnitBehaviorAdd(UnitFromId(1066763756), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1066763756), 1);
                UnitBehaviorAdd(UnitFromId(1750621887), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1750621887), 1);
                UnitBehaviorAdd(UnitFromId(726494496), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(726494496), 1);
                UnitBehaviorAdd(UnitFromId(2110198870), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2110198870), 1);
                UnitBehaviorAdd(UnitFromId(888912165), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(888912165), 1);
                UnitBehaviorAdd(UnitFromId(774432815), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(774432815), 1);
                UnitBehaviorAdd(UnitFromId(1230180228), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1230180228), 1);
                UnitBehaviorAdd(UnitFromId(586671124), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(586671124), 1);
                UnitBehaviorAdd(UnitFromId(346541487), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(346541487), 1);
                UnitBehaviorAdd(UnitFromId(1265229760), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1265229760), 1);
                UnitBehaviorAdd(UnitFromId(785060837), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(785060837), 1);
                UnitBehaviorAdd(UnitFromId(47703005), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(47703005), 1);
                UnitBehaviorAdd(UnitFromId(916873049), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(916873049), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1241203197), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1527505713));
                UnitRemove(UnitFromId(270825847));
                UnitRemove(UnitFromId(1701108525));
                UnitRemove(UnitFromId(1379723893));
                UnitRemove(UnitFromId(2134527037));
                UnitRemove(UnitFromId(477719837));
                UnitRemove(UnitFromId(1622826170));
                UnitRemove(UnitFromId(963447073));
                UnitRemove(UnitFromId(253531289));
                UnitRemove(UnitFromId(470029802));
                UnitRemove(UnitFromId(416936616));
                UnitRemove(UnitFromId(1066763756));
                UnitRemove(UnitFromId(1750621887));
                UnitRemove(UnitFromId(726494496));
                UnitRemove(UnitFromId(2110198870));
                UnitRemove(UnitFromId(888912165));
                UnitRemove(UnitFromId(774432815));
                UnitRemove(UnitFromId(1230180228));
                UnitRemove(UnitFromId(586671124));
                UnitRemove(UnitFromId(346541487));
                UnitRemove(UnitFromId(1265229760));
                UnitRemove(UnitFromId(785060837));
                UnitRemove(UnitFromId(47703005));
                UnitRemove(UnitFromId(916873049));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice2BWingedNightmareWarpOut_Init () {
                gt_WarpDevice2BWingedNightmareWarpOut = TriggerCreate(&quot;gt_WarpDevice2BWingedNightmareWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 3 - Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase3Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_MiniMapPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(1152277430), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2097025030), 4, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/F5F58CD1&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(1373810736), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1399340470), 5, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/D3AEE17E&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(954458307), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1726057299), 6, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/394BC979&quot;));
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/48E24A70&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase3Ping_Init () {
                gt_WarpDevicePhase3Ping = TriggerCreate(&quot;gt_WarpDevicePhase3Ping_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 3 - Setup
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase3Setup_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerExecute(gt_UIMinimapAlert, true, false);
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2097025030), 4));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(1152277430), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2097025030), 4, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/F6A6A521&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1399340470), 5));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(1373810736), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1399340470), 5, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/078AD0BE&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1726057299), 6));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(954458307), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1726057299), 6, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/FDDA8C33&quot;));
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2097025030), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1399340470), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1726057299), false);
                TimerStart(gv_timer_WarpDevice_3A, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(2097025030), &quot;ProgressBar&quot;, UnitFromId(2097025030), 1);
                UnitBehaviorSetDuration(UnitFromId(2097025030), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(2097025030), true);
                TimerStart(gv_timer_WarpDevice_3B, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1399340470), &quot;ProgressBar&quot;, UnitFromId(1399340470), 1);
                UnitBehaviorSetDuration(UnitFromId(1399340470), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(1399340470), true);
                TimerStart(gv_timer_WarpDevice_3C, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1726057299), &quot;ProgressBar&quot;, UnitFromId(1726057299), 1);
                UnitBehaviorSetDuration(UnitFromId(1726057299), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(1726057299), true);
                TimerStart(gv_timer_WarpDevices_Phase3_ABC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase3_AB, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase3_AC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase3_BC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerWindowCreate(gv_timer_Window_Countdown, StringExternal(&quot;Param/Value/B8DAC640&quot;), true, false);
                libCOMI_gf_RepositionTimerWindow(TimerWindowLastCreated());
                TimerWindowSetFormat(TimerWindowLastCreated(), StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;));
                TimerWindowSetStyle(TimerWindowLastCreated(), c_timerWindowStyleVerticalTitleTime, false);
                TimerWindowSetFixedHeight(TimerWindowLastCreated(), 90);
                TimerStart(gv_timer_Window_Countdown, gv_countdown_Warp_Device, false, c_timeGame);
                gv_timer_Window_3 = TimerWindowLastCreated();
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/462E58D8&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase3Setup_Init () {
                gt_WarpDevicePhase3Setup = TriggerCreate(&quot;gt_WarpDevicePhase3Setup_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase3Setup, 870.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3A - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3ADestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3AP1, false);
                TriggerEnable(gt_UnitWarp3AP2, false);
                UnitBehaviorRemove(UnitFromId(2097025030), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/C0342E3C&quot;) + TextWithColor(StringExternal(&quot;Param/Value/AAE5AC1A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/BCCA867F&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/3DC4EC75&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2097025030), 4));
                TimerPause(gv_timer_WarpDevice_3A, true);
                TimerPause(gv_timer_WarpDevices_Phase3_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase3_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase3_AC, true);
                if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(1399340470)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E6E38C30&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(1399340470)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/39969084&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/11D0F06E&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/434C1B64&quot;));
                                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                                if ((GameGetMissionTime() &lt; 1115.0)) {
                                    Wait(15.0, c_timeGame);
                                    TriggerExecute(gt_WarpDevicePhase4Ping, true, false);
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(858083693));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3ADestroyed_Init () {
                gt_WarpDevice3ADestroyed = TriggerCreate(&quot;gt_WarpDevice3ADestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice3ADestroyed, UnitRefFromUnit(UnitFromId(2097025030)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3B - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3BDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3BP1, false);
                TriggerEnable(gt_UnitWarp3BP2, false);
                UnitBehaviorRemove(UnitFromId(1399340470), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/3077D900&quot;) + TextWithColor(StringExternal(&quot;Param/Value/849ED0F9&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/6B537FDF&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/EB9D3681&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1399340470), 5));
                TimerPause(gv_timer_WarpDevice_3B, true);
                TimerPause(gv_timer_WarpDevices_Phase3_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase3_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase3_BC, true);
                if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(2097025030)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/633EEE19&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(2097025030)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/ED129747&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B7BB6657&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/DBD4BB30&quot;));
                                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                                if ((GameGetMissionTime() &lt; 1115.0)) {
                                    Wait(15.0, c_timeGame);
                                    TriggerExecute(gt_WarpDevicePhase4Ping, true, false);
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(973204725));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3BDestroyed_Init () {
                gt_WarpDevice3BDestroyed = TriggerCreate(&quot;gt_WarpDevice3BDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice3BDestroyed, UnitRefFromUnit(UnitFromId(1399340470)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3C - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3CDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3CP1, false);
                TriggerEnable(gt_UnitWarp3CP2, false);
                UnitBehaviorRemove(UnitFromId(1726057299), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/305F8072&quot;) + TextWithColor(StringExternal(&quot;Param/Value/DA81419E&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/66240CF5&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/4D615824&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1726057299), 6));
                TimerPause(gv_timer_WarpDevice_3C, true);
                TimerPause(gv_timer_WarpDevices_Phase3_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase3_AC, true);
                TimerPause(gv_timer_WarpDevices_Phase3_BC, true);
                if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(2097025030)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/BA0FA208&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == true)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D477BE14&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(2097025030)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/93E59D5F&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/FF7B88F1&quot;));
                                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                                if ((GameGetMissionTime() &lt; 1115.0)) {
                                    Wait(15.0, c_timeGame);
                                    TriggerExecute(gt_WarpDevicePhase4Ping, true, false);
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(133090505));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3CDestroyed_Init () {
                gt_WarpDevice3CDestroyed = TriggerCreate(&quot;gt_WarpDevice3CDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice3CDestroyed, UnitRefFromUnit(UnitFromId(1726057299)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Timer Window 3
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyTimerWindow3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                TimerWindowDestroy(gv_timer_Window_3);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyTimerWindow3_Init () {
                gt_DestroyTimerWindow3 = TriggerCreate(&quot;gt_DestroyTimerWindow3_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3A - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3AActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3AP1, false);
                TriggerEnable(gt_UnitWarp3AP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2097025030), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/0191C45B&quot;) + TextWithColor(StringExternal(&quot;Param/Value/004612CE&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9A2711C2&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/AB0D5EFB&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/68BA3EE1&quot;) + TextWithColor(StringExternal(&quot;Param/Value/5F72EC90&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/0EE4D53B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/612AC2B6&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2097025030), 4));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice3AOutbackHunterWarpOut, true, false);
                TriggerExecute(gt_WarpDevice3ADevice3AWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(2097025030)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/BCF1355D&quot;));
                    TriggerExecute(gt_DestroyTimerWindow3, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3AActivated_Init () {
                gt_WarpDevice3AActivated = TriggerCreate(&quot;gt_WarpDevice3AActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice3AActivated, gv_timer_WarpDevice_3A);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3B - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3BActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3BP1, false);
                TriggerEnable(gt_UnitWarp3BP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1399340470), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/281ED812&quot;) + TextWithColor(StringExternal(&quot;Param/Value/576AA31B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/597A42DD&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/1E7FCDDD&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/CFE6B27E&quot;) + TextWithColor(StringExternal(&quot;Param/Value/820E9E03&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/C339228E&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A0111A43&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1399340470), 5));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice3BRedAdderWarpOut, true, false);
                TriggerExecute(gt_WarpDevice3BDevice3BWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/3DB654D5&quot;));
                    TriggerExecute(gt_DestroyTimerWindow3, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3BActivated_Init () {
                gt_WarpDevice3BActivated = TriggerCreate(&quot;gt_WarpDevice3BActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice3BActivated, gv_timer_WarpDevice_3B);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3C - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3CActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp3CP1, false);
                TriggerEnable(gt_UnitWarp3CP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1726057299), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/F28A560F&quot;) + TextWithColor(StringExternal(&quot;Param/Value/2BB7BA87&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/B2A5C21D&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/5BE228D1&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/9662CB21&quot;) + TextWithColor(StringExternal(&quot;Param/Value/DA1068B5&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9230905B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/99276854&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1726057299), 6));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice3CShockDivisionWarpOut, true, false);
                TriggerExecute(gt_WarpDevice3CDevice3CWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(2097025030)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1399340470)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1726057299)) == true)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D4E7BD2C&quot;));
                    TriggerExecute(gt_DestroyTimerWindow3, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3CActivated_Init () {
                gt_WarpDevice3CActivated = TriggerCreate(&quot;gt_WarpDevice3CActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice3CActivated, gv_timer_WarpDevice_3C);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 3 - AB - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase3ABActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_AB) != TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C27F1EDE&quot;));
                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase3ABActivated_Init () {
                gt_WarpDevicesPhase3ABActivated = TriggerCreate(&quot;gt_WarpDevicesPhase3ABActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase3ABActivated, gv_timer_WarpDevices_Phase3_AB);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 3 - AC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase3ACActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_AC) != TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/915AF108&quot;));
                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase3ACActivated_Init () {
                gt_WarpDevicesPhase3ACActivated = TriggerCreate(&quot;gt_WarpDevicesPhase3ACActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase3ACActivated, gv_timer_WarpDevices_Phase3_AC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 3 - BC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase3BCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_BC) != TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2F9C0859&quot;));
                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase3BCActivated_Init () {
                gt_WarpDevicesPhase3BCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase3BCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase3BCActivated, gv_timer_WarpDevices_Phase3_BC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 3 - ABC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase3ABCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_AB) == TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_AC) == TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase3_BC) == TimerGetRemaining(gv_timer_WarpDevices_Phase3_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/3C3B60AC&quot;));
                TriggerExecute(gt_DestroyTimerWindow3, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase3ABCActivated_Init () {
                gt_WarpDevicesPhase3ABCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase3ABCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase3ABCActivated, gv_timer_WarpDevices_Phase3_ABC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3A - Device 3A Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3ADevice3AWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(18), 7.0, true);
                VisRevealArea(2, RegionFromId(18), 7.0, true);
                UnitBehaviorAdd(UnitFromId(2097025030), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2097025030), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(2097025030), false);
                UnitRemove(UnitFromId(858083693));
                UnitBehaviorRemove(UnitFromId(2097025030), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3ADevice3AWarpOut_Init () {
                gt_WarpDevice3ADevice3AWarpOut = TriggerCreate(&quot;gt_WarpDevice3ADevice3AWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3B - Device 3B Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3BDevice3BWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(19), 7.0, true);
                VisRevealArea(2, RegionFromId(19), 7.0, true);
                UnitBehaviorAdd(UnitFromId(1399340470), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1399340470), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1399340470), false);
                UnitRemove(UnitFromId(973204725));
                UnitBehaviorRemove(UnitFromId(1399340470), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3BDevice3BWarpOut_Init () {
                gt_WarpDevice3BDevice3BWarpOut = TriggerCreate(&quot;gt_WarpDevice3BDevice3BWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3C - Device 3C Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3CDevice3CWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(20), 7.0, true);
                VisRevealArea(2, RegionFromId(20), 7.0, true);
                UnitBehaviorAdd(UnitFromId(1726057299), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1726057299), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1726057299), false);
                UnitRemove(UnitFromId(133090505));
                UnitBehaviorRemove(UnitFromId(1726057299), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3CDevice3CWarpOut_Init () {
                gt_WarpDevice3CDevice3CWarpOut = TriggerCreate(&quot;gt_WarpDevice3CDevice3CWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3A - Outback Hunter Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3AOutbackHunterWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1293001094), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(561110188), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(561110188), 1);
                UnitBehaviorAdd(UnitFromId(1996654071), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1996654071), 1);
                UnitBehaviorAdd(UnitFromId(1307440673), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1307440673), 1);
                UnitBehaviorAdd(UnitFromId(2112917926), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2112917926), 1);
                UnitBehaviorAdd(UnitFromId(1085520813), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1085520813), 1);
                UnitBehaviorAdd(UnitFromId(1644355398), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1644355398), 1);
                UnitBehaviorAdd(UnitFromId(306683782), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(306683782), 1);
                UnitBehaviorAdd(UnitFromId(2036763903), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2036763903), 1);
                UnitBehaviorAdd(UnitFromId(1088301618), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1088301618), 1);
                UnitBehaviorAdd(UnitFromId(524049829), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(524049829), 1);
                UnitBehaviorAdd(UnitFromId(107336772), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(107336772), 1);
                UnitBehaviorAdd(UnitFromId(588010141), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(588010141), 1);
                UnitBehaviorAdd(UnitFromId(561873008), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(561873008), 1);
                UnitBehaviorAdd(UnitFromId(1018396155), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1018396155), 1);
                UnitBehaviorAdd(UnitFromId(1494001645), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1494001645), 1);
                UnitBehaviorAdd(UnitFromId(1131231961), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1131231961), 1);
                UnitBehaviorAdd(UnitFromId(1945157003), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1945157003), 1);
                UnitBehaviorAdd(UnitFromId(2025094919), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2025094919), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1293001094), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(561110188));
                UnitRemove(UnitFromId(1996654071));
                UnitRemove(UnitFromId(1307440673));
                UnitRemove(UnitFromId(2112917926));
                UnitRemove(UnitFromId(1085520813));
                UnitRemove(UnitFromId(1644355398));
                UnitRemove(UnitFromId(306683782));
                UnitRemove(UnitFromId(2036763903));
                UnitRemove(UnitFromId(1088301618));
                UnitRemove(UnitFromId(524049829));
                UnitRemove(UnitFromId(107336772));
                UnitRemove(UnitFromId(588010141));
                UnitRemove(UnitFromId(561873008));
                UnitRemove(UnitFromId(1018396155));
                UnitRemove(UnitFromId(1494001645));
                UnitRemove(UnitFromId(1131231961));
                UnitRemove(UnitFromId(1945157003));
                UnitRemove(UnitFromId(2025094919));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3AOutbackHunterWarpOut_Init () {
                gt_WarpDevice3AOutbackHunterWarpOut = TriggerCreate(&quot;gt_WarpDevice3AOutbackHunterWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3B - Red Adder Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3BRedAdderWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1711955998), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(46283772), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(46283772), 1);
                UnitBehaviorAdd(UnitFromId(1203444512), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1203444512), 1);
                UnitBehaviorAdd(UnitFromId(1351417097), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1351417097), 1);
                UnitBehaviorAdd(UnitFromId(1248641725), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1248641725), 1);
                UnitBehaviorAdd(UnitFromId(1015533253), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1015533253), 1);
                UnitBehaviorAdd(UnitFromId(905289257), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(905289257), 1);
                UnitBehaviorAdd(UnitFromId(1493123925), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1493123925), 1);
                UnitBehaviorAdd(UnitFromId(55013867), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(55013867), 1);
                UnitBehaviorAdd(UnitFromId(1183746851), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1183746851), 1);
                UnitBehaviorAdd(UnitFromId(1650770588), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1650770588), 1);
                UnitBehaviorAdd(UnitFromId(1886474048), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1886474048), 1);
                UnitBehaviorAdd(UnitFromId(1836378767), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1836378767), 1);
                UnitBehaviorAdd(UnitFromId(525427095), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(525427095), 1);
                UnitBehaviorAdd(UnitFromId(1756548907), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1756548907), 1);
                UnitBehaviorAdd(UnitFromId(1211654075), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1211654075), 1);
                UnitBehaviorAdd(UnitFromId(441725293), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(441725293), 1);
                UnitBehaviorAdd(UnitFromId(1310774856), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1310774856), 1);
                UnitBehaviorAdd(UnitFromId(86083221), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(86083221), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1711955998), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(46283772));
                UnitRemove(UnitFromId(1203444512));
                UnitRemove(UnitFromId(1351417097));
                UnitRemove(UnitFromId(1248641725));
                UnitRemove(UnitFromId(1015533253));
                UnitRemove(UnitFromId(905289257));
                UnitRemove(UnitFromId(1493123925));
                UnitRemove(UnitFromId(55013867));
                UnitRemove(UnitFromId(1183746851));
                UnitRemove(UnitFromId(1650770588));
                UnitRemove(UnitFromId(1886474048));
                UnitRemove(UnitFromId(1836378767));
                UnitRemove(UnitFromId(525427095));
                UnitRemove(UnitFromId(1756548907));
                UnitRemove(UnitFromId(1211654075));
                UnitRemove(UnitFromId(441725293));
                UnitRemove(UnitFromId(1310774856));
                UnitRemove(UnitFromId(86083221));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3BRedAdderWarpOut_Init () {
                gt_WarpDevice3BRedAdderWarpOut = TriggerCreate(&quot;gt_WarpDevice3BRedAdderWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 3C - Shock Division Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice3CShockDivisionWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(291104959), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(2135325561), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2135325561), 1);
                UnitBehaviorAdd(UnitFromId(41563322), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(41563322), 1);
                UnitBehaviorAdd(UnitFromId(1795043902), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1795043902), 1);
                UnitBehaviorAdd(UnitFromId(181389614), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(181389614), 1);
                UnitBehaviorAdd(UnitFromId(1378594989), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1378594989), 1);
                UnitBehaviorAdd(UnitFromId(1009734667), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1009734667), 1);
                UnitBehaviorAdd(UnitFromId(882536112), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(882536112), 1);
                UnitBehaviorAdd(UnitFromId(1200145237), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1200145237), 1);
                UnitBehaviorAdd(UnitFromId(64506766), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(64506766), 1);
                UnitBehaviorAdd(UnitFromId(653399543), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(653399543), 1);
                UnitBehaviorAdd(UnitFromId(1905243798), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1905243798), 1);
                UnitBehaviorAdd(UnitFromId(726547496), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(726547496), 1);
                UnitBehaviorAdd(UnitFromId(504603140), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(504603140), 1);
                UnitBehaviorAdd(UnitFromId(1576705124), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1576705124), 1);
                UnitBehaviorAdd(UnitFromId(476316926), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(476316926), 1);
                UnitBehaviorAdd(UnitFromId(134349759), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(134349759), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(291104959), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(2135325561));
                UnitRemove(UnitFromId(41563322));
                UnitRemove(UnitFromId(1795043902));
                UnitRemove(UnitFromId(181389614));
                UnitRemove(UnitFromId(1378594989));
                UnitRemove(UnitFromId(1009734667));
                UnitRemove(UnitFromId(882536112));
                UnitRemove(UnitFromId(1200145237));
                UnitRemove(UnitFromId(64506766));
                UnitRemove(UnitFromId(653399543));
                UnitRemove(UnitFromId(1905243798));
                UnitRemove(UnitFromId(726547496));
                UnitRemove(UnitFromId(504603140));
                UnitRemove(UnitFromId(1576705124));
                UnitRemove(UnitFromId(476316926));
                UnitRemove(UnitFromId(134349759));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice3CShockDivisionWarpOut_Init () {
                gt_WarpDevice3CShockDivisionWarpOut = TriggerCreate(&quot;gt_WarpDevice3CShockDivisionWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 4 - Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase4Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_MiniMapPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(34196900), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(259458214), 7, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/6FC30F0A&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(2008203070), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(927429514), 8, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/51F5BC94&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(1398512871), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2034365462), 9, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/669E5CBC&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(388182422), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2057077348), 10, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/D49DEC7D&quot;));
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/61EC9A30&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase4Ping_Init () {
                gt_WarpDevicePhase4Ping = TriggerCreate(&quot;gt_WarpDevicePhase4Ping_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 4 - Setup
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase4Setup_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerExecute(gt_UIMinimapAlert, true, false);
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(259458214), 7));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(34196900), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(259458214), 7, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/1AF4A91C&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(927429514), 8));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(2008203070), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(927429514), 8, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/AD6C4805&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2034365462), 9));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(1398512871), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2034365462), 9, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/74053C4F&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2057077348), 10));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(388182422), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2057077348), 10, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/A958F8ED&quot;));
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(259458214), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(927429514), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2034365462), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2057077348), false);
                TimerStart(gv_timer_WarpDevice_4A, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(259458214), &quot;ProgressBar&quot;, UnitFromId(259458214), 1);
                UnitBehaviorSetDuration(UnitFromId(259458214), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(259458214), true);
                TimerStart(gv_timer_WarpDevice_4B, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(927429514), &quot;ProgressBar&quot;, UnitFromId(927429514), 1);
                UnitBehaviorSetDuration(UnitFromId(927429514), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(927429514), true);
                TimerStart(gv_timer_WarpDevice_4C, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(2034365462), &quot;ProgressBar&quot;, UnitFromId(2034365462), 1);
                UnitBehaviorSetDuration(UnitFromId(2034365462), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(2034365462), true);
                TimerStart(gv_timer_WarpDevice_4D, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(2057077348), &quot;ProgressBar&quot;, UnitFromId(2057077348), 1);
                UnitBehaviorSetDuration(UnitFromId(2057077348), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(2057077348), true);
                TimerStart(gv_timer_WarpDevices_Phase4_ABCD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_ABC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_ABD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_ACD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_BCD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_AB, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_AC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_AD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_BC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_BD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase4_CD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerWindowCreate(gv_timer_Window_Countdown, StringExternal(&quot;Param/Value/FF1785BD&quot;), true, false);
                libCOMI_gf_RepositionTimerWindow(TimerWindowLastCreated());
                TimerWindowSetFormat(TimerWindowLastCreated(), StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;));
                TimerWindowSetStyle(TimerWindowLastCreated(), c_timerWindowStyleVerticalTitleTime, false);
                TimerWindowSetFixedHeight(TimerWindowLastCreated(), 90);
                TimerStart(gv_timer_Window_Countdown, gv_countdown_Warp_Device, false, c_timeGame);
                gv_timer_Window_4 = TimerWindowLastCreated();
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 13.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5F3A630C&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase4Setup_Init () {
                gt_WarpDevicePhase4Setup = TriggerCreate(&quot;gt_WarpDevicePhase4Setup_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase4Setup, 1155.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4A - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4ADestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4ABP1, false);
                TriggerEnable(gt_UnitWarp4ABP2, false);
                UnitBehaviorRemove(UnitFromId(259458214), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/CAC65BCB&quot;) + TextWithColor(StringExternal(&quot;Param/Value/15A397B7&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/DB23ED85&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/06C1AF06&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(259458214), 7));
                TimerPause(gv_timer_WarpDevice_4A, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AD, true);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/EAB1E78F&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E54AB00B&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/370C4C0E&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4CDA04B9&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5BB58F27&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/905BF5EC&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A23AA8A3&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/58AF06ED&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                                                if ((GameGetMissionTime() &lt; 1400.0)) {
                                                    Wait(15.0, c_timeGame);
                                                    TriggerExecute(gt_WarpDevicePhase5Ping, true, false);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1992998589));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4ADestroyed_Init () {
                gt_WarpDevice4ADestroyed = TriggerCreate(&quot;gt_WarpDevice4ADestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice4ADestroyed, UnitRefFromUnit(UnitFromId(259458214)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4B - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4BDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4ABP1, false);
                TriggerEnable(gt_UnitWarp4ABP2, false);
                UnitBehaviorRemove(UnitFromId(927429514), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/E0388DEA&quot;) + TextWithColor(StringExternal(&quot;Param/Value/4D34C77A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/94885C80&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/B9191A5F&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(927429514), 8));
                TimerPause(gv_timer_WarpDevice_4B, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BD, true);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/56CA9ECD&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C0FDF0EE&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/083E5792&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B55D36AC&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5352139E&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/67F1AE40&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/8EA9A59D&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D8BC2A85&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                                                if ((GameGetMissionTime() &lt; 1400.0)) {
                                                    Wait(15.0, c_timeGame);
                                                    TriggerExecute(gt_WarpDevicePhase5Ping, true, false);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1718411304));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4BDestroyed_Init () {
                gt_WarpDevice4BDestroyed = TriggerCreate(&quot;gt_WarpDevice4BDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice4BDestroyed, UnitRefFromUnit(UnitFromId(927429514)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4C - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4CDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4CP1, false);
                TriggerEnable(gt_UnitWarp4CP2, false);
                UnitBehaviorRemove(UnitFromId(2034365462), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/88B5A5FE&quot;) + TextWithColor(StringExternal(&quot;Param/Value/A7D07A5C&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/BBDB9328&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/1789C0D0&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2034365462), 9));
                TimerPause(gv_timer_WarpDevice_4C, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BC, true);
                TimerPause(gv_timer_WarpDevices_Phase4_CD, true);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A287A123&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/FA22C0F6&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B3DE97B4&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/71718F92&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/8D108DD7&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/96827BE3&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/04EB1D7B&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/75D969A8&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                                                if ((GameGetMissionTime() &lt; 1400.0)) {
                                                    Wait(15.0, c_timeGame);
                                                    TriggerExecute(gt_WarpDevicePhase5Ping, true, false);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1275713661));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4CDestroyed_Init () {
                gt_WarpDevice4CDestroyed = TriggerCreate(&quot;gt_WarpDevice4CDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice4CDestroyed, UnitRefFromUnit(UnitFromId(2034365462)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4D - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4DDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4DP1, false);
                TriggerEnable(gt_UnitWarp4DP2, false);
                UnitBehaviorRemove(UnitFromId(2057077348), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/33FFF1C6&quot;) + TextWithColor(StringExternal(&quot;Param/Value/1E18B95C&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/2A3928FD&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9DC8A750&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2057077348), 10));
                TimerPause(gv_timer_WarpDevice_4D, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_AD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_BD, true);
                TimerPause(gv_timer_WarpDevices_Phase4_CD, true);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A4C0C2B5&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/36F22F78&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F3692599&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F1DB831F&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/55ED4B31&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/AB516166&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/6A6E70C2&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/024BA55A&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                                                if ((GameGetMissionTime() &lt; 1400.0)) {
                                                    Wait(15.0, c_timeGame);
                                                    TriggerExecute(gt_WarpDevicePhase5Ping, true, false);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1168478675));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4DDestroyed_Init () {
                gt_WarpDevice4DDestroyed = TriggerCreate(&quot;gt_WarpDevice4DDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice4DDestroyed, UnitRefFromUnit(UnitFromId(2057077348)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Timer Window 4
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyTimerWindow4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                TimerWindowDestroy(gv_timer_Window_4);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyTimerWindow4_Init () {
                gt_DestroyTimerWindow4 = TriggerCreate(&quot;gt_DestroyTimerWindow4_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4A - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4AActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4ABP1, false);
                TriggerEnable(gt_UnitWarp4ABP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(259458214), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/FF1539DC&quot;) + TextWithColor(StringExternal(&quot;Param/Value/72F49723&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/28B50CD5&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/98341A65&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/9CBAD09D&quot;) + TextWithColor(StringExternal(&quot;Param/Value/663B1FB0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/096F7DD0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/D5E3AAA6&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(259458214), 7));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice4AHurricaneRegimentG1WarpOut, true, false);
                TriggerExecute(gt_WarpDevice4ADevice4AWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(259458214)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D623644E&quot;));
                    TriggerExecute(gt_DestroyTimerWindow4, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4AActivated_Init () {
                gt_WarpDevice4AActivated = TriggerCreate(&quot;gt_WarpDevice4AActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice4AActivated, gv_timer_WarpDevice_4A);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4B - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4BActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4ABP1, false);
                TriggerEnable(gt_UnitWarp4ABP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(927429514), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/4779787D&quot;) + TextWithColor(StringExternal(&quot;Param/Value/26D7E744&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/98C97490&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/2F0CA5D5&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/662EAD57&quot;) + TextWithColor(StringExternal(&quot;Param/Value/DE200969&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/03CAF7AB&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/DE0D846E&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(927429514), 8));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice4BHurricaneRegimentG2WarpOut, true, false);
                TriggerExecute(gt_WarpDevice4BDevice4BWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4057CA14&quot;));
                    TriggerExecute(gt_DestroyTimerWindow4, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4BActivated_Init () {
                gt_WarpDevice4BActivated = TriggerCreate(&quot;gt_WarpDevice4BActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice4BActivated, gv_timer_WarpDevice_4B);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4C - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4CActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4CP1, false);
                TriggerEnable(gt_UnitWarp4CP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2034365462), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/7F9B795E&quot;) + TextWithColor(StringExternal(&quot;Param/Value/2D769D09&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/0472332B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/0FFE1686&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/604894BB&quot;) + TextWithColor(StringExternal(&quot;Param/Value/45110F70&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9F0AF894&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F7137F05&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2034365462), 9));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice4CBlackhammerG1WarpOut, true, false);
                TriggerExecute(gt_WarpDevice4CDevice4CWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/DE03BC3E&quot;));
                    TriggerExecute(gt_DestroyTimerWindow4, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4CActivated_Init () {
                gt_WarpDevice4CActivated = TriggerCreate(&quot;gt_WarpDevice4CActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice4CActivated, gv_timer_WarpDevice_4C);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4D - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4DActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp4DP1, false);
                TriggerEnable(gt_UnitWarp4DP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2057077348), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/C429D8FB&quot;) + TextWithColor(StringExternal(&quot;Param/Value/695FD264&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F1E80750&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/196D5119&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/E1C24F51&quot;) + TextWithColor(StringExternal(&quot;Param/Value/813BDF3B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/8D39B5EB&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A8B69CFA&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2057077348), 10));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice4DBlackhammerG2WarpOut, true, false);
                TriggerExecute(gt_WarpDevice4DDevice4DWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(259458214)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(927429514)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2034365462)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2057077348)) == true)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2A7B5E97&quot;));
                    TriggerExecute(gt_DestroyTimerWindow4, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4DActivated_Init () {
                gt_WarpDevice4DActivated = TriggerCreate(&quot;gt_WarpDevice4DActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice4DActivated, gv_timer_WarpDevice_4D);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - ABCD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ABCDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABC) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ACD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BCD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AB) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AC) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BC) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_CD) == TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/05B71EBB&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ABCDActivated_Init () {
                gt_WarpDevicesPhase4ABCDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ABCDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ABCDActivated, gv_timer_WarpDevices_Phase4_ABCD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - ABC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ABCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABC) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/6FD05466&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ABCActivated_Init () {
                gt_WarpDevicesPhase4ABCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ABCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ABCActivated, gv_timer_WarpDevices_Phase4_ABC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - ABD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ABDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/BCCB7DCF&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ABDActivated_Init () {
                gt_WarpDevicesPhase4ABDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ABDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ABDActivated, gv_timer_WarpDevices_Phase4_ABD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - ACD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ACDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_ACD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/AD43AA7D&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ACDActivated_Init () {
                gt_WarpDevicesPhase4ACDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ACDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ACDActivated, gv_timer_WarpDevices_Phase4_ACD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - BCD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4BCDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BCD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/84E39E7C&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4BCDActivated_Init () {
                gt_WarpDevicesPhase4BCDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4BCDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4BCDActivated, gv_timer_WarpDevices_Phase4_BCD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - AB - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ABActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AB) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AB) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B753EDA0&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ABActivated_Init () {
                gt_WarpDevicesPhase4ABActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ABActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ABActivated, gv_timer_WarpDevices_Phase4_AB);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - AC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ACActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AC) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ACD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AC) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E16CD7A5&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ACActivated_Init () {
                gt_WarpDevicesPhase4ACActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ACActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ACActivated, gv_timer_WarpDevices_Phase4_AC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - AD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4ADActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_AD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ACD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/268C9521&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4ADActivated_Init () {
                gt_WarpDevicesPhase4ADActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4ADActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4ADActivated, gv_timer_WarpDevices_Phase4_AD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - BC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4BCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BC) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABC)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BC) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A1CF0607&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4BCActivated_Init () {
                gt_WarpDevicesPhase4BCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4BCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4BCActivated, gv_timer_WarpDevices_Phase4_BC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - BD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4BDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_BD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/880082D7&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4BDActivated_Init () {
                gt_WarpDevicesPhase4BDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4BDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4BDActivated, gv_timer_WarpDevices_Phase4_BD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 4 - CD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase4CDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_CD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_ACD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase4_CD) != TimerGetRemaining(gv_timer_WarpDevices_Phase4_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/911A4C9C&quot;));
                TriggerExecute(gt_DestroyTimerWindow4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase4CDActivated_Init () {
                gt_WarpDevicesPhase4CDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase4CDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase4CDActivated, gv_timer_WarpDevices_Phase4_CD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4A - Device 4A Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4ADevice4AWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(21), 7.0, true);
                VisRevealArea(2, RegionFromId(21), 7.0, true);
                UnitBehaviorAdd(UnitFromId(259458214), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(259458214), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(259458214), false);
                UnitRemove(UnitFromId(1992998589));
                UnitBehaviorRemove(UnitFromId(259458214), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4ADevice4AWarpOut_Init () {
                gt_WarpDevice4ADevice4AWarpOut = TriggerCreate(&quot;gt_WarpDevice4ADevice4AWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4B - Device 4B Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4BDevice4BWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(22), 7.0, true);
                VisRevealArea(2, RegionFromId(22), 7.0, true);
                UnitBehaviorAdd(UnitFromId(927429514), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(927429514), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(927429514), false);
                UnitRemove(UnitFromId(1718411304));
                UnitBehaviorRemove(UnitFromId(927429514), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4BDevice4BWarpOut_Init () {
                gt_WarpDevice4BDevice4BWarpOut = TriggerCreate(&quot;gt_WarpDevice4BDevice4BWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4C - Device 4C Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4CDevice4CWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(23), 7.0, true);
                VisRevealArea(2, RegionFromId(23), 7.0, true);
                UnitBehaviorAdd(UnitFromId(2034365462), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2034365462), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(2034365462), false);
                UnitRemove(UnitFromId(1275713661));
                UnitBehaviorRemove(UnitFromId(2034365462), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4CDevice4CWarpOut_Init () {
                gt_WarpDevice4CDevice4CWarpOut = TriggerCreate(&quot;gt_WarpDevice4CDevice4CWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4D - Device 4D Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4DDevice4DWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(24), 7.0, true);
                VisRevealArea(2, RegionFromId(24), 7.0, true);
                UnitBehaviorAdd(UnitFromId(2057077348), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2057077348), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(2057077348), false);
                UnitRemove(UnitFromId(1168478675));
                UnitBehaviorRemove(UnitFromId(2057077348), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4DDevice4DWarpOut_Init () {
                gt_WarpDevice4DDevice4DWarpOut = TriggerCreate(&quot;gt_WarpDevice4DDevice4DWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4A - Hurricane Regiment G1 Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4AHurricaneRegimentG1WarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(38835691), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1444195199), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1444195199), 1);
                UnitBehaviorAdd(UnitFromId(335489875), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(335489875), 1);
                UnitBehaviorAdd(UnitFromId(1051142051), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1051142051), 1);
                UnitBehaviorAdd(UnitFromId(1741959719), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1741959719), 1);
                UnitBehaviorAdd(UnitFromId(577412263), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(577412263), 1);
                UnitBehaviorAdd(UnitFromId(70964144), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(70964144), 1);
                UnitBehaviorAdd(UnitFromId(1173144027), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1173144027), 1);
                UnitBehaviorAdd(UnitFromId(1522776073), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1522776073), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(38835691), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1444195199));
                UnitRemove(UnitFromId(335489875));
                UnitRemove(UnitFromId(1051142051));
                UnitRemove(UnitFromId(1741959719));
                UnitRemove(UnitFromId(577412263));
                UnitRemove(UnitFromId(70964144));
                UnitRemove(UnitFromId(1173144027));
                UnitRemove(UnitFromId(1522776073));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4AHurricaneRegimentG1WarpOut_Init () {
                gt_WarpDevice4AHurricaneRegimentG1WarpOut = TriggerCreate(&quot;gt_WarpDevice4AHurricaneRegimentG1WarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4B - Hurricane Regiment G2 Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4BHurricaneRegimentG2WarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1890715420), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1450197970), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1450197970), 1);
                UnitBehaviorAdd(UnitFromId(175662657), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(175662657), 1);
                UnitBehaviorAdd(UnitFromId(1806071536), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1806071536), 1);
                UnitBehaviorAdd(UnitFromId(971740503), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(971740503), 1);
                UnitBehaviorAdd(UnitFromId(2017221295), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2017221295), 1);
                UnitBehaviorAdd(UnitFromId(2126690850), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2126690850), 1);
                UnitBehaviorAdd(UnitFromId(547394544), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(547394544), 1);
                UnitBehaviorAdd(UnitFromId(1865787840), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1865787840), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1890715420), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1450197970));
                UnitRemove(UnitFromId(175662657));
                UnitRemove(UnitFromId(1806071536));
                UnitRemove(UnitFromId(971740503));
                UnitRemove(UnitFromId(2017221295));
                UnitRemove(UnitFromId(2126690850));
                UnitRemove(UnitFromId(547394544));
                UnitRemove(UnitFromId(1865787840));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4BHurricaneRegimentG2WarpOut_Init () {
                gt_WarpDevice4BHurricaneRegimentG2WarpOut = TriggerCreate(&quot;gt_WarpDevice4BHurricaneRegimentG2WarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4C - Blackhammer G1 Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4CBlackhammerG1WarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(169525675), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(533568312), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(533568312), 1);
                UnitBehaviorAdd(UnitFromId(1138943171), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1138943171), 1);
                UnitBehaviorAdd(UnitFromId(1465042706), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1465042706), 1);
                UnitBehaviorAdd(UnitFromId(76089067), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(76089067), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(169525675), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(533568312));
                UnitRemove(UnitFromId(1138943171));
                UnitRemove(UnitFromId(1465042706));
                UnitRemove(UnitFromId(76089067));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4CBlackhammerG1WarpOut_Init () {
                gt_WarpDevice4CBlackhammerG1WarpOut = TriggerCreate(&quot;gt_WarpDevice4CBlackhammerG1WarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 4D - Blackhammer G2 Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice4DBlackhammerG2WarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(169525675), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1640787334), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1640787334), 1);
                UnitBehaviorAdd(UnitFromId(135146600), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(135146600), 1);
                UnitBehaviorAdd(UnitFromId(245087469), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(245087469), 1);
                UnitBehaviorAdd(UnitFromId(596496420), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(596496420), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(169525675), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1640787334));
                UnitRemove(UnitFromId(135146600));
                UnitRemove(UnitFromId(245087469));
                UnitRemove(UnitFromId(596496420));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice4DBlackhammerG2WarpOut_Init () {
                gt_WarpDevice4DBlackhammerG2WarpOut = TriggerCreate(&quot;gt_WarpDevice4DBlackhammerG2WarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 5 - Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase5Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_MiniMapPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(667593574), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(813247277), 11, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/B973FB45&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(19794804), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1106900905), 12, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/F0756FC8&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(2048703391), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1277808545), 13, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/F749D28B&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(1422833615), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2026857137), 14, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/D22260C2&quot;));
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/CBA557C3&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase5Ping_Init () {
                gt_WarpDevicePhase5Ping = TriggerCreate(&quot;gt_WarpDevicePhase5Ping_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device Phase 5 - Setup
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicePhase5Setup_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerExecute(gt_UIMinimapAlert, true, false);
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(813247277), 11));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(667593574), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(813247277), 11, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/295DF88B&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1106900905), 12));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(19794804), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1106900905), 12, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/67D8F480&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1277808545), 13));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(2048703391), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(1277808545), 13, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/F34360D8&quot;));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2026857137), 14));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingSimple&quot;, PointFromId(1422833615), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), gv_ping_Duration, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(2026857137), 14, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/71FDED90&quot;));
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(813247277), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1106900905), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1277808545), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2026857137), false);
                TimerStart(gv_timer_WarpDevice_5A, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(813247277), &quot;ProgressBar&quot;, UnitFromId(813247277), 1);
                UnitBehaviorSetDuration(UnitFromId(813247277), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(813247277), true);
                TimerStart(gv_timer_WarpDevice_5B, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1106900905), &quot;ProgressBar&quot;, UnitFromId(1106900905), 1);
                UnitBehaviorSetDuration(UnitFromId(1106900905), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(1106900905), true);
                TimerStart(gv_timer_WarpDevice_5C, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(1277808545), &quot;ProgressBar&quot;, UnitFromId(1277808545), 1);
                UnitBehaviorSetDuration(UnitFromId(1277808545), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(1277808545), true);
                TimerStart(gv_timer_WarpDevice_5D, gv_countdown_Warp_Device, false, c_timeGame);
                UnitBehaviorAdd(UnitFromId(2026857137), &quot;ProgressBar&quot;, UnitFromId(2026857137), 1);
                UnitBehaviorSetDuration(UnitFromId(2026857137), &quot;ProgressBar&quot;, gv_countdown_Warp_Device);
                libCOMI_gf_ShowHideUnitProgressBar(UnitFromId(2026857137), true);
                TimerStart(gv_timer_WarpDevices_Phase5_ABCD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_ABC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_ABD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_ACD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_BCD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_AB, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_AC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_AD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_BC, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_BD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerStart(gv_timer_WarpDevices_Phase5_CD, gv_countdown_Warp_Device, false, c_timeGame);
                TimerWindowCreate(gv_timer_Window_Countdown, StringExternal(&quot;Param/Value/610839C7&quot;), true, false);
                libCOMI_gf_RepositionTimerWindow(TimerWindowLastCreated());
                TimerWindowSetFormat(TimerWindowLastCreated(), StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;));
                TimerWindowSetStyle(TimerWindowLastCreated(), c_timerWindowStyleVerticalTitleTime, false);
                TimerWindowSetFixedHeight(TimerWindowLastCreated(), 90);
                TimerStart(gv_timer_Window_Countdown, gv_countdown_Warp_Device, false, c_timeGame);
                gv_timer_Window_5 = TimerWindowLastCreated();
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 13.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/67C7EBE6&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicePhase5Setup_Init () {
                gt_WarpDevicePhase5Setup = TriggerCreate(&quot;gt_WarpDevicePhase5Setup_Func&quot;);
                TriggerAddEventTimeElapsed(gt_WarpDevicePhase5Setup, 1440.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5A - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5ADestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5ABP1, false);
                TriggerEnable(gt_UnitWarp5ABP2, false);
                UnitBehaviorRemove(UnitFromId(813247277), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/228FE0FF&quot;) + TextWithColor(StringExternal(&quot;Param/Value/940674A0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/803B6947&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/9547BBE2&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(813247277), 11));
                TimerPause(gv_timer_WarpDevice_5A, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AD, true);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/1ABEEB55&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/1246AFA4&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/50ED392A&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/6211D475&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/148E8B73&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2E08CEE8&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/205379D2&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/032E2D19&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1529615179));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5ADestroyed_Init () {
                gt_WarpDevice5ADestroyed = TriggerCreate(&quot;gt_WarpDevice5ADestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice5ADestroyed, UnitRefFromUnit(UnitFromId(813247277)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5B - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5BDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5ABP1, false);
                TriggerEnable(gt_UnitWarp5ABP2, false);
                UnitBehaviorRemove(UnitFromId(1106900905), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/B3BD30D8&quot;) + TextWithColor(StringExternal(&quot;Param/Value/1EE450BF&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/68382073&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/49988F9F&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1106900905), 12));
                TimerPause(gv_timer_WarpDevice_5B, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AB, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BD, true);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F39584F0&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/9EBEBEDC&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/3D0E3D8D&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/D3CAD276&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/0AD07850&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/108E8A4E&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F33A3082&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E0C1F232&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1547170578));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5BDestroyed_Init () {
                gt_WarpDevice5BDestroyed = TriggerCreate(&quot;gt_WarpDevice5BDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice5BDestroyed, UnitRefFromUnit(UnitFromId(1106900905)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5C - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5CDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5CDP1, false);
                TriggerEnable(gt_UnitWarp5CDP2, false);
                UnitBehaviorRemove(UnitFromId(1277808545), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/7F1DC36A&quot;) + TextWithColor(StringExternal(&quot;Param/Value/7BC2E8A3&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/54A623D6&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/593B0829&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1277808545), 13));
                TimerPause(gv_timer_WarpDevice_5C, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BC, true);
                TimerPause(gv_timer_WarpDevices_Phase5_CD, true);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/8EAB4C5B&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/9E2513DC&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/CA89B73E&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F8E34312&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/1820A1CA&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/E78DF882&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/7BBB5522&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/FB886D53&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1115858509));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5CDestroyed_Init () {
                gt_WarpDevice5CDestroyed = TriggerCreate(&quot;gt_WarpDevice5CDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice5CDestroyed, UnitRefFromUnit(UnitFromId(1277808545)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5D - Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5DDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5CDP1, false);
                TriggerEnable(gt_UnitWarp5CDP2, false);
                UnitBehaviorRemove(UnitFromId(2026857137), &quot;ProgressBar&quot;, 1);
                gv_var_WarpDevices_Remaining -= 1;
                gv_var_WarpDevices_Destroyed += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/026CA0DD&quot;) + TextWithColor(StringExternal(&quot;Param/Value/6C4A1FBC&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/75585E0F&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/1A8A12DF&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2026857137), 14));
                TimerPause(gv_timer_WarpDevice_5D, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ACD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_ABD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BCD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_AD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_BD, true);
                TimerPause(gv_timer_WarpDevices_Phase5_CD, true);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    TimerPause(gv_timer_Window_Countdown, true);
                }
                if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/AED27C13&quot;));
                }
                else {
                    if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true)) {
                        Wait(2.0, c_timeGame);
                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/688D880B&quot;));
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false)) {
                            Wait(2.0, c_timeGame);
                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4C2019AC&quot;));
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true)) {
                                Wait(2.0, c_timeGame);
                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/FEAAF67C&quot;));
                            }
                            else {
                                if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false)) {
                                    Wait(2.0, c_timeGame);
                                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/539103FD&quot;));
                                }
                                else {
                                    if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true)) {
                                        Wait(2.0, c_timeGame);
                                        SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                        libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/BC4F0EC3&quot;));
                                    }
                                    else {
                                        if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false)) {
                                            Wait(2.0, c_timeGame);
                                            SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                            libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 6.0, c_transmissionDurationAdd, false);
                                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2CBC89AF&quot;));
                                        }
                                        else {
                                            if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false)) {
                                                Wait(2.0, c_timeGame);
                                                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                                                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/69D69352&quot;));
                                                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                Wait(2.0, c_timeGame);
                UnitKill(UnitFromId(1413565778));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5DDestroyed_Init () {
                gt_WarpDevice5DDestroyed = TriggerCreate(&quot;gt_WarpDevice5DDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_WarpDevice5DDestroyed, UnitRefFromUnit(UnitFromId(2026857137)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Timer Window 5
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyTimerWindow5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                TimerWindowDestroy(gv_timer_Window_5);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyTimerWindow5_Init () {
                gt_DestroyTimerWindow5 = TriggerCreate(&quot;gt_DestroyTimerWindow5_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5A - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5AActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5ABP1, false);
                TriggerEnable(gt_UnitWarp5ABP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(813247277), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/91697E53&quot;) + TextWithColor(StringExternal(&quot;Param/Value/0159F7AC&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/8C842B3D&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/76F55BDD&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/CB3BD26A&quot;) + TextWithColor(StringExternal(&quot;Param/Value/CBFF751A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/36AD3D2A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/EEA49732&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(813247277), 11));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice5APrideofAugustgrad1, true, false);
                TriggerExecute(gt_WarpDevice5ADevice5AWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(813247277)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/EF603DB6&quot;));
                    TriggerExecute(gt_DestroyTimerWindow5, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5AActivated_Init () {
                gt_WarpDevice5AActivated = TriggerCreate(&quot;gt_WarpDevice5AActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice5AActivated, gv_timer_WarpDevice_5A);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5B - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5BActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5ABP1, false);
                TriggerEnable(gt_UnitWarp5ABP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1106900905), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/A7FF8B0F&quot;) + TextWithColor(StringExternal(&quot;Param/Value/454466E0&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/65675FB9&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F2C917AE&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/9C0CE47A&quot;) + TextWithColor(StringExternal(&quot;Param/Value/CCBE7697&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F21C0865&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/E59F7280&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1106900905), 12));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice5BPrideofAugustgrad2, true, false);
                TriggerExecute(gt_WarpDevice5BDevice5BWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A5928479&quot;));
                    TriggerExecute(gt_DestroyTimerWindow5, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5BActivated_Init () {
                gt_WarpDevice5BActivated = TriggerCreate(&quot;gt_WarpDevice5BActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice5BActivated, gv_timer_WarpDevice_5B);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5C - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5CActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5CDP1, false);
                TriggerEnable(gt_UnitWarp5CDP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1277808545), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/C581F857&quot;) + TextWithColor(StringExternal(&quot;Param/Value/CBF6BA4A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/BA3662A5&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/818886B1&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/A092A09D&quot;) + TextWithColor(StringExternal(&quot;Param/Value/D2855F52&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/AAAF6539&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F8433033&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1277808545), 13));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice5CPrideofAugustgrad3, true, false);
                TriggerExecute(gt_WarpDevice5CDevice5CWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == true) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == false)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/27618733&quot;));
                    TriggerExecute(gt_DestroyTimerWindow5, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5CActivated_Init () {
                gt_WarpDevice5CActivated = TriggerCreate(&quot;gt_WarpDevice5CActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice5CActivated, gv_timer_WarpDevice_5C);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5D - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5DActivated_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_UnitWarp5CDP1, false);
                TriggerEnable(gt_UnitWarp5CDP2, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2026857137), true);
                gv_var_WarpDevices_Remaining -= 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/909CF00D&quot;) + TextWithColor(StringExternal(&quot;Param/Value/82AE4253&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/924B0358&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/BD49C37F&quot;), Color(100.0, 100.0, 0.0))));
                gv_var_WarpDevices_Activated += 1;
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/3CBB0BC0&quot;) + TextWithColor(StringExternal(&quot;Param/Value/3CDAA170&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/85A10667&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F5819879&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(2026857137), 14));
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveFailed&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                TimerPause(gv_timer_Window_Countdown, true);
                TriggerExecute(gt_WarpDevice5DPrideofAugustgrad4, true, false);
                TriggerExecute(gt_WarpDevice5DDevice5DWarpOut, true, false);
                if ((UnitIsAlive(UnitFromId(813247277)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1106900905)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(1277808545)) == false) &amp;&amp; (UnitIsAlive(UnitFromId(2026857137)) == true)) {
                    Wait(7.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/1CAFDB73&quot;));
                    TriggerExecute(gt_DestroyTimerWindow5, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5DActivated_Init () {
                gt_WarpDevice5DActivated = TriggerCreate(&quot;gt_WarpDevice5DActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevice5DActivated, gv_timer_WarpDevice_5D);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - ABCD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ABCDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABC) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ACD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BCD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AB) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AC) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BC) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_CD) == TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/7BC0C4B7&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ABCDActivated_Init () {
                gt_WarpDevicesPhase5ABCDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ABCDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ABCDActivated, gv_timer_WarpDevices_Phase5_ABCD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - ABC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ABCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABC) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/46413A98&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ABCActivated_Init () {
                gt_WarpDevicesPhase5ABCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ABCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ABCActivated, gv_timer_WarpDevices_Phase5_ABC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - ABD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ABDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4207B046&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ABDActivated_Init () {
                gt_WarpDevicesPhase5ABDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ABDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ABDActivated, gv_timer_WarpDevices_Phase5_ABD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - ACD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ACDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_ACD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2A84F25F&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ACDActivated_Init () {
                gt_WarpDevicesPhase5ACDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ACDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ACDActivated, gv_timer_WarpDevices_Phase5_ACD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - BCD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5BCDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BCD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C102478C&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5BCDActivated_Init () {
                gt_WarpDevicesPhase5BCDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5BCDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5BCDActivated, gv_timer_WarpDevices_Phase5_BCD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - AB - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ABActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AB) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AB) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/65CF27BA&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ABActivated_Init () {
                gt_WarpDevicesPhase5ABActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ABActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ABActivated, gv_timer_WarpDevices_Phase5_AB);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - AC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ACActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AC) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ACD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AC) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABC)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B563D74C&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ACActivated_Init () {
                gt_WarpDevicesPhase5ACActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ACActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ACActivated, gv_timer_WarpDevices_Phase5_AC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - AD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5ADActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_AD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ACD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/3A74FD8B&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5ADActivated_Init () {
                gt_WarpDevicesPhase5ADActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5ADActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5ADActivated, gv_timer_WarpDevices_Phase5_AD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - BC - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5BCActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BC) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABC)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BC) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F2610B72&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5BCActivated_Init () {
                gt_WarpDevicesPhase5BCActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5BCActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5BCActivated, gv_timer_WarpDevices_Phase5_BC);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - BD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5BDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ABD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_BD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F0455310&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5BDActivated_Init () {
                gt_WarpDevicesPhase5BDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5BDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5BDActivated, gv_timer_WarpDevices_Phase5_BD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Devices Phase 5 - CD - Activated
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevicesPhase5CDActivated_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_CD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_ACD)))) {
                        return false;
                    }
                    if (!((TimerGetRemaining(gv_timer_WarpDevices_Phase5_CD) != TimerGetRemaining(gv_timer_WarpDevices_Phase5_BCD)))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TimerPause(gv_timer_Window_Countdown, true);
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/414DFF5C&quot;));
                TriggerExecute(gt_DestroyTimerWindow5, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevicesPhase5CDActivated_Init () {
                gt_WarpDevicesPhase5CDActivated = TriggerCreate(&quot;gt_WarpDevicesPhase5CDActivated_Func&quot;);
                TriggerAddEventTimer(gt_WarpDevicesPhase5CDActivated, gv_timer_WarpDevices_Phase5_CD);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5A - Device 5A Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5ADevice5AWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(25), 7.0, true);
                VisRevealArea(2, RegionFromId(25), 7.0, true);
                UnitBehaviorAdd(UnitFromId(813247277), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(813247277), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(813247277), false);
                UnitRemove(UnitFromId(1529615179));
                UnitBehaviorRemove(UnitFromId(813247277), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5ADevice5AWarpOut_Init () {
                gt_WarpDevice5ADevice5AWarpOut = TriggerCreate(&quot;gt_WarpDevice5ADevice5AWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5B - Device 5B Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5BDevice5BWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(26), 7.0, true);
                VisRevealArea(2, RegionFromId(26), 7.0, true);
                UnitBehaviorAdd(UnitFromId(1106900905), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1106900905), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1106900905), false);
                UnitRemove(UnitFromId(1547170578));
                UnitBehaviorRemove(UnitFromId(1106900905), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5BDevice5BWarpOut_Init () {
                gt_WarpDevice5BDevice5BWarpOut = TriggerCreate(&quot;gt_WarpDevice5BDevice5BWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5C - Device 5C Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5CDevice5CWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(27), 7.0, true);
                VisRevealArea(2, RegionFromId(27), 7.0, true);
                UnitBehaviorAdd(UnitFromId(1277808545), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1277808545), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1277808545), false);
                UnitRemove(UnitFromId(1115858509));
                UnitBehaviorRemove(UnitFromId(1277808545), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5CDevice5CWarpOut_Init () {
                gt_WarpDevice5CDevice5CWarpOut = TriggerCreate(&quot;gt_WarpDevice5CDevice5CWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5D - Device 5D Warp Out
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5DDevice5DWarpOut_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                VisRevealArea(1, RegionFromId(28), 7.0, true);
                VisRevealArea(2, RegionFromId(28), 7.0, true);
                UnitBehaviorAdd(UnitFromId(2026857137), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(2026857137), 1);
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(2026857137), false);
                UnitRemove(UnitFromId(1413565778));
                UnitBehaviorRemove(UnitFromId(2026857137), &quot;ProgressBar&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5DDevice5DWarpOut_Init () {
                gt_WarpDevice5DDevice5DWarpOut = TriggerCreate(&quot;gt_WarpDevice5DDevice5DWarpOut_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5A - Pride of Augustgrad 1
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5APrideofAugustgrad1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(185835985), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1211647633), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1211647633), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(185835985), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1211647633));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5APrideofAugustgrad1_Init () {
                gt_WarpDevice5APrideofAugustgrad1 = TriggerCreate(&quot;gt_WarpDevice5APrideofAugustgrad1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5B - Pride of Augustgrad 2
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5BPrideofAugustgrad2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(482029343), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(248314981), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(248314981), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(482029343), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(248314981));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5BPrideofAugustgrad2_Init () {
                gt_WarpDevice5BPrideofAugustgrad2 = TriggerCreate(&quot;gt_WarpDevice5BPrideofAugustgrad2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5C - Pride of Augustgrad 3
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5CPrideofAugustgrad3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(916855620), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(1240159760), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(1240159760), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(916855620), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(1240159760));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5CPrideofAugustgrad3_Init () {
                gt_WarpDevice5CPrideofAugustgrad3 = TriggerCreate(&quot;gt_WarpDevice5CPrideofAugustgrad3_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Warp Device 5D - Pride of Augustgrad 4
            //--------------------------------------------------------------------------------------------------
            bool gt_WarpDevice5DPrideofAugustgrad4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayAtPointForPlayer(SoundLink(&quot;FenixWarpOut&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1985730327), 0.0, 100.0, 0.0);
                UnitBehaviorAdd(UnitFromId(781897000), &quot;ProtossGenericWarpInOut&quot;, UnitFromId(781897000), 1);
                Wait(5.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Obelisk_WarpJumpStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1985730327), 0.0, 100.0, 0.0);
                UnitRemove(UnitFromId(781897000));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_WarpDevice5DPrideofAugustgrad4_Init () {
                gt_WarpDevice5DPrideofAugustgrad4 = TriggerCreate(&quot;gt_WarpDevice5DPrideofAugustgrad4_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attacking Q
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackingQ_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((libCOMI_gf_GameIsOver() == false))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerQueueEnter();
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                libCOMI_gf_SendMissionTransmission(&quot;AttackWave&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(20.0, c_timeAI);
                TriggerEnable(TriggerGetCurrent(), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackingQ_Init () {
                gt_EnemyAttackingQ = TriggerCreate(&quot;gt_EnemyAttackingQ_Func&quot;);
                TriggerAddEventPlayerAIWave(gt_EnemyAttackingQ, gv_pLAYER_03_ENEMY);
                TriggerAddEventPlayerAIWave(gt_EnemyAttackingQ, gv_pLAYER_04_ENEMY);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Defeat
            //--------------------------------------------------------------------------------------------------
            bool gt_Defeat_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_EndCampaignMission(c_gameOverDefeat);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Defeat_Init () {
                gt_Defeat = TriggerCreate(&quot;gt_Defeat_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Start AI
            //--------------------------------------------------------------------------------------------------
            bool gt_StartAI_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libCOMI_gf_StartCoopAI(gv_pLAYER_03_ENEMY, gv_pLAYER_01_USER);
                libCOMI_gf_StartCoopAI(gv_pLAYER_04_ENEMY, gv_pLAYER_02_USER);
                TriggerExecute(gt_SetupAttackWaveSpawn, true, false);
                TriggerExecute(gt_AIAttackWaves, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_StartAI_Init () {
                gt_StartAI = TriggerCreate(&quot;gt_StartAI_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Setup Attack Wave Spawn
            //--------------------------------------------------------------------------------------------------
            bool gt_SetupAttackWaveSpawn_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_spawnLocationIter;
                // Variable Initialization
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(4);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(4);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(7);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(7);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(7);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(7);
                lv_spawnLocationIter = 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(4);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(4);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(8);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(8);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(8);
                lv_spawnLocationIter += 1;
                gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(8);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SetupAttackWaveSpawn_Init () {
                gt_SetupAttackWaveSpawn = TriggerCreate(&quot;gt_SetupAttackWaveSpawn_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: AI Attack Waves
            //--------------------------------------------------------------------------------------------------
            bool gt_AIAttackWaves_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gf_RunAttackWaveatMissionTime(gt_AttackWave01, (4.5 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave02, (8.0 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave03, (12.0 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave04, (16.0 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave05, (19.5 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave06, (23.0 * 60.0));
                gf_RunAttackWaveatMissionTime(gt_AttackWave07, (26.5 * 60.0));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AIAttackWaves_Init () {
                gt_AIAttackWaves = TriggerCreate(&quot;gt_AIAttackWaves_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 01
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave01_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave01_Init () {
                gt_AttackWave01 = TriggerCreate(&quot;gt_AttackWave01_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 02
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave02_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave02_Init () {
                gt_AttackWave02 = TriggerCreate(&quot;gt_AttackWave02_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 03
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave03_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                int lv_numberOfStructures_ExpLeft;
                int lv_numberOfStructures_ExpRight;
                point lv_attackPathWaypoint;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
                PlayerGroupLoopBegin(libCOMI_gf_HumanPlayers());
                for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
                    lv_numberOfStructures_ExpLeft += UnitGroupCount(UnitGroup(null, PlayerGroupLoopCurrent(), RegionFromId(10), UnitFilter((1 &lt;&lt; c_targetFilterStructure), 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
                    lv_numberOfStructures_ExpRight += UnitGroupCount(UnitGroup(null, PlayerGroupLoopCurrent(), RegionFromId(11), UnitFilter((1 &lt;&lt; c_targetFilterStructure), 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
                }
                PlayerGroupLoopEnd();
                if ((((lv_numberOfStructures_ExpLeft == 0) &amp;&amp; (lv_numberOfStructures_ExpRight == 0)) || ((lv_numberOfStructures_ExpLeft &gt; 0) &amp;&amp; (lv_numberOfStructures_ExpRight &gt; 0)))) {
                    if ((RandomInt(0, 100) &lt; 50)) {
                        lv_attackPathWaypoint = PointFromId(748912805);
                    }
                    else {
                        lv_attackPathWaypoint = PointFromId(2007937307);
                    }
                }
                else {
                    if ((lv_numberOfStructures_ExpLeft &gt; lv_numberOfStructures_ExpRight)) {
                        lv_attackPathWaypoint = PointFromId(748912805);
                    }
                    else {
                        lv_attackPathWaypoint = PointFromId(2007937307);
                    }
                }
                if ((lv_attackPathWaypoint == PointFromId(748912805))) {
                    gv_attackWaveA_Wave05Path = PointFromId(2007937307);
                }
                else {
                    gv_attackWaveA_Wave05Path = PointFromId(748912805);
                }
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave03_Init () {
                gt_AttackWave03 = TriggerCreate(&quot;gt_AttackWave03_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 04
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave04_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                int lv_attackingAI;
                int lv_defendingPlayer;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave04_Init () {
                gt_AttackWave04 = TriggerCreate(&quot;gt_AttackWave04_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 05
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave05_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                int lv_numberOfStructures_ExpLeft;
                int lv_numberOfStructures_ExpRight;
                point lv_attackPathWaypoint;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
                lv_attackPathWaypoint = gv_attackWaveA_Wave05Path;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave05_Init () {
                gt_AttackWave05 = TriggerCreate(&quot;gt_AttackWave05_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 06
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave06_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__6Larger;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__6Larger;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave06_Init () {
                gt_AttackWave06 = TriggerCreate(&quot;gt_AttackWave06_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Attack Wave 07
            //--------------------------------------------------------------------------------------------------
            bool gt_AttackWave07_Func (bool testConds, bool runActions) {
                // Variable Declarations
                int lv_resourceBucket;
                int lv_techBucket;
                // Variable Initialization
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__7Largest;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__7Largest;
                lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;
                AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(224492109));
                AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(224492109));
                libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
                libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_AttackWave07_Init () {
                gt_AttackWave07 = TriggerCreate(&quot;gt_AttackWave07_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Destroy Warp Devices - Create
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryDestroyWarpDevicesCreate_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                ObjectiveCreateForPlayers((StringExternal(&quot;Param/Value/8FD86F3C&quot;) + TextWithColor(StringExternal(&quot;Param/Value/223430EE&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/B488F848&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A90D6DA1&quot;), Color(100.0, 100.0, 0.0))), StringExternal(&quot;Param/Value/F121F23A&quot;), c_objectiveStateActive, true, PlayerGroupAll());
                gv_objective_PrimaryObjective_1 = ObjectiveLastCreated();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryDestroyWarpDevicesCreate_Init () {
                gt_PrimaryDestroyWarpDevicesCreate = TriggerCreate(&quot;gt_PrimaryDestroyWarpDevicesCreate_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Destroy Warp Devices - Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryDestroyWarpDevicesComplete_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if ((gv_var_WarpDevices_Activated == 0) || (gv_var_WarpDevices_Activated_MaxCount == 0)) {
                        return false;
                    }
                    if (!((gv_var_WarpDevices_Remaining == 0))) {
                        return false;
                    }
                    if (!((gv_var_WarpDevices_Activated &lt; gv_var_WarpDevices_Activated_MaxCount))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(3.0, c_timeGame);
                ObjectiveSetState(gv_objective_PrimaryObjective_1, c_objectiveStateCompleted);
                ObjectiveSetName(gv_objective_PrimaryObjective_1, StringExternal(&quot;Param/Value/BCF55E26&quot;));
                ObjectiveSetState(gv_objective_PrimaryObjective_2, c_objectiveStateCompleted);
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/63F93CA8&quot;) + IntToText(gv_var_WarpDevices_Activated) + StringExternal(&quot;Param/Value/C0C96BA3&quot;)));
                Wait(12.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 15.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/153C3FF6&quot;));
                TimerStart(gv_timer_Window_Countdown, 0.0, false, c_timeGame);
                TriggerExecute(gt_BossFightInterlude, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryDestroyWarpDevicesComplete_Init () {
                gt_PrimaryDestroyWarpDevicesComplete = TriggerCreate(&quot;gt_PrimaryDestroyWarpDevicesComplete_Func&quot;);
                TriggerAddEventTimePeriodic(gt_PrimaryDestroyWarpDevicesComplete, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Warp Devices Activated - Create
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryWarpDevicesActivatedCreate_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(9.0, c_timeGame);
                ObjectiveCreateForPlayers((StringExternal(&quot;Param/Value/FF10B1B1&quot;) + TextWithColor(StringExternal(&quot;Param/Value/F21BA07D&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/0968997F&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/97E11C48&quot;), Color(100.0, 100.0, 0.0))), StringExternal(&quot;Param/Value/BAFF0000&quot;), c_objectiveStateActive, true, PlayerGroupAll());
                gv_objective_PrimaryObjective_2 = ObjectiveLastCreated();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryWarpDevicesActivatedCreate_Init () {
                gt_PrimaryWarpDevicesActivatedCreate = TriggerCreate(&quot;gt_PrimaryWarpDevicesActivatedCreate_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Warp Devices Activated - Mission Failure
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryWarpDevicesActivatedMissionFailure_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if ((gv_var_WarpDevices_Activated == 0) || (gv_var_WarpDevices_Activated_MaxCount == 0)) {
                        return false;
                    }
                    if (!((gv_var_WarpDevices_Activated &gt;= gv_var_WarpDevices_Activated_MaxCount))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(12.0, c_timeGame);
                ObjectiveSetState(gv_objective_PrimaryObjective_1, c_objectiveStateFailed);
                ObjectiveSetName(gv_objective_PrimaryObjective_1, (StringExternal(&quot;Param/Value/71682230&quot;) + TextWithColor(StringExternal(&quot;Param/Value/91F66A34&quot;), Color(100.0, 0.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Remaining), Color(100.0, 0.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/299DFD16&quot;), Color(100.0, 0.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/91119867&quot;), Color(100.0, 0.0, 0.0))));
                ObjectiveSetState(gv_objective_PrimaryObjective_2, c_objectiveStateFailed);
                ObjectiveSetName(gv_objective_PrimaryObjective_2, (StringExternal(&quot;Param/Value/5D641AB7&quot;) + TextWithColor(StringExternal(&quot;Param/Value/E51484C9&quot;), Color(100.0, 0.0, 0.0)) + TextWithColor(IntToText(gv_var_WarpDevices_Activated), Color(100.0, 0.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A35660DB&quot;), Color(100.0, 0.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/CB955C95&quot;), Color(100.0, 0.0, 0.0))));
                Wait(10.0, c_timeGame);
                TriggerEnable(gt_WarpDevicePhase4Ping, false);
                TriggerEnable(gt_WarpDevicePhase4Setup, false);
                TriggerEnable(gt_WarpDevicePhase5Ping, false);
                TriggerEnable(gt_WarpDevicePhase5Setup, false);
                TriggerEnable(gt_MessageHalfWay, false);
                TriggerEnable(gt_EncounterSkyMarshal, false);
                TriggerEnable(gt_EncounterArchangel, false);
                TriggerEnable(gt_SecondaryBonusObjective2Create, false);
                TriggerQueuePause(true);
                TriggerQueueClear(c_triggerQueueRemove);
                UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
                TransmissionClearAll();
                UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
                libNtve_gf_HideGameUI(false, PlayerGroupAll());
                UnitClearSelection(gv_pLAYER_01_USER);
                UnitClearSelection(gv_pLAYER_02_USER);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/DB68233A&quot;));
                Wait(12.0, c_timeGame);
                GameOver(1, c_gameOverDefeat, true, true);
                GameOver(2, c_gameOverDefeat, true, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryWarpDevicesActivatedMissionFailure_Init () {
                gt_PrimaryWarpDevicesActivatedMissionFailure = TriggerCreate(&quot;gt_PrimaryWarpDevicesActivatedMissionFailure_Func&quot;);
                TriggerAddEventTimePeriodic(gt_PrimaryWarpDevicesActivatedMissionFailure, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Boss Fight Interlude
            //--------------------------------------------------------------------------------------------------
            bool gt_BossFightInterlude_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(15.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/5343B5B3&quot;));
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;Event_Nova01_Facility_Alarm_Klaxon&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, &quot;ZZerus03MusicPreBoss&quot;, c_soundtrackCueAny, c_soundtrackIndexAny, true);
                libNtve_gf_ShowHideUnit(UnitFromId(237470653), true);
                libNtve_gf_ShowHideUnit(UnitFromId(1478913016), true);
                libNtve_gf_ShowHideUnit(UnitFromId(2034423177), true);
                libNtve_gf_ShowHideUnit(UnitFromId(1317705441), true);
                libNtve_gf_ShowHideUnit(UnitFromId(2100560276), true);
                libNtve_gf_ShowHideUnit(UnitFromId(158190500), true);
                Wait(6.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 8.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C26CF742&quot;));
                Wait(22.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/32AD2D0F&quot;));
                Wait(22.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 14.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/F07AEDC1&quot;));
                Wait(14.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/4783D338&quot;));
                TriggerExecute(gt_PrimaryDestroyOdinsCreate, true, false);
                Wait(40.0, c_timeGame);
                TriggerExecute(gt_OdinsEntertheMap, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BossFightInterlude_Init () {
                gt_BossFightInterlude = TriggerCreate(&quot;gt_BossFightInterlude_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Odins Enter the Map
            //--------------------------------------------------------------------------------------------------
            bool gt_OdinsEntertheMap_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, &quot;ZZerus03ZurvanBossMusic&quot;, c_soundtrackCueAny, c_soundtrackIndexAny, true);
                libNtve_gf_ShowHideUnit(UnitFromId(341160576), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(341160576), false);
                libNtve_gf_ShowHideUnit(UnitFromId(954621714), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(954621714), false);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingBoss&quot;, UnitGetPosition(UnitFromId(341160576)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 300.0, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(341160576), 30, PingLastCreated());
                PingSetUnit(PingLastCreated(), UnitFromId(341160576));
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/7CEB6E6C&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingBoss&quot;, UnitGetPosition(UnitFromId(954621714)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 300.0, 270.0);
                libHots_gf_StorePingForUnit(UnitFromId(954621714), 31, PingLastCreated());
                PingSetUnit(PingLastCreated(), UnitFromId(954621714));
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/1CD93DAD&quot;));
                Wait(1.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;AlarmBotAlert&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UnitKill(UnitFromId(702147608));
                UnitKill(UnitFromId(699549145));
                UnitKill(UnitFromId(1112414116));
                UnitAbilityEnable(UnitFromId(341160576), &quot;attack&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;ACPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;SeekerBomb&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;OdinBarrage&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;NovaOdinAnnihilate&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;MutatorAmonTychusTossGrenade&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;attack&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;ACPirateLightningStorm&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;SeekerBomb&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;OdinBarrage&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;NovaOdinAnnihilate&quot;, true);
                UnitAbilityEnable(UnitFromId(954621714), &quot;DefensiveMatrixTerranzineHarvester&quot;, true);
                UnitAbilityEnable(UnitFromId(341160576), &quot;MutatorAmonTychusTossGrenade&quot;, true);
                Wait(1.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 15.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/0DDEE3A1&quot;));
                TriggerExecute(gt_OdinBossBars, true, false);
                TriggerEnable(gt_OdinsMovetoAttack, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_OdinsEntertheMap_Init () {
                gt_OdinsEntertheMap = TriggerCreate(&quot;gt_OdinsEntertheMap_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Odins Move to Attack
            //--------------------------------------------------------------------------------------------------
            bool gt_OdinsMovetoAttack_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitIssueOrder(UnitFromId(341160576), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(224492109)), c_orderQueueReplace);
                UnitIssueOrder(UnitFromId(954621714), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(224492109)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_OdinsMovetoAttack_Init () {
                gt_OdinsMovetoAttack = TriggerCreate(&quot;gt_OdinsMovetoAttack_Func&quot;);
                TriggerAddEventTimePeriodic(gt_OdinsMovetoAttack, 2.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Odin Boss Bars
            //--------------------------------------------------------------------------------------------------
            bool gt_OdinBossBars_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_DisplayBossBar(1, &quot;Assets\\Textures\\btn-unit-terran-odin.dds&quot;, StringExternal(&quot;Param/Value/E79D4EDA&quot;), 25000, PlayerGroupAll());
                libNtve_gf_MoveBossBar(1, c_anchorTopRight, 0, 45);
                libNtve_gf_SetBossBarBoss(1, UnitFromId(341160576), true);
                libNtve_gf_DisplayBossBar(2, &quot;Assets\\Textures\\btn-unit-terran-odin.dds&quot;, StringExternal(&quot;Param/Value/EA6CF697&quot;), 25000, PlayerGroupAll());
                libNtve_gf_MoveBossBar(2, c_anchorTopRight, 0, 150);
                libNtve_gf_SetBossBarBoss(2, UnitFromId(954621714), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_OdinBossBars_Init () {
                gt_OdinBossBars = TriggerCreate(&quot;gt_OdinBossBars_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Defensive Matrix - Odin Alpha
            //--------------------------------------------------------------------------------------------------
            bool gt_DefensiveMatrixOdinAlpha_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(341160576)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerExecute(gt_DefensiveMatrixMcKenzieWarning, true, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(341160576), true);
                Wait(15.0, c_timeGame);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(341160576), false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DefensiveMatrixOdinAlpha_Init () {
                gt_DefensiveMatrixOdinAlpha = TriggerCreate(&quot;gt_DefensiveMatrixOdinAlpha_Func&quot;);
                TriggerAddEventUnitAbility(gt_DefensiveMatrixOdinAlpha, UnitRefFromUnit(UnitFromId(341160576)), AbilityCommand(&quot;DefensiveMatrixTerranzineHarvester&quot;, 0), c_unitAbilStageAll, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Defensive Matrix - Odin Bravo
            //--------------------------------------------------------------------------------------------------
            bool gt_DefensiveMatrixOdinBravo_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitIsAlive(UnitFromId(954621714)) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerExecute(gt_DefensiveMatrixMcKenzieWarning, true, false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(954621714), true);
                Wait(15.0, c_timeGame);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(954621714), false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DefensiveMatrixOdinBravo_Init () {
                gt_DefensiveMatrixOdinBravo = TriggerCreate(&quot;gt_DefensiveMatrixOdinBravo_Func&quot;);
                TriggerAddEventUnitAbility(gt_DefensiveMatrixOdinBravo, UnitRefFromUnit(UnitFromId(954621714)), AbilityCommand(&quot;DefensiveMatrixTerranzineHarvester&quot;, 0), c_unitAbilStageAll, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Defensive Matrix - McKenzie Warning
            //--------------------------------------------------------------------------------------------------
            bool gt_DefensiveMatrixMcKenzieWarning_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(1.5, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/BEEE348D&quot;));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DefensiveMatrixMcKenzieWarning_Init () {
                gt_DefensiveMatrixMcKenzieWarning = TriggerCreate(&quot;gt_DefensiveMatrixMcKenzieWarning_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Destroy Odins - Create
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryDestroyOdinsCreate_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                ObjectiveCreateForPlayers((StringExternal(&quot;Param/Value/60C5CBEA&quot;) + TextWithColor(StringExternal(&quot;Param/Value/301A84D7&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_Dead), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/718C0F18&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_MaxCount), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/6B0F77AC&quot;), Color(100.0, 100.0, 0.0))), StringExternal(&quot;Param/Value/A1C7338C&quot;), c_objectiveStateActive, true, PlayerGroupAll());
                gv_objective_Primary_DestroyOdins = ObjectiveLastCreated();
                SoundPlayForPlayer(SoundLink(&quot;UI_ObjectiveDiscoveredStinger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryDestroyOdinsCreate_Init () {
                gt_PrimaryDestroyOdinsCreate = TriggerCreate(&quot;gt_PrimaryDestroyOdinsCreate_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Odin Alpha Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryOdinAlphaDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_var_Odins_Dead += 1;
                ObjectiveSetName(gv_objective_Primary_DestroyOdins, (StringExternal(&quot;Param/Value/3EC385A3&quot;) + TextWithColor(StringExternal(&quot;Param/Value/A0BA0B27&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_Dead), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/F4DF962F&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_MaxCount), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/CFDE1F57&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(341160576), 30));
                UnitCreate(1, &quot;OdinAlphaWreckage&quot;, c_unitCreateIgnorePlacement, 3, UnitGetPosition(EventUnit()), UnitGetFacing(EventUnit()));
                RegionSetCenter(RegionFromId(13), UnitGetPosition(EventUnit()));
                VisRevealArea(1, RegionFromId(13), 0.0, true);
                VisRevealArea(2, RegionFromId(13), 0.0, true);
                if ((UnitIsAlive(UnitFromId(954621714)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/602061E0&quot;));
                    gv_camera_MissionComplete += 1;
                }
                else {
                    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, &quot;TRaynor03MusicOutro&quot;, c_soundtrackCueAny, c_soundtrackIndexAny, true);
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/2B53163D&quot;));
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryOdinAlphaDestroyed_Init () {
                gt_PrimaryOdinAlphaDestroyed = TriggerCreate(&quot;gt_PrimaryOdinAlphaDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_PrimaryOdinAlphaDestroyed, UnitRefFromUnit(UnitFromId(341160576)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Odin Bravo Destroyed
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryOdinBravoDestroyed_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_var_Odins_Dead += 1;
                ObjectiveSetName(gv_objective_Primary_DestroyOdins, (StringExternal(&quot;Param/Value/1106BAFA&quot;) + TextWithColor(StringExternal(&quot;Param/Value/7B7D9A6B&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_Dead), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/40972BF5&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(IntToText(gv_var_Odins_MaxCount), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/A4BBACE1&quot;), Color(100.0, 100.0, 0.0))));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(954621714), 31));
                UnitCreate(1, &quot;OdinBravoWreckage&quot;, c_unitCreateIgnorePlacement, 4, UnitGetPosition(EventUnit()), UnitGetFacing(EventUnit()));
                RegionSetCenter(RegionFromId(14), UnitGetPosition(EventUnit()));
                VisRevealArea(1, RegionFromId(14), 0.0, true);
                VisRevealArea(2, RegionFromId(14), 0.0, true);
                if ((UnitIsAlive(UnitFromId(341160576)) == true)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/0346CB4C&quot;));
                    gv_camera_MissionComplete += 2;
                }
                else {
                    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, &quot;TRaynor03MusicOutro&quot;, c_soundtrackCueAny, c_soundtrackIndexAny, true);
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 10.0, c_transmissionDurationAdd, false);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/023C6C60&quot;));
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryOdinBravoDestroyed_Init () {
                gt_PrimaryOdinBravoDestroyed = TriggerCreate(&quot;gt_PrimaryOdinBravoDestroyed_Func&quot;);
                TriggerAddEventUnitDied(gt_PrimaryOdinBravoDestroyed, UnitRefFromUnit(UnitFromId(954621714)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Primary - Destroy Odins - Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_PrimaryDestroyOdinsComplete_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_var_Odins_Dead == 2))) {
                        return false;
                    }
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(2.0, c_timeGame);
                ObjectiveSetState(gv_objective_Primary_DestroyOdins, c_objectiveStateCompleted);
                ObjectiveSetName(gv_objective_Primary_DestroyOdins, StringExternal(&quot;Param/Value/F6319B44&quot;));
                Wait(12.0, c_timeGame);
                libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Victory);
                UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
                VisRevealArea(1, RegionEntireMap(), 0.0, false);
                VisRevealArea(2, RegionEntireMap(), 0.0, false);
                if ((gv_camera_MissionComplete == 1)) {
                    CameraPan(1, RegionGetCenter(RegionFromId(14)), 3.0, -1, 20.0, false);
                    CameraPan(2, RegionGetCenter(RegionFromId(14)), 3.0, -1, 20.0, false);
                }
                else {
                    if ((gv_camera_MissionComplete == 2)) {
                        CameraPan(1, RegionGetCenter(RegionFromId(13)), 3.0, -1, 20.0, false);
                        CameraPan(2, RegionGetCenter(RegionFromId(13)), 3.0, -1, 20.0, false);
                    }
                }
                UIClearMessages(PlayerGroupAll(), c_messageAreaSubtitle);
                libNtve_gf_HideGameUI(false, PlayerGroupAll());
                UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
                UnitClearSelection(gv_pLAYER_01_USER);
                UnitClearSelection(gv_pLAYER_02_USER);
                libNtve_gf_ShowHideBossBar(false, 1);
                libNtve_gf_ShowHideBossBar(false, 2);
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 12.0, c_transmissionDurationAdd, false);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/A1B2FA9E&quot;));
                Wait(16.0, c_timeGame);
                GameOver(1, c_gameOverVictory, true, true);
                GameOver(2, c_gameOverVictory, true, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_PrimaryDestroyOdinsComplete_Init () {
                gt_PrimaryDestroyOdinsComplete = TriggerCreate(&quot;gt_PrimaryDestroyOdinsComplete_Func&quot;);
                TriggerAddEventTimePeriodic(gt_PrimaryDestroyOdinsComplete, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 1 - Create
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective1Create_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1705259572), false);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingTriangle&quot;, PointFromId(2119678182), ColorWithAlpha(100.00, 100.00, 0.00, 0.00), 7200.0, 90.0);
                PingSetScale(PingLastCreated(), 0.6);
                libHots_gf_StorePingForUnit(UnitFromId(1705259572), 20, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/CAB9E2EE&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(2119678182), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 5.0, 90.0);
                ObjectiveCreateForPlayers((StringExternal(&quot;Param/Value/9F7BB500&quot;) + StringExternal(&quot;Param/Value/A5FBC851&quot;)), StringExternal(&quot;Param/Value/1C518BF0&quot;), c_objectiveStateActive, false, PlayerGroupAll());
                gv_secondary_BonusObjective_1 = ObjectiveLastCreated();
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/C8F14395&quot;));
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 15.0, c_transmissionDurationAdd, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective1Create_Init () {
                gt_SecondaryBonusObjective1Create = TriggerCreate(&quot;gt_SecondaryBonusObjective1Create_Func&quot;);
                TriggerAddEventTimeElapsed(gt_SecondaryBonusObjective1Create, 525.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 1 - Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective1Complete_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                ObjectiveSetState(gv_secondary_BonusObjective_1, c_objectiveStateCompleted);
                ObjectiveSetName(gv_secondary_BonusObjective_1, (StringExternal(&quot;Param/Value/B85FD4A8&quot;) + StringExternal(&quot;Param/Value/5A770389&quot;)));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(1705259572), 20));
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/98FD4D1B&quot;));
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 13.0, c_transmissionDurationAdd, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective1Complete_Init () {
                gt_SecondaryBonusObjective1Complete = TriggerCreate(&quot;gt_SecondaryBonusObjective1Complete_Func&quot;);
                TriggerAddEventUnitDied(gt_SecondaryBonusObjective1Complete, UnitRefFromUnit(UnitFromId(1705259572)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 2 - Create
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective2Create_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingTriangle&quot;, PointFromId(1697705478), ColorWithAlpha(100.00, 100.00, 0.00, 0.00), 455.0, 90.0);
                PingSetScale(PingLastCreated(), 0.6);
                libHots_gf_StorePingForUnit(UnitFromId(319719901), 21, PingLastCreated());
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/400C33DE&quot;));
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1697705478), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 5.0, 90.0);
                ObjectiveCreateForPlayers((StringExternal(&quot;Param/Value/F273C316&quot;) + TextWithColor(StringExternal(&quot;Param/Value/8F44C157&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(TextTimeFormat(StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;), gv_clock_BonusObjective_2), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/1F011A65&quot;), Color(100.0, 100.0, 0.0)) + StringExternal(&quot;Param/Value/71CA7AE9&quot;)), StringExternal(&quot;Param/Value/68543804&quot;), c_objectiveStateActive, false, PlayerGroupAll());
                gv_secondary_BonusObjective_2 = ObjectiveLastCreated();
                TriggerExecute(gt_SecondaryBonusObjective2TimerCountdown, true, false);
                libNtve_gf_ShowHideUnit(UnitFromId(319719901), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(319719901), false);
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/8521B5DE&quot;));
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 15.0, c_transmissionDurationAdd, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective2Create_Init () {
                gt_SecondaryBonusObjective2Create = TriggerCreate(&quot;gt_SecondaryBonusObjective2Create_Func&quot;);
                TriggerAddEventTimeElapsed(gt_SecondaryBonusObjective2Create, 1035.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 2 - Timer Countdown
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective2TimerCountdown_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((GameGetMissionTime() &gt;= 1037.0))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_clock_BonusObjective_2 -= 1;
                ObjectiveSetName(gv_secondary_BonusObjective_2, (StringExternal(&quot;Param/Value/2708491C&quot;) + TextWithColor(StringExternal(&quot;Param/Value/76482C9A&quot;), Color(100.0, 100.0, 0.0)) + TextWithColor(TextTimeFormat(StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;), gv_clock_BonusObjective_2), Color(100.0, 100.0, 0.0)) + TextWithColor(StringExternal(&quot;Param/Value/E0CB1CB4&quot;), Color(100.0, 100.0, 0.0)) + StringExternal(&quot;Param/Value/F514771C&quot;)));
                if ((UnitIsAlive(UnitFromId(319719901)) == true) &amp;&amp; (gv_clock_BonusObjective_2 == 60)) {
                    Wait(2.0, c_timeGame);
                    SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/00662DA8&quot;));
                    libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 11.0, c_transmissionDurationAdd, false);
                }
                if ((gv_clock_BonusObjective_2 == 0)) {
                    TriggerExecute(gt_SecondaryBonusObjective2Failure, true, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective2TimerCountdown_Init () {
                gt_SecondaryBonusObjective2TimerCountdown = TriggerCreate(&quot;gt_SecondaryBonusObjective2TimerCountdown_Func&quot;);
                TriggerAddEventTimePeriodic(gt_SecondaryBonusObjective2TimerCountdown, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 2 - Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective2Complete_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_SecondaryBonusObjective2TimerCountdown, false);
                UnitBehaviorRemove(UnitFromId(319719901), &quot;ProgressBar&quot;, 1);
                UnitCreate(1, &quot;VespeneTankerWreckage&quot;, c_unitCreateIgnorePlacement, 3, UnitGetPosition(UnitFromId(319719901)), 0.0);
                ObjectiveSetState(gv_secondary_BonusObjective_2, c_objectiveStateCompleted);
                ObjectiveSetName(gv_secondary_BonusObjective_2, (StringExternal(&quot;Param/Value/E9723511&quot;) + StringExternal(&quot;Param/Value/57DAFDBF&quot;) + TextTimeFormat(StringToText(&quot;&lt;mintotal/&gt;:&lt;sec2/&gt;&quot;), gv_clock_BonusObjective_2) + StringExternal(&quot;Param/Value/22F35250&quot;) + StringExternal(&quot;Param/Value/BC1996DD&quot;)));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(319719901), 21));
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/6D720D15&quot;));
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 13.0, c_transmissionDurationAdd, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective2Complete_Init () {
                gt_SecondaryBonusObjective2Complete = TriggerCreate(&quot;gt_SecondaryBonusObjective2Complete_Func&quot;);
                TriggerAddEventUnitDied(gt_SecondaryBonusObjective2Complete, UnitRefFromUnit(UnitFromId(319719901)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Secondary - Bonus Objective 2 - Failure
            //--------------------------------------------------------------------------------------------------
            bool gt_SecondaryBonusObjective2Failure_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_SecondaryBonusObjective2TimerCountdown, false);
                UnitBehaviorRemove(UnitFromId(319719901), &quot;ProgressBar&quot;, 1);
                ObjectiveSetState(gv_secondary_BonusObjective_2, c_objectiveStateFailed);
                ObjectiveSetName(gv_secondary_BonusObjective_2, (StringExternal(&quot;Param/Value/0569DD17&quot;) + StringExternal(&quot;Param/Value/0A178DCE&quot;)));
                PingDestroy(libHots_gf_PingStoredForUnit(UnitFromId(319719901), 21));
                UnitRemove(UnitFromId(319719901));
                Wait(2.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal(&quot;Param/Value/B220AF1D&quot;));
                libNtve_gf_SendTransmissionSimple(TransmissionSourceFromModel(&quot;FemaleDominionOfficer1Portrait&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), null, 11.0, c_transmissionDurationAdd, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_SecondaryBonusObjective2Failure_Init () {
                gt_SecondaryBonusObjective2Failure = TriggerCreate(&quot;gt_SecondaryBonusObjective2Failure_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger Initialization
            //--------------------------------------------------------------------------------------------------
            void InitTriggers () {
                gt_Init01LoadData_Init();
                gt_Init02Players_Init();
                gt_Init03LoadingComplete_Init();
                gt_Init04Technology_Init();
                gt_Init05Units_Init();
                gt_Init06MusicSound_Init();
                gt_Init07Environment_Init();
                gt_Init08Difficulties_Init();
                gt_Init09MapSpecifics_Init();
                gt_StartGameQ_Init();
                gt_MessageStart_Init();
                gt_MessageMoebiusUnitWarning_Init();
                gt_MessageHalfWay_Init();
                gt_EncounterPredator_Init();
                gt_EncounterWarpDevice2A_Init();
                gt_EncounterTerminationBotA_Init();
                gt_EncounterTerminationBotB_Init();
                gt_EncounterLaserDrillTank_Init();
                gt_EncounterSkyMarshal_Init();
                gt_EncounterArchangel_Init();
                gt_PredatorUpgrades_Init();
                gt_SkyMarshal1_Init();
                gt_SkyMarshal2_Init();
                gt_SkyMarshal3_Init();
                gt_SkyMarshal4_Init();
                gt_UnitWarpInMcKenzieMessage_Init();
                gt_UnitWarp3AP1_Init();
                gt_UnitWarp3AP2_Init();
                gt_UnitWarp3BP1_Init();
                gt_UnitWarp3BP2_Init();
                gt_UnitWarp3CP1_Init();
                gt_UnitWarp3CP2_Init();
                gt_UnitWarp4ABP1_Init();
                gt_UnitWarp4ABP2_Init();
                gt_UnitWarp4CP1_Init();
                gt_UnitWarp4CP2_Init();
                gt_UnitWarp4DP1_Init();
                gt_UnitWarp4DP2_Init();
                gt_UnitWarp5ABP1_Init();
                gt_UnitWarp5ABP2_Init();
                gt_UnitWarp5CDP1_Init();
                gt_UnitWarp5CDP2_Init();
                gt_AbilitiesWarpDevice1_Init();
                gt_AbilitiesWarpDevice2A_Init();
                gt_AbilitiesWarpDevice2B_Init();
                gt_AbilitiesWarpDevice3A_Init();
                gt_AbilitiesWarpDevice3B_Init();
                gt_AbilitiesWarpDevice3C_Init();
                gt_AbilitiesWarpDevice4A_Init();
                gt_AbilitiesWarpDevice4B_Init();
                gt_AbilitiesWarpDevice4BLightingStorm_Init();
                gt_AbilitiesWarpDevice4C_Init();
                gt_AbilitiesWarpDevice4CLightingStorm_Init();
                gt_AbilitiesWarpDevice4D_Init();
                gt_AbilitiesWarpDevice5A_Init();
                gt_AbilitiesWarpDevice5B_Init();
                gt_AbilitiesWarpDevice5BLightingStorm_Init();
                gt_AbilitiesWarpDevice5C_Init();
                gt_AbilitiesWarpDevice5CLightingStorm_Init();
                gt_AbilitiesWarpDevice5D_Init();
                gt_UIMinimapAlert_Init();
                gt_WarpDevicePhase1Ping_Init();
                gt_WarpDevicePhase1Setup_Init();
                gt_WarpDevice1Destroyed_Init();
                gt_WarpDevice1Activated_Init();
                gt_DestroyTimerWindow1_Init();
                gt_WarpDevice1Device1WarpOut_Init();
                gt_WarpDevice1BulwarkCompanyWarpOut_Init();
                gt_WarpDevice1PhalanxSquadronWarpOut_Init();
                gt_WarpDevicePhase2Ping_Init();
                gt_WarpDevicePhase2Setup_Init();
                gt_WarpDevice2ADestroyed_Init();
                gt_WarpDevice2BDestroyed_Init();
                gt_DestroyTimerWindow2_Init();
                gt_WarpDevice2AActivated_Init();
                gt_WarpDevice2BActivated_Init();
                gt_WarpDevicesPhase2ABActivated_Init();
                gt_WarpDevice2ADevice2AWarpOut_Init();
                gt_WarpDevice2BDevice2BWarpOut_Init();
                gt_WarpDevice2ASkyFuryWarpOut_Init();
                gt_WarpDevice2BNightWolfWarpOut_Init();
                gt_WarpDevice2BWingedNightmareWarpOut_Init();
                gt_WarpDevicePhase3Ping_Init();
                gt_WarpDevicePhase3Setup_Init();
                gt_WarpDevice3ADestroyed_Init();
                gt_WarpDevice3BDestroyed_Init();
                gt_WarpDevice3CDestroyed_Init();
                gt_DestroyTimerWindow3_Init();
                gt_WarpDevice3AActivated_Init();
                gt_WarpDevice3BActivated_Init();
                gt_WarpDevice3CActivated_Init();
                gt_WarpDevicesPhase3ABActivated_Init();
                gt_WarpDevicesPhase3ACActivated_Init();
                gt_WarpDevicesPhase3BCActivated_Init();
                gt_WarpDevicesPhase3ABCActivated_Init();
                gt_WarpDevice3ADevice3AWarpOut_Init();
                gt_WarpDevice3BDevice3BWarpOut_Init();
                gt_WarpDevice3CDevice3CWarpOut_Init();
                gt_WarpDevice3AOutbackHunterWarpOut_Init();
                gt_WarpDevice3BRedAdderWarpOut_Init();
                gt_WarpDevice3CShockDivisionWarpOut_Init();
                gt_WarpDevicePhase4Ping_Init();
                gt_WarpDevicePhase4Setup_Init();
                gt_WarpDevice4ADestroyed_Init();
                gt_WarpDevice4BDestroyed_Init();
                gt_WarpDevice4CDestroyed_Init();
                gt_WarpDevice4DDestroyed_Init();
                gt_DestroyTimerWindow4_Init();
                gt_WarpDevice4AActivated_Init();
                gt_WarpDevice4BActivated_Init();
                gt_WarpDevice4CActivated_Init();
                gt_WarpDevice4DActivated_Init();
                gt_WarpDevicesPhase4ABCDActivated_Init();
                gt_WarpDevicesPhase4ABCActivated_Init();
                gt_WarpDevicesPhase4ABDActivated_Init();
                gt_WarpDevicesPhase4ACDActivated_Init();
                gt_WarpDevicesPhase4BCDActivated_Init();
                gt_WarpDevicesPhase4ABActivated_Init();
                gt_WarpDevicesPhase4ACActivated_Init();
                gt_WarpDevicesPhase4ADActivated_Init();
                gt_WarpDevicesPhase4BCActivated_Init();
                gt_WarpDevicesPhase4BDActivated_Init();
                gt_WarpDevicesPhase4CDActivated_Init();
                gt_WarpDevice4ADevice4AWarpOut_Init();
                gt_WarpDevice4BDevice4BWarpOut_Init();
                gt_WarpDevice4CDevice4CWarpOut_Init();
                gt_WarpDevice4DDevice4DWarpOut_Init();
                gt_WarpDevice4AHurricaneRegimentG1WarpOut_Init();
                gt_WarpDevice4BHurricaneRegimentG2WarpOut_Init();
                gt_WarpDevice4CBlackhammerG1WarpOut_Init();
                gt_WarpDevice4DBlackhammerG2WarpOut_Init();
                gt_WarpDevicePhase5Ping_Init();
                gt_WarpDevicePhase5Setup_Init();
                gt_WarpDevice5ADestroyed_Init();
                gt_WarpDevice5BDestroyed_Init();
                gt_WarpDevice5CDestroyed_Init();
                gt_WarpDevice5DDestroyed_Init();
                gt_DestroyTimerWindow5_Init();
                gt_WarpDevice5AActivated_Init();
                gt_WarpDevice5BActivated_Init();
                gt_WarpDevice5CActivated_Init();
                gt_WarpDevice5DActivated_Init();
                gt_WarpDevicesPhase5ABCDActivated_Init();
                gt_WarpDevicesPhase5ABCActivated_Init();
                gt_WarpDevicesPhase5ABDActivated_Init();
                gt_WarpDevicesPhase5ACDActivated_Init();
                gt_WarpDevicesPhase5BCDActivated_Init();
                gt_WarpDevicesPhase5ABActivated_Init();
                gt_WarpDevicesPhase5ACActivated_Init();
                gt_WarpDevicesPhase5ADActivated_Init();
                gt_WarpDevicesPhase5BCActivated_Init();
                gt_WarpDevicesPhase5BDActivated_Init();
                gt_WarpDevicesPhase5CDActivated_Init();
                gt_WarpDevice5ADevice5AWarpOut_Init();
                gt_WarpDevice5BDevice5BWarpOut_Init();
                gt_WarpDevice5CDevice5CWarpOut_Init();
                gt_WarpDevice5DDevice5DWarpOut_Init();
                gt_WarpDevice5APrideofAugustgrad1_Init();
                gt_WarpDevice5BPrideofAugustgrad2_Init();
                gt_WarpDevice5CPrideofAugustgrad3_Init();
                gt_WarpDevice5DPrideofAugustgrad4_Init();
                gt_EnemyAttackingQ_Init();
                gt_Defeat_Init();
                gt_StartAI_Init();
                gt_SetupAttackWaveSpawn_Init();
                gt_AIAttackWaves_Init();
                gt_AttackWave01_Init();
                gt_AttackWave02_Init();
                gt_AttackWave03_Init();
                gt_AttackWave04_Init();
                gt_AttackWave05_Init();
                gt_AttackWave06_Init();
                gt_AttackWave07_Init();
                gt_PrimaryDestroyWarpDevicesCreate_Init();
                gt_PrimaryDestroyWarpDevicesComplete_Init();
                gt_PrimaryWarpDevicesActivatedCreate_Init();
                gt_PrimaryWarpDevicesActivatedMissionFailure_Init();
                gt_BossFightInterlude_Init();
                gt_OdinsEntertheMap_Init();
                gt_OdinsMovetoAttack_Init();
                gt_OdinBossBars_Init();
                gt_DefensiveMatrixOdinAlpha_Init();
                gt_DefensiveMatrixOdinBravo_Init();
                gt_DefensiveMatrixMcKenzieWarning_Init();
                gt_PrimaryDestroyOdinsCreate_Init();
                gt_PrimaryOdinAlphaDestroyed_Init();
                gt_PrimaryOdinBravoDestroyed_Init();
                gt_PrimaryDestroyOdinsComplete_Init();
                gt_SecondaryBonusObjective1Create_Init();
                gt_SecondaryBonusObjective1Complete_Init();
                gt_SecondaryBonusObjective2Create_Init();
                gt_SecondaryBonusObjective2TimerCountdown_Init();
                gt_SecondaryBonusObjective2Complete_Init();
                gt_SecondaryBonusObjective2Failure_Init();
            }
            //--------------------------------------------------------------------------------------------------
            // Map Initialization
            //--------------------------------------------------------------------------------------------------
            void run () {
                InitLibs();
                InitGlobals();
                InitCustomAI();
                InitTriggers();
            }
        </ScriptCode>
        <InitFunc>run</InitFunc>
    </Element>
</TriggerData>
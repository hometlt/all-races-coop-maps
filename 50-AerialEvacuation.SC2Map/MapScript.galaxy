//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Aerial Evacuation
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/SwarmLib"
include "LibCOMI"
include "aiF917F4D7"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libHots_InitLib();
    libCOMI_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_pLAYER_01_USER = 1;
const int gv_pLAYER_02_USER = 2;
const int gv_pLAYER_03_ENEMY = 3;
const int gv_pLAYER_04_ENEMY = 4;
const int gv_eNEMY_BASE_COUNT = 10;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
playergroup gv_enemyGroup;
timer gv_objectiveTimer;
unitfilter gv_vICTORY_REQUIREMENT;
int[11] gv_enemyBaseObjectiveMarkers;
int gv_remainingStructureCount;
point gv_victoryCompletePan;
point gv_attackWaveA_Wave05Path;
region[3][11] gv_attackSpawn;
int gv_objectiveDestroyTheEnemyBase;
int gv_objectivePreventTimerExpire;
int gv_queue;
int gv_pos;
int[3] gv_bonusObjective;
int gv_bonusRand1;
int gv_bonusRand2;
int[3] gv_bonusPing;
unitgroup[3] gv_bonusUnitGroup;
int gv_enemyStrengthInc;
int gv__4th2ndPath;
point[3] gv_player1Point;
point[3] gv_player2Point;
int gv_transportObjective;
int gv_facilityObjective;
unit[4] gv_transport;
bool[6] gv_transmissionCalled;
unit gv_facility;
point[7][11][11] gv_transportPaths;
unit[7][11] gv_transportTarget;
int[7][11] gv_pathAmount;
int gv_civiliansEvacuated;
int gv_civiliansLost;
point[4] gv_transportRows;
int gv_transportCount;
int gv_ambushCount;

void InitGlobals () {
    int init_i;
    int init_j;

    gv_enemyGroup = PlayerGroupEmpty();
    gv_objectiveTimer = TimerCreate();
    gv_vICTORY_REQUIREMENT = UnitFilter((1 << c_targetFilterStructure) | (1 << c_targetFilterPreventDefeat), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)));
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_enemyBaseObjectiveMarkers[init_i] = c_invalidPingId;
    }
    gv_objectiveDestroyTheEnemyBase = c_invalidObjectiveId;
    gv_objectivePreventTimerExpire = c_invalidObjectiveId;
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonusObjective[init_i] = c_invalidObjectiveId;
    }
    gv_bonusRand1 = RandomInt(1, 2);
    gv_bonusRand2 = 1;
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonusPing[init_i] = c_invalidPingId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_bonusUnitGroup[init_i] = UnitGroupEmpty();
    }
    gv_transportObjective = c_invalidObjectiveId;
    gv_facilityObjective = c_invalidObjectiveId;
    gv_facility = UnitFromId(1971132984);
    for (init_i = 0; init_i <= 6; init_i += 1) {
        for (init_j = 0; init_j <= 10; init_j += 1) {
            gv_pathAmount[init_i][init_j] = 4;
        }
    }
    gv_transportCount = 1;
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime);
point gf_AttackWaveSpawn ();
void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time);
void gf_SetPathPoints ();
void gf_CompletedTransmission ();
void gf_TransportDirection (unit lp_transport, unit lp_targetUnit, int lp_pathWave, int lp_pathWaveTar, point lp_transportRow, color lp_color);
void gf_AttackonTransport (int lp_resourceBucket, int lp_techBucket, point lp_spawnPoint, unit lp_attackTarget);
void gf_TransportAmbushSwitches (unit lp_transport, int lp_pathWave, int lp_pathWaveTar, int lp_pathPoint);
void gf_TransportAmbushUnloading (unit lp_transport, int lp_pathWave, int lp_pathWaveTar, int lp_pathPoint);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Init01LoadData;
trigger gt_Init02Players;
trigger gt_Init03LoadingComplete;
trigger gt_Init04Technology;
trigger gt_Init05Units;
trigger gt_Init06MusicSound;
trigger gt_Init07Environment;
trigger gt_Init08Difficulties;
trigger gt_DebugCantFail;
trigger gt_EnemyAttackingQ;
trigger gt_DefeatBaseDead;
trigger gt_VictoryPrimaryObjectiveComplete;
trigger gt_VictorySequence;
trigger gt_VictoryFanfareQ;
trigger gt_Victory;
trigger gt_Defeat;
trigger gt_StartAI;
trigger gt_SetupAttackWaveSpawn;
trigger gt_AIAttackWaves;
trigger gt_AttackWave01;
trigger gt_AttackWave02;
trigger gt_AttackWave03;
trigger gt_AttackWave04;
trigger gt_AttackWave05;
trigger gt_AttackWave06;
trigger gt_AttackWave07;
trigger gt_MeleeInitialization;
trigger gt_TransmissionBonusObjectiveStart;
trigger gt_TransmissionBonusObjective11Start;
trigger gt_TransmissionBonusObjective12Start;
trigger gt_TransmissionBonusObjective21Start;
trigger gt_TransmissionBonusObjective22Start;
trigger gt_TransmissionBonusObjectiveComplete;
trigger gt_TransmissionMajorAttack;
trigger gt_TransmissionTransport1;
trigger gt_TransmissionTransport2;
trigger gt_TransmissionTransport3;
trigger gt_TransmissionTransport4;
trigger gt_TransmissionTransport5;
trigger gt_TransmissionTransport6;
trigger gt_TransmissionFacilityEmptied;
trigger gt_TransmissionFirstTransportUnloaded;
trigger gt_TransmissionTransportUnloaded;
trigger gt_TransmissionTransportPartiallyUnloaded;
trigger gt_TransmissionTransportUnloadedThenDestroyed;
trigger gt_TransmissionVictory;
trigger gt_TransmissionTransportLost;
trigger gt_TransmissionTransportLostDefeat;
trigger gt_TransmissionScienceFacilityDefeat;
trigger gt_StartBonusManually1;
trigger gt_StartBonusManually2;
trigger gt_BonusObjecteve12;
trigger gt_BonusObjecteve34;
trigger gt_CheckForBonusCompletion1;
trigger gt_CheckForBonusCompletion2;
trigger gt_FacilityUnderFire;
trigger gt_AttacksonFacilityHardBrut;
trigger gt_AttacksonFacilityCasNorm;
trigger gt_MajorAttackOnFacility;
trigger gt_TransportUnderFire;
trigger gt_Transport1;
trigger gt_Transport2;
trigger gt_Transport3;
trigger gt_Transport41;
trigger gt_Transport42;
trigger gt_Transport51;
trigger gt_Transport52;
trigger gt_Transport53;
trigger gt_Transport6;
trigger gt_DefeatObjectiveLost;

//--------------------------------------------------------------------------------------------------
// Custom AI Functions
//--------------------------------------------------------------------------------------------------
string[17] cai_playerAI;

//--------------------------------------------------------------------------------------------------
void InitCustomAI () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        cai_playerAI[init_i] = null;
    }
}

//--------------------------------------------------------------------------------------------------
void cai_start (string ai, int p) {
    if (p < 0 || p >= 16) {
        return;
    }
    cai_playerAI[p] = ai;

    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_start(p); }
}

//--------------------------------------------------------------------------------------------------
void cai_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_setDefGather(p, val); }
}

//--------------------------------------------------------------------------------------------------
string cai_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_getCustomData(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_getLastWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_waves_run (int p, playergroup target) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_waves_run(p, target); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_waves_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_stop (string ai) {
    if (ai == "aiF917F4D7") { aiF917F4D7_waves_stop(); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_run (int w, int p, playergroup target, bool wait) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_wave_run(w, p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_enable (int w, int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { aiF917F4D7_wave_enable(w, p, val); }
}

//--------------------------------------------------------------------------------------------------
bool cai_wave_isEnabled (int w, int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_isEnabled(w, p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup cai_wave_createdUnits (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_createdUnits(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_wave_createdWave (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "aiF917F4D7") { return aiF917F4D7_wave_createdWave(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_startall () {
    cai_start("aiF917F4D7", 7);
    AICampaignStart(3);
    AICampaignStart(4);
}

//--------------------------------------------------------------------------------------------------
void cai_runall () {
    playergroup target = PlayerGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
trigger auto_gf_RunMissionEvent_Trigger = null;
trigger auto_gf_RunMissionEvent_lp_missionEventTrigger;
fixed auto_gf_RunMissionEvent_lp_missionEventTime;

void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime) {
    auto_gf_RunMissionEvent_lp_missionEventTrigger = lp_missionEventTrigger;
    auto_gf_RunMissionEvent_lp_missionEventTime = lp_missionEventTime;

    if (auto_gf_RunMissionEvent_Trigger == null) {
        auto_gf_RunMissionEvent_Trigger = TriggerCreate("auto_gf_RunMissionEvent_TriggerFunc");
    }

    TriggerExecute(auto_gf_RunMissionEvent_Trigger, false, false);
}

bool auto_gf_RunMissionEvent_TriggerFunc (bool testConds, bool runActions) {
    trigger lp_missionEventTrigger = auto_gf_RunMissionEvent_lp_missionEventTrigger;
    fixed lp_missionEventTime = auto_gf_RunMissionEvent_lp_missionEventTime;

    // Automatic Variable Declarations
    // Implementation
    while (!((GameGetMissionTime() >= lp_missionEventTime))) {
        Wait(0.5, c_timeAI);
    }
    if ((libCOMI_gf_GameIsOver() == false)) {
        TriggerExecute(lp_missionEventTrigger, true, false);
    }

    return true;
}

point gf_AttackWaveSpawn () {
    // Variable Declarations
    int lv_mapSide;
    int lv_spawnLocationIter;

    // Automatic Variable Declarations
    const int auto9A2E02E3_ae = 10;
    const int auto9A2E02E3_ai = 1;

    // Variable Initialization

    // Implementation
    lv_mapSide = RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER);
    lv_spawnLocationIter = 1;
    for ( ; ( (auto9A2E02E3_ai >= 0 && lv_spawnLocationIter <= auto9A2E02E3_ae) || (auto9A2E02E3_ai < 0 && lv_spawnLocationIter >= auto9A2E02E3_ae) ) ; lv_spawnLocationIter += auto9A2E02E3_ai ) {
        if ((UnitGroupCount(UnitGroupAlliance(gv_pLAYER_01_USER, c_unitAllianceEnemy, gv_attackSpawn[lv_mapSide][lv_spawnLocationIter], UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) > RandomInt(2, 5))) {
            return RegionGetCenter(gv_attackSpawn[lv_mapSide][lv_spawnLocationIter]);
        }

    }
    return RegionGetCenter(RegionFromId(9));
}

trigger auto_gf_RunAttackWaveatMissionTime_Trigger = null;
trigger auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
fixed auto_gf_RunAttackWaveatMissionTime_lp_time;

void gf_RunAttackWaveatMissionTime (trigger lp_attackWave, fixed lp_time) {
    auto_gf_RunAttackWaveatMissionTime_lp_attackWave = lp_attackWave;
    auto_gf_RunAttackWaveatMissionTime_lp_time = lp_time;

    if (auto_gf_RunAttackWaveatMissionTime_Trigger == null) {
        auto_gf_RunAttackWaveatMissionTime_Trigger = TriggerCreate("auto_gf_RunAttackWaveatMissionTime_TriggerFunc");
    }

    TriggerExecute(auto_gf_RunAttackWaveatMissionTime_Trigger, false, false);
}

bool auto_gf_RunAttackWaveatMissionTime_TriggerFunc (bool testConds, bool runActions) {
    trigger lp_attackWave = auto_gf_RunAttackWaveatMissionTime_lp_attackWave;
    fixed lp_time = auto_gf_RunAttackWaveatMissionTime_lp_time;

    // Automatic Variable Declarations
    // Implementation
    while (!((lp_time <= GameGetMissionTime()))) {
        Wait(0.3, c_timeAI);
    }
    if ((libCOMI_gf_GameIsOver() == false)) {
        TriggerExecute(lp_attackWave, true, false);
    }

    return true;
}

void gf_SetPathPoints () {
    // Automatic Variable Declarations
    // Implementation
    gv_transportRows[1] = PointFromId(1191736319);
    gv_transportRows[2] = PointFromId(1983715174);
    gv_transportRows[3] = PointFromId(60835976);
    gv_transportPaths[1][1][1] = PointFromId(1260383120);
    gv_transportPaths[1][1][2] = PointFromId(564417335);
    gv_transportPaths[1][1][3] = PointFromId(395741655);
    gv_transportPaths[1][1][4] = PointFromId(1746714709);
    gv_transportTarget[1][1] = UnitFromId(1431954343);
    gv_pathAmount[1][1] = 4;
    gv_transportPaths[2][1][1] = PointFromId(485859719);
    gv_transportPaths[2][1][2] = PointFromId(857245621);
    gv_transportPaths[2][1][3] = PointFromId(1705981402);
    gv_transportPaths[2][1][4] = PointFromId(1607444809);
    gv_transportPaths[2][1][5] = PointFromId(1717026497);
    gv_transportPaths[2][1][6] = PointFromId(263327666);
    gv_transportPaths[2][1][7] = PointFromId(193752813);
    gv_transportPaths[2][1][8] = PointFromId(254382560);
    gv_transportPaths[2][1][9] = PointFromId(91143611);
    gv_pathAmount[2][1] = 9;
    gv_transportTarget[2][1] = UnitFromId(503518624);
    gv_transportPaths[2][2][1] = PointFromId(1155501109);
    gv_transportPaths[2][2][2] = PointFromId(543786307);
    gv_transportPaths[2][2][3] = PointFromId(669877453);
    gv_transportPaths[2][2][4] = PointFromId(1853387682);
    gv_transportPaths[2][2][5] = PointFromId(134338094);
    gv_transportPaths[2][2][6] = PointFromId(1213441430);
    gv_transportPaths[2][2][7] = PointFromId(2028564254);
    gv_pathAmount[2][2] = 7;
    gv_transportTarget[2][2] = UnitFromId(954056424);
    gv_transportPaths[2][3][1] = PointFromId(485859719);
    gv_transportPaths[2][3][2] = PointFromId(857245621);
    gv_transportPaths[2][3][3] = PointFromId(1705981402);
    gv_transportPaths[2][3][4] = PointFromId(1607444809);
    gv_transportPaths[2][3][5] = PointFromId(1717026497);
    gv_transportPaths[2][3][6] = PointFromId(134338094);
    gv_transportPaths[2][3][7] = PointFromId(1213441430);
    gv_transportPaths[2][3][8] = PointFromId(2028564254);
    gv_pathAmount[2][3] = 8;
    gv_transportTarget[2][3] = UnitFromId(954056424);
    gv_transportPaths[3][1][1] = PointFromId(729195169);
    gv_transportPaths[3][1][2] = PointFromId(1546941183);
    gv_transportPaths[3][1][3] = PointFromId(1373550623);
    gv_transportPaths[3][1][4] = PointFromId(2135236368);
    gv_transportPaths[3][1][5] = PointFromId(2014393032);
    gv_transportPaths[3][1][6] = PointFromId(962641323);
    gv_transportPaths[3][1][7] = PointFromId(1453650902);
    gv_pathAmount[3][1] = 7;
    gv_transportTarget[3][1] = UnitFromId(1045275221);
    gv_transportPaths[3][2][1] = PointFromId(210021011);
    gv_transportPaths[3][2][2] = PointFromId(2068948958);
    gv_transportPaths[3][2][3] = PointFromId(1916239132);
    gv_transportPaths[3][2][4] = PointFromId(60448973);
    gv_transportPaths[3][2][5] = PointFromId(851997600);
    gv_transportPaths[3][2][6] = PointFromId(2094311201);
    gv_transportPaths[3][2][7] = PointFromId(645871123);
    gv_pathAmount[3][2] = 7;
    gv_transportTarget[3][2] = UnitFromId(965746327);
    gv_transportPaths[3][3][1] = PointFromId(1655704641);
    gv_transportPaths[3][3][2] = PointFromId(1565344250);
    gv_transportPaths[3][3][3] = PointFromId(746885003);
    gv_transportPaths[3][3][4] = PointFromId(1791879144);
    gv_transportPaths[3][3][5] = PointFromId(1524925075);
    gv_transportPaths[3][3][6] = PointFromId(61684541);
    gv_transportPaths[3][3][7] = PointFromId(1921621880);
    gv_pathAmount[3][3] = 7;
    gv_transportTarget[3][3] = UnitFromId(1568498445);
    gv_transportPaths[4][1][1] = PointFromId(1571783347);
    gv_transportPaths[4][1][2] = PointFromId(1841335215);
    gv_transportPaths[4][1][3] = PointFromId(429190545);
    gv_transportPaths[4][1][4] = PointFromId(570667534);
    gv_transportPaths[4][1][5] = PointFromId(1130976168);
    gv_transportPaths[4][1][6] = PointFromId(1858864102);
    gv_transportPaths[4][1][7] = PointFromId(927604961);
    gv_transportPaths[4][1][8] = PointFromId(1963166834);
    gv_transportPaths[4][1][9] = PointFromId(1769782547);
    gv_pathAmount[4][1] = 9;
    gv_transportTarget[4][1] = UnitFromId(931118191);
    gv_transportPaths[4][2][1] = PointFromId(526616517);
    gv_transportPaths[4][2][2] = PointFromId(961870804);
    gv_transportPaths[4][2][3] = PointFromId(1951713877);
    gv_transportPaths[4][2][4] = PointFromId(391981282);
    gv_transportPaths[4][2][5] = PointFromId(1483952548);
    gv_transportPaths[4][2][6] = PointFromId(1302133358);
    gv_transportPaths[4][2][7] = PointFromId(1410128463);
    gv_transportPaths[4][2][8] = PointFromId(1121191195);
    gv_pathAmount[4][2] = 8;
    gv_transportTarget[4][2] = UnitFromId(689786988);
    gv_transportPaths[4][3][1] = PointFromId(1618751342);
    gv_transportPaths[4][3][2] = PointFromId(1955124728);
    gv_transportPaths[4][3][3] = PointFromId(2044018543);
    gv_transportPaths[4][3][4] = PointFromId(285122313);
    gv_transportPaths[4][3][5] = PointFromId(1156118485);
    gv_transportPaths[4][3][6] = PointFromId(308596110);
    gv_transportPaths[4][3][7] = PointFromId(292994292);
    gv_transportPaths[4][3][8] = PointFromId(127317463);
    gv_pathAmount[4][3] = 8;
    gv_transportTarget[4][3] = UnitFromId(1541425488);
    gv_transportPaths[4][4][1] = PointFromId(748420948);
    gv_transportPaths[4][4][2] = PointFromId(814100306);
    gv_transportPaths[4][4][3] = PointFromId(303681766);
    gv_transportPaths[4][4][4] = PointFromId(2089229865);
    gv_transportPaths[4][4][5] = PointFromId(1451047120);
    gv_transportPaths[4][4][6] = PointFromId(940217981);
    gv_transportPaths[4][4][7] = PointFromId(1226222275);
    gv_transportPaths[4][4][8] = PointFromId(340513393);
    gv_pathAmount[4][4] = 8;
    gv_transportTarget[4][4] = UnitFromId(1340986169);
    gv_transportPaths[5][1][1] = PointFromId(97953923);
    gv_transportPaths[5][1][2] = PointFromId(1971941980);
    gv_transportPaths[5][1][3] = PointFromId(315075489);
    gv_transportPaths[5][1][4] = PointFromId(77697474);
    gv_transportPaths[5][1][5] = PointFromId(92591940);
    gv_transportPaths[5][1][6] = PointFromId(1545409877);
    gv_transportPaths[5][1][7] = PointFromId(1061856406);
    gv_transportPaths[5][1][8] = PointFromId(23156388);
    gv_transportPaths[5][1][9] = PointFromId(1631293772);
    gv_pathAmount[5][1] = 9;
    gv_transportTarget[5][1] = UnitFromId(1953778308);
    gv_transportPaths[5][2][1] = PointFromId(264938404);
    gv_transportPaths[5][2][2] = PointFromId(1014413357);
    gv_transportPaths[5][2][3] = PointFromId(588203252);
    gv_transportPaths[5][2][4] = PointFromId(2079175082);
    gv_transportPaths[5][2][5] = PointFromId(443845359);
    gv_transportPaths[5][2][6] = PointFromId(42713912);
    gv_transportPaths[5][2][7] = PointFromId(770808362);
    gv_transportPaths[5][2][8] = PointFromId(65988187);
    gv_transportPaths[5][2][9] = PointFromId(736953674);
    gv_pathAmount[5][2] = 9;
    gv_transportTarget[5][2] = UnitFromId(1653831335);
    gv_transportPaths[5][3][1] = PointFromId(277842185);
    gv_transportPaths[5][3][2] = PointFromId(1907556439);
    gv_transportPaths[5][3][3] = PointFromId(2128583393);
    gv_transportPaths[5][3][4] = PointFromId(1568134952);
    gv_transportPaths[5][3][5] = PointFromId(1484977767);
    gv_transportPaths[5][3][6] = PointFromId(1995519289);
    gv_transportPaths[5][3][7] = PointFromId(1903062399);
    gv_transportPaths[5][3][8] = PointFromId(1627119847);
    gv_transportPaths[5][3][9] = PointFromId(152833457);
    gv_transportPaths[5][3][10] = PointFromId(788006462);
    gv_pathAmount[5][3] = 10;
    gv_transportTarget[5][3] = UnitFromId(1934010384);
    gv_transportPaths[5][4][1] = PointFromId(174156346);
    gv_transportPaths[5][4][2] = PointFromId(1440056710);
    gv_transportPaths[5][4][3] = PointFromId(914583999);
    gv_transportPaths[5][4][4] = PointFromId(154473076);
    gv_transportPaths[5][4][5] = PointFromId(22113275);
    gv_transportPaths[5][4][6] = PointFromId(1269459375);
    gv_transportPaths[5][4][7] = PointFromId(213868091);
    gv_transportPaths[5][4][8] = PointFromId(1536070375);
    gv_transportPaths[5][4][9] = PointFromId(1304512214);
    gv_transportPaths[5][4][10] = PointFromId(314446656);
    gv_pathAmount[5][4] = 10;
    gv_transportTarget[5][4] = UnitFromId(1969756685);
    gv_transportPaths[5][5][1] = PointFromId(2079062720);
    gv_transportPaths[5][5][2] = PointFromId(2119840727);
    gv_transportPaths[5][5][3] = PointFromId(1821317336);
    gv_transportPaths[5][5][4] = PointFromId(1857562362);
    gv_transportPaths[5][5][5] = PointFromId(884050715);
    gv_transportPaths[5][5][6] = PointFromId(1106152113);
    gv_transportPaths[5][5][7] = PointFromId(14800067);
    gv_transportPaths[5][5][8] = PointFromId(1413266118);
    gv_transportPaths[5][5][9] = PointFromId(395521208);
    gv_transportPaths[5][5][10] = PointFromId(1622769769);
    gv_pathAmount[5][5] = 10;
    gv_transportTarget[5][5] = UnitFromId(869496268);
    gv_transportPaths[6][1][1] = PointFromId(1931025901);
    gv_transportPaths[6][1][2] = PointFromId(1490309053);
    gv_transportPaths[6][1][3] = PointFromId(445172089);
    gv_transportPaths[6][1][4] = PointFromId(1985728733);
    gv_transportPaths[6][1][5] = PointFromId(877113288);
    gv_transportPaths[6][1][6] = PointFromId(1970388496);
    gv_transportPaths[6][1][7] = PointFromId(497510265);
    gv_transportPaths[6][1][8] = PointFromId(437077679);
    gv_transportPaths[6][1][9] = PointFromId(2146593146);
    gv_transportPaths[6][1][10] = PointFromId(1641304499);
    gv_transportTarget[6][1] = UnitFromId(1229104542);
    gv_pathAmount[6][1] = 10;
}

void gf_CompletedTransmission () {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    int auto173690B4_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 4);

    // Implementation
    auto173690B4_val = lv_rand;
    if (auto173690B4_val == 1) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C472A618"), StringExternal("Param/Value/6C4DF659"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else if (auto173690B4_val == 2) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/20FA855A"), StringExternal("Param/Value/2DC6B9EB"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else if (auto173690B4_val == 3) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/33A56FAD"), StringExternal("Param/Value/195D8A38"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else if (auto173690B4_val == 4) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8EFEDA5F"), StringExternal("Param/Value/3B448FEE"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else {
    }
}

void gf_TransportDirection (unit lp_transport, unit lp_targetUnit, int lp_pathWave, int lp_pathWaveTar, point lp_transportRow, color lp_color) {
    int init_i;

    // Variable Declarations
    int lv_rand;
    int lv_rand2;
    int lv_waypoints;
    int[5] lv_objectiveMarkers;
    int lv_pathPoint;
    int lv_int;

    // Automatic Variable Declarations
    const int auto77831DFB_ae = 25;
    const int auto77831DFB_ai = 1;
    int auto00448CF3_ae;
    const int auto00448CF3_ai = 1;
    const int auto05A23B1A_ae = 1;
    const int auto05A23B1A_ai = -1;
    int autoE87E3166_ae;
    const int autoE87E3166_ai = 1;
    int auto33A5700C_ae;
    const int auto33A5700C_ai = -1;

    // Variable Initialization
    lv_rand = RandomInt(1, 2);
    lv_rand2 = RandomInt(1, 2);
    for (init_i = 0; init_i <= 4; init_i += 1) {
        lv_objectiveMarkers[init_i] = c_invalidPingId;
    }
    lv_pathPoint = 1;
    lv_int = 1;

    // Implementation
    VisExploreArea(1, RegionCircle(UnitGetPosition(lp_targetUnit), 3.0), true, false);
    VisExploreArea(2, RegionCircle(UnitGetPosition(lp_targetUnit), 3.0), true, false);
    PathCreateForUnit(PlayerGroupAll(), lp_transport);
    lv_waypoints = PathLastCreated();
    PathSetColor(lv_waypoints, c_pathLocationWorld, lp_color);
    PathSetLineWidth(lv_waypoints, c_pathLocationWorld, 1.5);
    libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingSimple", UnitGetPosition(lp_transport), lp_color, 0.0);
    lv_objectiveMarkers[3] = PingLastCreated();
    PingSetUnit(lv_objectiveMarkers[3], lp_transport);
    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, UnitGetPosition(lp_targetUnit), StringExternal("Param/Value/22B054D3"));
    lv_objectiveMarkers[1] = PingLastCreated();
    libCOMI_gf_CreateObjectivePingAC(libCOMI_ge_ObjectivePingType_Primary, UnitGetPosition(lp_transport), StringExternal("Param/Value/8A99944E"));
    lv_objectiveMarkers[2] = PingLastCreated();
    PingSetUnit(lv_objectiveMarkers[2], lp_transport);
    UnitIssueOrder(lp_transport, OrderTargetingPoint(AbilityCommand("move", 0), lp_transportRow), c_orderQueueReplace);
    while (!((((libNtve_gf_UnitInRegion(lp_transport, RegionCircle(lp_transportRow, 1.0)) == true) && (UnitIsAlive(lp_transport) == true)) || (UnitIsAlive(lp_transport) == false)))) {
        Wait(0.5, c_timeGame);
    }
    if ((UnitIsAlive(lp_transport) == true)) {
        UnitIssueOrder(lp_transport, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1299823556)), c_orderQueueReplace);
        while (!((((libNtve_gf_UnitInRegion(lp_transport, RegionCircle(PointFromId(1299823556), 1.0)) == true) && (UnitIsAlive(lp_transport) == true)) || (UnitIsAlive(lp_transport) == false)))) {
            Wait(0.5, c_timeGame);
        }
    }

    if ((UnitIsAlive(lp_transport) == true)) {
        UnitSetFacing(lp_transport, 45.0, 1.0);
        Wait(1.0, c_timeGame);
        UnitIssueOrder(lp_transport, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        lv_int = 1;
        for ( ; ( (auto77831DFB_ai >= 0 && lv_int <= auto77831DFB_ae) || (auto77831DFB_ai < 0 && lv_int >= auto77831DFB_ae) ) ; lv_int += auto77831DFB_ai ) {
            UnitCreate(1, "Civilian", c_unitCreateIgnorePlacement, 5, PointWithOffset(UnitGetPosition(gv_facility), 0.0, RandomFixed(-0.7, 0.7)), 180.0);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(null, lp_transport), c_orderQueueReplace);
            Wait(0.15, c_timeGame);
            UnitCreate(1, "CivilianFemale", c_unitCreateIgnorePlacement, 5, PointWithOffset(UnitGetPosition(gv_facility), 0.0, RandomFixed(-0.7, 0.7)), 180.0);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(null, lp_transport), c_orderQueueReplace);
            Wait(0.15, c_timeGame);
        }
        while (!(((UnitIsAlive(lp_transport) != true) || (UnitGroupCount(UnitCargoGroup(lp_transport), c_unitCountAlive) == 50)))) {
            Wait(1.0, c_timeGame);
        }
        auto00448CF3_ae = gv_pathAmount[lp_pathWave][lp_pathWaveTar];
        lv_int = 1;
        for ( ; ( (auto00448CF3_ai >= 0 && lv_int <= auto00448CF3_ae) || (auto00448CF3_ai < 0 && lv_int >= auto00448CF3_ae) ) ; lv_int += auto00448CF3_ai ) {
            PathAddWayPoint(lv_waypoints, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_int]);
        }
        lv_int = gv_pathAmount[lp_pathWave][lp_pathWaveTar];
        for ( ; ( (auto05A23B1A_ai >= 0 && lv_int <= auto05A23B1A_ae) || (auto05A23B1A_ai < 0 && lv_int >= auto05A23B1A_ae) ) ; lv_int += auto05A23B1A_ai ) {
            PathAddWayPoint(lv_waypoints, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_int]);
        }
        if ((gv_transportCount == 9)) {
            TriggerExecute(gt_TransmissionFacilityEmptied, true, false);
            ObjectiveSetState(gv_facilityObjective, c_objectiveStateCompleted);
            libNtve_gf_ShowHideBossBar(false, 1);
            TriggerEnable(gt_FacilityUnderFire, false);
        }

        UnitIssueOrder(lp_transport, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(928124697)), c_orderQueueReplace);
        while (!((((libNtve_gf_UnitInRegion(lp_transport, RegionCircle(PointFromId(928124697), 1.5)) == true) && (UnitIsAlive(lp_transport) == true)) || (UnitIsAlive(lp_transport) == false)))) {
            Wait(0.5, c_timeGame);
        }
        while ((UnitIsAlive(lp_transport) == true) && (lv_pathPoint <= gv_pathAmount[lp_pathWave][lp_pathWaveTar])) {
            UnitIssueOrder(lp_transport, OrderTargetingPoint(AbilityCommand("move", 0), gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_pathPoint]), c_orderQueueReplace);
            PathClearWayPoints(lv_waypoints);
            autoE87E3166_ae = gv_pathAmount[lp_pathWave][lp_pathWaveTar];
            lv_int = lv_pathPoint;
            for ( ; ( (autoE87E3166_ai >= 0 && lv_int <= autoE87E3166_ae) || (autoE87E3166_ai < 0 && lv_int >= autoE87E3166_ae) ) ; lv_int += autoE87E3166_ai ) {
                PathAddWayPoint(lv_waypoints, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_int]);
            }
            auto33A5700C_ae = lv_pathPoint;
            lv_int = gv_pathAmount[lp_pathWave][lp_pathWaveTar];
            for ( ; ( (auto33A5700C_ai >= 0 && lv_int <= auto33A5700C_ae) || (auto33A5700C_ai < 0 && lv_int >= auto33A5700C_ae) ) ; lv_int += auto33A5700C_ai ) {
                PathAddWayPoint(lv_waypoints, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_int]);
            }
            while (!((((libNtve_gf_UnitInRegion(lp_transport, RegionCircle(gv_transportPaths[lp_pathWave][lp_pathWaveTar][lv_pathPoint], 3.0)) == true) && (UnitIsAlive(lp_transport) == true)) || (UnitIsAlive(lp_transport) == false)))) {
                Wait(0.1, c_timeGame);
            }
            lv_pathPoint += 1;
            if ((lv_pathPoint < (gv_pathAmount[lp_pathWave][lp_pathWaveTar] - 2)) && (ModI((lv_pathPoint + 1), 2) == 0)) {
                gf_TransportAmbushSwitches(lp_transport, lp_pathWave, lp_pathWaveTar, (lv_pathPoint + 2));
            }

        }
        PathClearWayPoints(lv_waypoints);
        PathDestroy(lv_waypoints);
        if ((UnitIsAlive(lp_transport) == true)) {
            gf_TransportAmbushUnloading(lp_transport, lp_pathWave, lp_pathWaveTar, lv_pathPoint);
            UnitSetOwner(lp_targetUnit, 5, true);
            UnitIssueOrder(lp_transport, OrderTargetingUnit(AbilityCommand("Rally", 0), lp_targetUnit), c_orderQueueReplace);
            Wait(0.1, c_timeGame);
            UnitIssueOrder(lp_transport, Order(AbilityCommand("TransportTruckTransport", 1)), c_orderQueueReplace);
            Wait(25.0, c_timeGame);
            gf_TransportAmbushUnloading(lp_transport, lp_pathWave, lp_pathWaveTar, lv_pathPoint);
            while (!(((UnitIsAlive(lp_transport) != true) || (UnitGroupCount(UnitCargoGroup(lp_transport), c_unitCountAlive) == 0)))) {
                Wait(1.0, c_timeGame);
            }
            Wait(8.0, c_timeGame);
            gv_civiliansEvacuated += UnitGroupCount(UnitCargoGroup(lp_targetUnit), c_unitCountAlive);
            ObjectiveSetName(gv_transportObjective, (StringExternal("Param/Value/D75A2A2D") + IntToText(gv_civiliansEvacuated) + StringExternal("Param/Value/89DFB95D") + IntToText(gv_civiliansLost) + StringExternal("Param/Value/8A6BF672")));
            if ((UnitIsAlive(lp_transport) == true)) {
                UnitSetOwner(lp_transport, 0, true);
                if ((gv_transportCount == 1)) {
                    TriggerExecute(gt_TransmissionFirstTransportUnloaded, true, false);
                }
                else {
                    TriggerExecute(gt_TransmissionTransportUnloaded, true, false);
                    Wait(8.0, c_timeGame);
                }
            }
            else {
                if ((UnitGroupCount(UnitCargoGroup(lp_targetUnit), c_unitCountAlive) != 0)) {
                    TriggerExecute(gt_TransmissionTransportPartiallyUnloaded, true, false);
                    Wait(8.0, c_timeGame);
                }
                else {
                    if ((UnitGroupCount(UnitCargoGroup(lp_targetUnit), c_unitCountAlive) == 50)) {
                        TriggerExecute(gt_TransmissionTransportUnloadedThenDestroyed, true, false);
                        Wait(8.0, c_timeGame);
                        TriggerExecute(gt_TransmissionTransportUnloaded, true, false);
                    }

                }
            }
            UnitIssueOrder(lp_targetUnit, Order(AbilityCommand("HerculesLiftOff", 0)), c_orderQueueReplace);
            if ((gv_civiliansEvacuated >= 350)) {
                TriggerEnable(gt_DefeatBaseDead, false);
                TriggerEnable(gt_DefeatObjectiveLost, false);
                TriggerExecute(gt_TransmissionVictory, true, true);
                Wait(2.0, c_timeGame);
                GameOver(1, c_gameOverVictory, true, true);
                GameOver(2, c_gameOverVictory, true, true);
            }

            Wait(1.0, c_timeGame);
            PlayerCreateEffectUnit(5, "AdjustHeight", lp_targetUnit);
            PingDestroy(lv_objectiveMarkers[1]);
            PingDestroy(lv_objectiveMarkers[2]);
            Wait(10.0, c_timeGame);
            libNtve_gf_ShowHideUnit(lp_targetUnit, false);
        }

    }

    PingDestroy(lv_objectiveMarkers[1]);
    PingDestroy(lv_objectiveMarkers[2]);
    PingDestroy(lv_objectiveMarkers[3]);
    Wait(10.0, c_timeGame);
    libNtve_gf_ShowHideUnit(lp_targetUnit, false);
}

void gf_AttackonTransport (int lp_resourceBucket, int lp_techBucket, point lp_spawnPoint, unit lp_attackTarget) {
    // Automatic Variable Declarations
    // Implementation
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(lp_attackTarget));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(lp_attackTarget));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lp_resourceBucket, lp_techBucket, lp_spawnPoint, true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
}

void gf_TransportAmbushSwitches (unit lp_transport, int lp_pathWave, int lp_pathWaveTar, int lp_pathPoint) {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_transportCount == 1)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest, libCOMI_ge_CoopAITechLevelBuckets__1Early, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lp_pathPoint], lp_transport);
    }
    else if ((gv_transportCount == 2)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__3Small, libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lp_pathPoint], lp_transport);
    }
    else if ((gv_transportCount == 3)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__5Large, libCOMI_ge_CoopAITechLevelBuckets__4LateMid, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lp_pathPoint], lp_transport);
    }
    else if ((gv_transportCount >= 4) && (gv_transportCount <= 5)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__6Larger, libCOMI_ge_CoopAITechLevelBuckets__5Late, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lp_pathPoint], lp_transport);
    }
    else if ((gv_transportCount >= 6) && (gv_transportCount <= 8)) {
        gv_ambushCount += 1;
        if ((gv_ambushCount == 3)) {
            gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__7Largest, libCOMI_ge_CoopAITechLevelBuckets_TechLevel06, RegionGetCenter(RegionFromId(9)), lp_transport);
            gv_ambushCount *= 0;
        }

    }
    else if ((gv_transportCount >= 9)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__7Largest, libCOMI_ge_CoopAITechLevelBuckets_TechLevel07, gv_transportPaths[lp_pathWave][lp_pathWaveTar][lp_pathPoint], lp_transport);
    }
}

void gf_TransportAmbushUnloading (unit lp_transport, int lp_pathWave, int lp_pathWaveTar, int lp_pathPoint) {
    // Variable Declarations
    fixed lv_distance;
    fixed lv_temp;
    int lv_randRegion;
    region[4] lv_spawnRegion;
    int lv_pathPoint;
    int lv_int;
    int lv_spawnNum;

    // Automatic Variable Declarations
    const int auto22B5EDAF_ae = 3;
    const int auto22B5EDAF_ai = 1;

    // Variable Initialization
    lv_randRegion = RandomInt(1, 3);
    lv_pathPoint = lp_pathPoint;

    // Implementation
    lv_spawnRegion[1] = RegionFromId(14);
    lv_spawnRegion[2] = RegionFromId(13);
    lv_spawnRegion[3] = RegionFromId(2);
    lv_int = 1;
    for ( ; ( (auto22B5EDAF_ai >= 0 && lv_int <= auto22B5EDAF_ae) || (auto22B5EDAF_ai < 0 && lv_int >= auto22B5EDAF_ae) ) ; lv_int += auto22B5EDAF_ai ) {
        lv_distance = DistanceBetweenPoints(UnitGetPosition(lp_transport), RegionGetCenter(lv_spawnRegion[lv_int]));
        if ((((lv_temp > lv_distance) && (lv_temp != 0.0)) || (lv_temp == 0.0))) {
            lv_temp = lv_distance;
            lv_spawnNum = lv_int;
        }

    }
    if ((lv_spawnNum == 0) && (lv_temp != 0.0)) {
        lv_spawnNum = 1;
    }

    if ((gv_transportCount == 1)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest, libCOMI_ge_CoopAITechLevelBuckets__1Early, gv_transportPaths[lp_pathWave][lp_pathWaveTar][(lp_pathPoint - 2)], lp_transport);
    }
    else if ((gv_transportCount == 2)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__3Small, libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid, gv_transportPaths[lp_pathWave][lp_pathWaveTar][(lp_pathPoint - 2)], lp_transport);
    }
    else if ((gv_transportCount == 3)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__4Medium, libCOMI_ge_CoopAITechLevelBuckets__3Mid, gv_transportPaths[lp_pathWave][lp_pathWaveTar][(lp_pathPoint - 2)], lp_transport);
    }
    else if ((gv_transportCount >= 4) && (gv_transportCount <= 5)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__5Large, libCOMI_ge_CoopAITechLevelBuckets__4LateMid, gv_transportPaths[lp_pathWave][lp_pathWaveTar][(lp_pathPoint - 2)], lp_transport);
    }
    else if ((gv_transportCount >= 6) && (gv_transportCount <= 8)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__6Larger, libCOMI_ge_CoopAITechLevelBuckets_TechLevel06, RegionGetCenter(lv_spawnRegion[lv_spawnNum]), lp_transport);
    }
    else if ((gv_transportCount >= 9)) {
        gf_AttackonTransport(libCOMI_ge_CoopAIAttackWaveBuckets__7Largest, libCOMI_ge_CoopAITechLevelBuckets_TechLevel07, RegionGetCenter(lv_spawnRegion[lv_spawnNum]), lp_transport);
    }
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Load Data
//--------------------------------------------------------------------------------------------------
bool gt_Init01LoadData_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_indexPlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetCommander(1, "Zeratul");
    PlayerSetCommander(2, "Artanis");
    libCOMI_gf_EnableArcadeContestMode();
    TriggerExecute(gt_Init02Players, true, false);
    libCOMI_gf_LoadCoopMission("COOP_Placeholder", gt_Init03LoadingComplete);
    TriggerEnable(gt_DefeatBaseDead, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01LoadData_Init () {
    gt_Init01LoadData = TriggerCreate("gt_Init01LoadData_Func");
    TriggerAddEventMapInit(gt_Init01LoadData);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Players
//--------------------------------------------------------------------------------------------------
bool gt_Init02Players_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIterEnemy;
    int lv_playerIterAlly;

    // Automatic Variable Declarations
    playergroup autoE0EF2853_g;
    playergroup autoB969537F_g;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetPlayerGroupAlliance(libCOMI_gf_HumanPlayers(), libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    PlayerGroupAdd(gv_enemyGroup, gv_pLAYER_03_ENEMY);
    PlayerGroupAdd(gv_enemyGroup, gv_pLAYER_04_ENEMY);
    libNtve_gf_SetPlayerGroupAlliance(gv_enemyGroup, libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    autoE0EF2853_g = gv_enemyGroup;
    lv_playerIterEnemy = -1;
    while (true) {
        lv_playerIterEnemy = PlayerGroupNextPlayer(autoE0EF2853_g, lv_playerIterEnemy);
        if (lv_playerIterEnemy < 0) { break; }
        PlayerSetState(lv_playerIterEnemy, c_playerStateMineralCostIgnored, true);
        PlayerSetState(lv_playerIterEnemy, c_playerStateVespeneCostIgnored, true);
        PlayerSetState(lv_playerIterEnemy, c_playerStateFoodIgnored, true);
        PlayerSetColorIndex(lv_playerIterEnemy, libCOMI_gf_EnemyPlayerColor(), true);
        autoB969537F_g = libCOMI_gf_HumanPlayers();
        lv_playerIterAlly = -1;
        while (true) {
            lv_playerIterAlly = PlayerGroupNextPlayer(autoB969537F_g, lv_playerIterAlly);
            if (lv_playerIterAlly < 0) { break; }
            libNtve_gf_SetAlliance(lv_playerIterAlly, lv_playerIterEnemy, libNtve_ge_AllianceSetting_Enemy);
        }
    }
    PlayerSetAlliance(gv_pLAYER_03_ENEMY, c_allianceIdPower, gv_pLAYER_04_ENEMY, true);
    PlayerSetAlliance(gv_pLAYER_04_ENEMY, c_allianceIdPower, gv_pLAYER_03_ENEMY, true);
    libCOMI_gf_SetAlliedCommandersstartingResources();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Players_Init () {
    gt_Init02Players = TriggerCreate("gt_Init02Players_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Loading Complete
//--------------------------------------------------------------------------------------------------
bool gt_Init03LoadingComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Init04Technology, true, false);
    libCOMI_gf_PurchaseStorymodeTech();
    TriggerExecute(gt_Init05Units, true, false);
    TriggerExecute(gt_Init06MusicSound, true, false);
    TriggerExecute(gt_Init07Environment, true, false);
    TriggerExecute(gt_Init08Difficulties, true, false);
    libCOMI_gf_PlayMapIntroZoom(true);
    TriggerExecute(gt_StartAI, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03LoadingComplete_Init () {
    gt_Init03LoadingComplete = TriggerCreate("gt_Init03LoadingComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Technology
//--------------------------------------------------------------------------------------------------
bool gt_Init04Technology_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_SetTechRestrictionsCallback(TriggerGetCurrent());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04Technology_Init () {
    gt_Init04Technology = TriggerCreate("gt_Init04Technology_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Units
//--------------------------------------------------------------------------------------------------
bool gt_Init05Units_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_SetWorkerRallyPointsPlayersNexuses(gv_pLAYER_01_USER);
    libCOMI_gf_SetWorkerRallyPointsPlayersNexuses(gv_pLAYER_02_USER);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05Units_Init () {
    gt_Init05Units = TriggerCreate("gt_Init05Units_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 06 Music/Sound
//--------------------------------------------------------------------------------------------------
bool gt_Init06MusicSound_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init06MusicSound_Init () {
    gt_Init06MusicSound = TriggerCreate("gt_Init06MusicSound_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 07 Environment
//--------------------------------------------------------------------------------------------------
bool gt_Init07Environment_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameTimeOfDaySet("08:00:00");
    VisExploreArea(gv_pLAYER_01_USER, RegionFromId(49), true, false);
    VisExploreArea(gv_pLAYER_02_USER, RegionFromId(49), true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init07Environment_Init () {
    gt_Init07Environment = TriggerCreate("gt_Init07Environment_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 08 Difficulties
//--------------------------------------------------------------------------------------------------
bool gt_Init08Difficulties_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_bonusObjectiveLife;
    fixed lv_mainObjectiveLife;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_01_USER) == 4)) {
        UnitRemove(UnitFromId(211));
        TriggerEnable(gt_AttacksonFacilityHardBrut, true);
    }
    else {
        TriggerEnable(gt_AttacksonFacilityCasNorm, true);
    }
    if ((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_02_USER) == 4)) {
        UnitRemove(UnitFromId(134));
        TriggerEnable(gt_AttacksonFacilityHardBrut, true);
    }
    else {
        TriggerEnable(gt_AttacksonFacilityCasNorm, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init08Difficulties_Init () {
    gt_Init08Difficulties = TriggerCreate("gt_Init08Difficulties_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Can't Fail
//--------------------------------------------------------------------------------------------------
bool gt_DebugCantFail_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_CreateRevealerCoop(1, RegionEntireMap());
    libCOMI_gf_CreateRevealerCoop(2, RegionEntireMap());
    PlayerModifyPropertyFixed(gv_pLAYER_01_USER, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0.0);
    PlayerModifyPropertyFixed(gv_pLAYER_02_USER, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0.0);
    PlayerModifyPropertyFixed(5, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0.0);
    TriggerEnable(gt_DefeatBaseDead, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DebugCantFail_Init () {
    gt_DebugCantFail = TriggerCreate("gt_DebugCantFail_Func");
    TriggerAddEventChatMessage(gt_DebugCantFail, c_playerAny, "WeCantFail", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enemy Attacking Q
//--------------------------------------------------------------------------------------------------
bool gt_EnemyAttackingQ_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
        libCOMI_gf_SendMissionTransmission("AttackWave", true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
        libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
        libCOMI_gf_SendMissionTransmission("AttackWave", true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
        libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
        gv_pos += 1;
    }
    Wait(20.0, c_timeAI);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnemyAttackingQ_Init () {
    gt_EnemyAttackingQ = TriggerCreate("gt_EnemyAttackingQ_Func");
    TriggerAddEventPlayerAIWave(gt_EnemyAttackingQ, gv_pLAYER_03_ENEMY);
    TriggerAddEventPlayerAIWave(gt_EnemyAttackingQ, gv_pLAYER_04_ENEMY);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Base Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatBaseDead_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_cameraTarget;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!(((libNtve_gf_UnitGroupIsDead(UnitGroup(null, gv_pLAYER_01_USER, null, UnitFilter((1 << c_targetFilterPreventDefeat), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == true) || (libNtve_gf_UnitGroupIsDead(UnitGroup(null, gv_pLAYER_02_USER, null, UnitFilter((1 << c_targetFilterPreventDefeat), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_Transport51, false);
    TriggerEnable(gt_Transport52, false);
    TriggerEnable(gt_Transport53, false);
    TriggerEnable(gt_Transport6, false);
    TriggerEnable(gt_DefeatObjectiveLost, false);
    TriggerStop(gt_Transport6);
    TriggerStop(gt_Transport53);
    TriggerStop(gt_Transport52);
    TriggerStop(gt_Transport51);
    TransmissionClearAll();
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/0646A07C"), StringExternal("Param/Value/C0F56659"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    GameOver(1, c_gameOverDefeat, true, true);
    GameOver(2, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatBaseDead_Init () {
    gt_DefeatBaseDead = TriggerCreate("gt_DefeatBaseDead_Func");
    TriggerEnable(gt_DefeatBaseDead, false);
    TriggerAddEventTimePeriodic(gt_DefeatBaseDead, 1.0, c_timeAI);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Primary Objective Complete
//--------------------------------------------------------------------------------------------------
bool gt_VictoryPrimaryObjectiveComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_VictorySequence, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryPrimaryObjectiveComplete_Init () {
    gt_VictoryPrimaryObjectiveComplete = TriggerCreate("gt_VictoryPrimaryObjectiveComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Sequence
//--------------------------------------------------------------------------------------------------
bool gt_VictorySequence_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Victory);
    Wait(2.0, c_timeReal);
    libCOMI_gf_RunMissionVictorySequence(gt_VictoryFanfareQ);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictorySequence_Init () {
    gt_VictorySequence = TriggerCreate("gt_VictorySequence_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Fanfare Q
//--------------------------------------------------------------------------------------------------
bool gt_VictoryFanfareQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    TriggerQueueEnter();
    libCOMI_gf_CinematicModeCampaign(true, c_transitionDurationDefault, true);
    libCOMI_gf_SendMissionTransmission("PrimaryObjectiveVictory", false, -1);
    UnitPauseAll(true);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraLockInput(gv_pLAYER_02_USER, true);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_pLAYER_02_USER);
    UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoDefault(), 2.0, -1, 10.0, false);
    CameraPan(gv_pLAYER_01_USER, gv_victoryCompletePan, 2.0, -1, 10.0, false);
    CameraApplyInfo(gv_pLAYER_02_USER, CameraInfoDefault(), 2.0, -1, 10.0, false);
    CameraPan(gv_pLAYER_02_USER, gv_victoryCompletePan, 2.0, -1, 10.0, false);
    libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(gv_pLAYER_01_USER), libCOMI_ge_CampaignMessageType_MissionVictory, StringExternal("Param/Value/684A78B4"), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(gv_pLAYER_02_USER), libCOMI_ge_CampaignMessageType_MissionVictory, StringExternal("Param/Value/E5C8709E"), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    libCOMI_gf_WaitForMissionTransmission();
    Wait(libCOMI_gv_campaignVictoryDelay, c_timeGame);
    UISetCursorVisible(PlayerGroupAll(), true);
    TriggerExecute(gt_Victory, true, false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryFanfareQ_Init () {
    gt_VictoryFanfareQ = TriggerCreate("gt_VictoryFanfareQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool gt_Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_EndCampaignMission(c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Victory_Init () {
    gt_Victory = TriggerCreate("gt_Victory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat
//--------------------------------------------------------------------------------------------------
bool gt_Defeat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_EndCampaignMission(c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Defeat_Init () {
    gt_Defeat = TriggerCreate("gt_Defeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start AI
//--------------------------------------------------------------------------------------------------
bool gt_StartAI_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_StartCoopAI(gv_pLAYER_03_ENEMY, gv_pLAYER_01_USER);
    libCOMI_gf_StartCoopAI(gv_pLAYER_04_ENEMY, gv_pLAYER_02_USER);
    TriggerExecute(gt_SetupAttackWaveSpawn, true, false);
    TriggerExecute(gt_AIAttackWaves, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartAI_Init () {
    gt_StartAI = TriggerCreate("gt_StartAI_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Setup Attack Wave Spawn
//--------------------------------------------------------------------------------------------------
bool gt_SetupAttackWaveSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_spawnLocationIter;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(7);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(2);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(57);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(2);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_01_USER][lv_spawnLocationIter] = RegionFromId(9);
    lv_spawnLocationIter = 1;
    gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(7);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(6);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(13);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(9);
    lv_spawnLocationIter += 1;
    gv_attackSpawn[gv_pLAYER_02_USER][lv_spawnLocationIter] = RegionFromId(13);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetupAttackWaveSpawn_Init () {
    gt_SetupAttackWaveSpawn = TriggerCreate("gt_SetupAttackWaveSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI Attack Waves
//--------------------------------------------------------------------------------------------------
bool gt_AIAttackWaves_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gf_RunAttackWaveatMissionTime(gt_AttackWave01, (2.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave02, (5.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave04, (10.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave06, (15.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave07, (20.0 * 60.0));
    gf_RunAttackWaveatMissionTime(gt_AttackWave07, (25.0 * 60.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AIAttackWaves_Init () {
    gt_AIAttackWaves = TriggerCreate("gt_AIAttackWaves_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 01
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave01_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Conditions
    if (testConds) {
        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_03_ENEMY) != 1))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_03_ENEMY) != 2))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_04_ENEMY) != 1))) {
            return false;
        }

        if (!((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_04_ENEMY) != 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave01_Init () {
    gt_AttackWave01 = TriggerCreate("gt_AttackWave01_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 02
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave02_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave02_Init () {
    gt_AttackWave02 = TriggerCreate("gt_AttackWave02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 03
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave03_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    int lv_numberOfStructures_ExpLeft;
    int lv_numberOfStructures_ExpRight;
    point lv_attackPathWaypoint;

    // Automatic Variable Declarations
    playergroup auto200FB8AA_g;
    int auto200FB8AA_var;

    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__3Small;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__3Mid;
    auto200FB8AA_g = libCOMI_gf_HumanPlayers();
    auto200FB8AA_var = -1;
    while (true) {
        auto200FB8AA_var = PlayerGroupNextPlayer(auto200FB8AA_g, auto200FB8AA_var);
        if (auto200FB8AA_var < 0) { break; }
        lv_numberOfStructures_ExpLeft += UnitGroupCount(UnitGroup(null, auto200FB8AA_var, RegionFromId(3), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
        lv_numberOfStructures_ExpRight += UnitGroupCount(UnitGroup(null, auto200FB8AA_var, RegionFromId(4), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive);
    }
    if ((((lv_numberOfStructures_ExpLeft == 0) && (lv_numberOfStructures_ExpRight == 0)) || ((lv_numberOfStructures_ExpLeft > 0) && (lv_numberOfStructures_ExpRight > 0)))) {
        if ((RandomInt(0, 100) < 50)) {
            lv_attackPathWaypoint = PointFromId(367);
        }
        else {
            lv_attackPathWaypoint = PointFromId(358);
        }
    }
    else {
        if ((lv_numberOfStructures_ExpLeft > lv_numberOfStructures_ExpRight)) {
            lv_attackPathWaypoint = PointFromId(367);
        }
        else {
            lv_attackPathWaypoint = PointFromId(358);
        }
    }
    if ((lv_attackPathWaypoint == PointFromId(367))) {
        gv_attackWaveA_Wave05Path = PointFromId(358);
    }
    else {
        gv_attackWaveA_Wave05Path = PointFromId(367);
    }
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave03_Init () {
    gt_AttackWave03 = TriggerCreate("gt_AttackWave03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 04
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave04_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    int lv_attackingAI;
    int lv_defendingPlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__4Medium;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__4LateMid;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave04_Init () {
    gt_AttackWave04 = TriggerCreate("gt_AttackWave04_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 05
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave05_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;
    int lv_numberOfStructures_ExpLeft;
    int lv_numberOfStructures_ExpRight;
    point lv_attackPathWaypoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__1Early;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    lv_attackPathWaypoint = gv_attackWaveA_Wave05Path;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_AddAttackForceWaypoint(lv_attackPathWaypoint, false);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave05_Init () {
    gt_AttackWave05 = TriggerCreate("gt_AttackWave05_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 06
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave06_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__6Larger;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel06;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave06_Init () {
    gt_AttackWave06 = TriggerCreate("gt_AttackWave06_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Wave 07
//--------------------------------------------------------------------------------------------------
bool gt_AttackWave07_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_resourceBucket;
    int lv_techBucket;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__7Largest;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets_TechLevel07;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_resourceBucket = libCOMI_ge_CoopAIAttackWaveBuckets__5Large;
    lv_techBucket = libCOMI_ge_CoopAITechLevelBuckets__5Late;
    AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(249));
    AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(249));
    libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, lv_resourceBucket, lv_techBucket, gf_AttackWaveSpawn(), true);
    libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackWave07_Init () {
    gt_AttackWave07 = TriggerCreate("gt_AttackWave07_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Melee Initialization
//--------------------------------------------------------------------------------------------------
bool gt_MeleeInitialization_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_temp;

    // Automatic Variable Declarations
    unitgroup auto56C41AF7_g;
    int auto56C41AF7_u;
    unit auto56C41AF7_var;
    unitgroup auto3EDCA7DB_g;
    int auto3EDCA7DB_u;
    unit auto3EDCA7DB_var;
    unitgroup autoFB0F1116_g;
    int autoFB0F1116_u;
    unit autoFB0F1116_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    AISetGeneralRebuildCount(libNtve_gf_DifficultyValueInt(0, 0, 0, 0), true, 3);
    AISetGeneralRebuildCount(libNtve_gf_DifficultyValueInt(0, 0, 0, 0), true, 4);
    AISetGeneralRebuildCount(libNtve_gf_DifficultyValueInt(0, 0, 0, 0), false, 3);
    AISetGeneralRebuildCount(libNtve_gf_DifficultyValueInt(0, 0, 0, 0), false, 4);
    UnitSetPropertyFixed(UnitFromId(65723451), c_unitPropLife, 125.0);
    UnitSetPropertyFixed(UnitFromId(332883986), c_unitPropLife, 176.0);
    libCOMI_gf_CreateRevealerCoop(1, RegionFromId(10));
    libCOMI_gf_CreateRevealerCoop(2, RegionFromId(10));
    libCOMI_gf_SetAllianceCoop(1, 2, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libCOMI_gf_SetAllianceCoop(1, 5, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libCOMI_gf_SetAllianceCoop(2, 5, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libCOMI_gf_SetAllianceCoop(3, 5, libNtve_ge_AllianceSetting_Enemy);
    libCOMI_gf_SetAllianceCoop(4, 5, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetUpgradeLevelForPlayer(5, "ScienceVesselResearchDefensiveMatrix", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(5, "ScienceVesselFreeRepair", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(5, "MultilockTargetingSystems", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(5, "SiegeTankSplashRadius", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(5, "HALORockets", 1);
    gf_SetPathPoints();
    libNtve_gf_DisplayBossBar(1, "Assets\\Textures\\btn-building-terran-sciencefacility.dds", StringExternal("Param/Value/D1CBF971"), 100, PlayerGroupAll());
    libNtve_gf_SetBossBarBoss(1, gv_facility, true);
    libNtve_gf_MoveBossBar(1, c_anchorTopRight, 0, 100);
    libNtve_gf_ShowHideBossBar(true, 1);
    auto56C41AF7_g = UnitGroup("TransportTruck", 5, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto56C41AF7_u = UnitGroupCount(auto56C41AF7_g, c_unitCountAll);
    for (;; auto56C41AF7_u -= 1) {
        auto56C41AF7_var = UnitGroupUnitFromEnd(auto56C41AF7_g, auto56C41AF7_u);
        if (auto56C41AF7_var == null) { break; }
        UnitIssueOrder(auto56C41AF7_var, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        libNtve_gf_MakeUnitInvulnerable(auto56C41AF7_var, true);
        UnitSetPropertyFixed(auto56C41AF7_var, c_unitPropMovementSpeed, 0.0);
    }
    auto3EDCA7DB_g = UnitGroup("Bunker", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3EDCA7DB_u = UnitGroupCount(auto3EDCA7DB_g, c_unitCountAll);
    for (;; auto3EDCA7DB_u -= 1) {
        auto3EDCA7DB_var = UnitGroupUnitFromEnd(auto3EDCA7DB_g, auto3EDCA7DB_u);
        if (auto3EDCA7DB_var == null) { break; }
        UnitGroupIssueOrder(UnitGroup("Marine", 3, RegionCircle(UnitGetPosition(auto3EDCA7DB_var), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 4), OrderTargetingUnit(null, lv_temp), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitGroup("Marauder", 3, RegionCircle(UnitGetPosition(auto3EDCA7DB_var), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 2), OrderTargetingUnit(null, lv_temp), c_orderQueueReplace);
    }
    autoFB0F1116_g = UnitGroup("Bunker", 4, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFB0F1116_u = UnitGroupCount(autoFB0F1116_g, c_unitCountAll);
    for (;; autoFB0F1116_u -= 1) {
        autoFB0F1116_var = UnitGroupUnitFromEnd(autoFB0F1116_g, autoFB0F1116_u);
        if (autoFB0F1116_var == null) { break; }
        UnitGroupIssueOrder(UnitGroup("Marine", 4, RegionCircle(UnitGetPosition(autoFB0F1116_var), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1), OrderTargetingUnit(null, lv_temp), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitGroup("Marauder", 4, RegionCircle(UnitGetPosition(autoFB0F1116_var), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 2), OrderTargetingUnit(null, lv_temp), c_orderQueueReplace);
    }
    Wait(2.0, c_timeGame);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/6387CE72"), StringExternal("Param/Value/151C35E8"), c_objectiveStateActive, true, PlayerGroupAll());
    gv_facilityObjective = ObjectiveLastCreated();
    Wait(4.0, c_timeGame);
    ObjectiveCreateForPlayers((StringExternal("Param/Value/032E9649") + IntToText(gv_civiliansEvacuated) + StringExternal("Param/Value/38A05177") + IntToText(gv_civiliansLost) + StringExternal("Param/Value/22F8EC9B")), StringExternal("Param/Value/5747890A"), c_objectiveStateActive, true, PlayerGroupAll());
    gv_transportObjective = ObjectiveLastCreated();
    ObjectiveSetName(gv_transportObjective, (StringExternal("Param/Value/295666FA") + IntToText(gv_civiliansEvacuated) + StringExternal("Param/Value/3B07D98F") + IntToText(gv_civiliansLost) + StringExternal("Param/Value/AE6C0FC0")));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MeleeInitialization_Init () {
    gt_MeleeInitialization = TriggerCreate("gt_MeleeInitialization_Func");
    TriggerAddEventMapInit(gt_MeleeInitialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective Start
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjectiveStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjectiveStart_Init () {
    gt_TransmissionBonusObjectiveStart = TriggerCreate("gt_TransmissionBonusObjectiveStart_Func");
    TriggerEnable(gt_TransmissionBonusObjectiveStart, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective 1 1 Start 
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjective11Start_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/25506954"), StringExternal("Param/Value/C56F3A65"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/AB985D95"), StringExternal("Param/Value/D1E489D4"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjective11Start_Init () {
    gt_TransmissionBonusObjective11Start = TriggerCreate("gt_TransmissionBonusObjective11Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective 1 2 Start 
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjective12Start_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/85ADC427"), StringExternal("Param/Value/7B02A154"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5BDDF1F8"), StringExternal("Param/Value/A75E5076"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjective12Start_Init () {
    gt_TransmissionBonusObjective12Start = TriggerCreate("gt_TransmissionBonusObjective12Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective 2 1 Start 
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjective21Start_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/32D8BACA"), StringExternal("Param/Value/60A0B10F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DFDBAB94"), StringExternal("Param/Value/FF2E5E9D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjective21Start_Init () {
    gt_TransmissionBonusObjective21Start = TriggerCreate("gt_TransmissionBonusObjective21Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective 2 2 Start 
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjective22Start_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/AAE9A670"), StringExternal("Param/Value/961418A9"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/86CB5015"), StringExternal("Param/Value/EBC5E264"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjective22Start_Init () {
    gt_TransmissionBonusObjective22Start = TriggerCreate("gt_TransmissionBonusObjective22Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Bonus Objective Complete
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionBonusObjectiveComplete_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        gf_CompletedTransmission();
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        gf_CompletedTransmission();
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionBonusObjectiveComplete_Init () {
    gt_TransmissionBonusObjectiveComplete = TriggerCreate("gt_TransmissionBonusObjectiveComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Major Attack
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionMajorAttack_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    int autoE1BD7B20_val;
    int autoAC25A7F1_val;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoE1BD7B20_val = RandomInt(1, 4);
        if (autoE1BD7B20_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F8BED23D"), StringExternal("Param/Value/328F034F"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoE1BD7B20_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/848C48C4"), StringExternal("Param/Value/471ED0E9"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoE1BD7B20_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/4240227E"), StringExternal("Param/Value/03350EFD"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoE1BD7B20_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/17AA769D"), StringExternal("Param/Value/C67E33CC"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        autoAC25A7F1_val = RandomInt(1, 4);
        if (autoAC25A7F1_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/46EB1EAD"), StringExternal("Param/Value/6AB700AF"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoAC25A7F1_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B69825C1"), StringExternal("Param/Value/D7B2E6B3"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoAC25A7F1_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/76884F07"), StringExternal("Param/Value/B879DFC7"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoAC25A7F1_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9ABBC406"), StringExternal("Param/Value/ED061495"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionMajorAttack_Init () {
    gt_TransmissionMajorAttack = TriggerCreate("gt_TransmissionMajorAttack_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 1
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    int auto0F9FAAEB_val;
    int autoC0D6BFA8_val;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto0F9FAAEB_val = RandomInt(1, 4);
        if (auto0F9FAAEB_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9AC684B0"), StringExternal("Param/Value/BB06EA41"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto0F9FAAEB_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/989B26B9"), StringExternal("Param/Value/31598C1C"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto0F9FAAEB_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5AE106FA"), StringExternal("Param/Value/E985D5C6"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto0F9FAAEB_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/856AE7A1"), StringExternal("Param/Value/1CEAB3A1"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        autoC0D6BFA8_val = RandomInt(1, 4);
        if (autoC0D6BFA8_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/29E757F1"), StringExternal("Param/Value/F573C491"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoC0D6BFA8_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5AED9BB1"), StringExternal("Param/Value/E4F0E0F8"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoC0D6BFA8_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/94B00DFE"), StringExternal("Param/Value/0F1FF335"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoC0D6BFA8_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E27B1974"), StringExternal("Param/Value/63AC1054"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport1_Init () {
    gt_TransmissionTransport1 = TriggerCreate("gt_TransmissionTransport1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 2
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;

    // Automatic Variable Declarations
    int autoFDB13740_val;
    int auto0E64B77B_val;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoFDB13740_val = RandomInt(1, 2);
        if (autoFDB13740_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/982AB256"), StringExternal("Param/Value/FFD94A8B"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoFDB13740_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/04EF6396"), StringExternal("Param/Value/29B3FF66"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto0E64B77B_val = RandomInt(1, 2);
        if (auto0E64B77B_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/FA448B41"), StringExternal("Param/Value/13F37EE0"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto0E64B77B_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DB4D9041"), StringExternal("Param/Value/F1198441"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport2_Init () {
    gt_TransmissionTransport2 = TriggerCreate("gt_TransmissionTransport2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 3
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int autoE09DD562_val;
    int auto93283EA7_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoE09DD562_val = RandomInt(1, 2);
        if (autoE09DD562_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A3F213D5"), StringExternal("Param/Value/5D536DD7"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoE09DD562_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/59E26C53"), StringExternal("Param/Value/FF30A635"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto93283EA7_val = RandomInt(1, 2);
        if (auto93283EA7_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/225DCA96"), StringExternal("Param/Value/9CAA67CB"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto93283EA7_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/3903F4E7"), StringExternal("Param/Value/6A7CB2D7"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport3_Init () {
    gt_TransmissionTransport3 = TriggerCreate("gt_TransmissionTransport3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 4
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto6677E2B4_val;
    int auto72E31C92_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto6677E2B4_val = lv_rand;
        if (auto6677E2B4_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8886A421"), StringExternal("Param/Value/8E7B47D2"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto6677E2B4_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/69CE1269"), StringExternal("Param/Value/2ACAC549"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto6677E2B4_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2DB22C86"), StringExternal("Param/Value/4B564953"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto72E31C92_val = lv_rand;
        if (auto72E31C92_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F0667AB7"), StringExternal("Param/Value/AC030A4B"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto72E31C92_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DC4623C1"), StringExternal("Param/Value/2F18462D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto72E31C92_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/65A382AE"), StringExternal("Param/Value/EDF9689D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport4_Init () {
    gt_TransmissionTransport4 = TriggerCreate("gt_TransmissionTransport4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 5
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto1A3F749F_val;
    int auto54ECC575_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto1A3F749F_val = lv_rand;
        if (auto1A3F749F_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5CB6EE29"), StringExternal("Param/Value/6C6C1DAC"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto1A3F749F_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9753A86D"), StringExternal("Param/Value/1E627A44"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto1A3F749F_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2A98C313"), StringExternal("Param/Value/E1D1EDF5"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto54ECC575_val = lv_rand;
        if (auto54ECC575_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/29BF5FFD"), StringExternal("Param/Value/C4A28FD1"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto54ECC575_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/75FBF547"), StringExternal("Param/Value/90957CA4"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto54ECC575_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DFBE56B6"), StringExternal("Param/Value/2459CC06"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport5_Init () {
    gt_TransmissionTransport5 = TriggerCreate("gt_TransmissionTransport5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport 6
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransport6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto9D985BA7_val;
    int autoAEA1917A_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto9D985BA7_val = lv_rand;
        if (auto9D985BA7_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F406F3F5"), StringExternal("Param/Value/A3D0C1DE"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto9D985BA7_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7D729AFE"), StringExternal("Param/Value/618C842E"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto9D985BA7_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9CCED0C2"), StringExternal("Param/Value/74F3882B"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        autoAEA1917A_val = lv_rand;
        if (autoAEA1917A_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7E12B798"), StringExternal("Param/Value/8FB4CAA3"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoAEA1917A_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E658E76F"), StringExternal("Param/Value/F4D4527C"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoAEA1917A_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D55C16CA"), StringExternal("Param/Value/BE11027E"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransport6_Init () {
    gt_TransmissionTransport6 = TriggerCreate("gt_TransmissionTransport6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Facility Emptied
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionFacilityEmptied_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int autoEF2DDB60_val;
    int auto111B219D_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 2);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoEF2DDB60_val = lv_rand;
        if (autoEF2DDB60_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/13564C33"), StringExternal("Param/Value/FCF8F9F3"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoEF2DDB60_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/49D2B8EB"), StringExternal("Param/Value/DD9A8671"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto111B219D_val = lv_rand;
        if (auto111B219D_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/0F9C847F"), StringExternal("Param/Value/8D1D12CB"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto111B219D_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/59FC9CC0"), StringExternal("Param/Value/110627A4"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionFacilityEmptied_Init () {
    gt_TransmissionFacilityEmptied = TriggerCreate("gt_TransmissionFacilityEmptied_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission First Transport Unloaded
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionFirstTransportUnloaded_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rand = RandomInt(1, 2);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CE5308CC"), StringExternal("Param/Value/B09BFB35"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E35758EA"), StringExternal("Param/Value/8D17AE83"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionFirstTransportUnloaded_Init () {
    gt_TransmissionFirstTransportUnloaded = TriggerCreate("gt_TransmissionFirstTransportUnloaded_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport Unloaded
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransportUnloaded_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto044B0414_val;
    int auto427E0A95_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto044B0414_val = lv_rand;
        if (auto044B0414_val == 0) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F0FF58A6"), StringExternal("Param/Value/C99BD124"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto044B0414_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A1149495"), StringExternal("Param/Value/8E067E9B"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto044B0414_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/057E3D87"), StringExternal("Param/Value/6779075E"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto044B0414_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F196FBF7"), StringExternal("Param/Value/2DEC4BF3"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto044B0414_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8C5BFDCD"), StringExternal("Param/Value/B6BCC831"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto044B0414_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/48FC0CF1"), StringExternal("Param/Value/117E31CE"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto427E0A95_val = lv_rand;
        if (auto427E0A95_val == 0) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C0D2B376"), StringExternal("Param/Value/D2952664"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto427E0A95_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/BFCE6640"), StringExternal("Param/Value/C2ACC4AF"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto427E0A95_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/44988FEE"), StringExternal("Param/Value/6C34C319"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto427E0A95_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8ECFEEB6"), StringExternal("Param/Value/022A1D4F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto427E0A95_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B839792C"), StringExternal("Param/Value/F9261685"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto427E0A95_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C913C730"), StringExternal("Param/Value/C75B610F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransportUnloaded_Init () {
    gt_TransmissionTransportUnloaded = TriggerCreate("gt_TransmissionTransportUnloaded_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport Partially Unloaded
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransportPartiallyUnloaded_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand2;

    // Automatic Variable Declarations
    int auto21D17733_val;
    int auto57C04D3C_val;

    // Variable Initialization
    lv_rand2 = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto21D17733_val = lv_rand2;
        if (auto21D17733_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/95DA48F7"), StringExternal("Param/Value/0A3AB7CF"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto21D17733_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C3B375FD"), StringExternal("Param/Value/2E73EF05"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto21D17733_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B0449065"), StringExternal("Param/Value/5AD00370"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto57C04D3C_val = lv_rand2;
        if (auto57C04D3C_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/69F1D7A9"), StringExternal("Param/Value/DE740847"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto57C04D3C_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/4FCBD2DE"), StringExternal("Param/Value/25ADBC11"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto57C04D3C_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/1089651C"), StringExternal("Param/Value/736C9629"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransportPartiallyUnloaded_Init () {
    gt_TransmissionTransportPartiallyUnloaded = TriggerCreate("gt_TransmissionTransportPartiallyUnloaded_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport Unloaded Then Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransportUnloadedThenDestroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand2;

    // Automatic Variable Declarations
    int auto8018718D_val;
    int autoD0CC608A_val;

    // Variable Initialization
    lv_rand2 = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto8018718D_val = lv_rand2;
        if (auto8018718D_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/534DF30C"), StringExternal("Param/Value/333DC095"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto8018718D_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B839686A"), StringExternal("Param/Value/34A2ABFA"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto8018718D_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/0723F018"), StringExternal("Param/Value/15E41EFE"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        autoD0CC608A_val = lv_rand2;
        if (autoD0CC608A_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DC43ABFA"), StringExternal("Param/Value/EE64071D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD0CC608A_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8159E7D5"), StringExternal("Param/Value/14283B9A"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD0CC608A_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/783B6029"), StringExternal("Param/Value/6D6A4AE1"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransportUnloadedThenDestroyed_Init () {
    gt_TransmissionTransportUnloadedThenDestroyed = TriggerCreate("gt_TransmissionTransportUnloadedThenDestroyed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Victory
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionVictory_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto446F6EF3_val;
    int auto0CDCFFD9_val;

    // Variable Initialization
    lv_rand = RandomInt(0, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto446F6EF3_val = lv_rand;
        if (auto446F6EF3_val == 0) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/208F1CFD"), StringExternal("Param/Value/E67B64D7"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto446F6EF3_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7990C09C"), StringExternal("Param/Value/DB20682B"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto446F6EF3_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/6B0417C6"), StringExternal("Param/Value/B0480985"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto446F6EF3_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5A29A816"), StringExternal("Param/Value/02AC0A60"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto0CDCFFD9_val = lv_rand;
        if (auto0CDCFFD9_val == 0) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/37B12B1A"), StringExternal("Param/Value/723DE23E"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto0CDCFFD9_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DBE41900"), StringExternal("Param/Value/FC4D9668"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto0CDCFFD9_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/AAC0ABED"), StringExternal("Param/Value/10879F55"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto0CDCFFD9_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/163A6E38"), StringExternal("Param/Value/977EEC31"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionVictory_Init () {
    gt_TransmissionVictory = TriggerCreate("gt_TransmissionVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport Lost
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransportLost_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto41BC857B_val;
    int auto46C9CDFB_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto41BC857B_val = lv_rand;
        if (auto41BC857B_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/AC639D02"), StringExternal("Param/Value/02F91D67"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto41BC857B_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/20A5A41B"), StringExternal("Param/Value/3BD1764F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto41BC857B_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7DDDE723"), StringExternal("Param/Value/61DA943D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto41BC857B_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/53D1B684"), StringExternal("Param/Value/C696B9C1"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto41BC857B_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B48AC471"), StringExternal("Param/Value/0417FDE3"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto46C9CDFB_val = lv_rand;
        if (auto46C9CDFB_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/683EB0D5"), StringExternal("Param/Value/2910A228"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto46C9CDFB_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CC90A28A"), StringExternal("Param/Value/1AEBF309"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto46C9CDFB_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E3F20DBE"), StringExternal("Param/Value/9818E660"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto46C9CDFB_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/10C45666"), StringExternal("Param/Value/73C68B55"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto46C9CDFB_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CD9C1524"), StringExternal("Param/Value/F31AB82D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransportLost_Init () {
    gt_TransmissionTransportLost = TriggerCreate("gt_TransmissionTransportLost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Transport Lost Defeat
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionTransportLostDefeat_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int auto44E0BBB2_val;
    int auto20C684FF_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        auto44E0BBB2_val = lv_rand;
        if (auto44E0BBB2_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D1673AF2"), StringExternal("Param/Value/2E2F3267"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto44E0BBB2_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B102793F"), StringExternal("Param/Value/BAEF7DC5"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto44E0BBB2_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/76C42CF9"), StringExternal("Param/Value/B6A709BD"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto44E0BBB2_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/4A264D91"), StringExternal("Param/Value/69447B28"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto44E0BBB2_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/661D1BE9"), StringExternal("Param/Value/1A64C9FB"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto20C684FF_val = lv_rand;
        if (auto20C684FF_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/15ABEE8F"), StringExternal("Param/Value/670C0F3B"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto20C684FF_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/3377B867"), StringExternal("Param/Value/5542223F"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto20C684FF_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7BD6CB32"), StringExternal("Param/Value/A3B7EBF0"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto20C684FF_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/99CDD6AB"), StringExternal("Param/Value/B27C7693"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto20C684FF_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/5F994A49"), StringExternal("Param/Value/8DE0A784"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionTransportLostDefeat_Init () {
    gt_TransmissionTransportLostDefeat = TriggerCreate("gt_TransmissionTransportLostDefeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transmission Science Facility Defeat
//--------------------------------------------------------------------------------------------------
bool gt_TransmissionScienceFacilityDefeat_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int autoC307E3A7_val;
    int auto204E1D72_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoC307E3A7_val = lv_rand;
        if (autoC307E3A7_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CBB24E68"), StringExternal("Param/Value/0BB0195D"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoC307E3A7_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/29C67760"), StringExternal("Param/Value/F35ED4A9"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoC307E3A7_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/24BAA617"), StringExternal("Param/Value/6273242E"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoC307E3A7_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2E547566"), StringExternal("Param/Value/50889070"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoC307E3A7_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/370A8619"), StringExternal("Param/Value/1B8EB5B9"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto204E1D72_val = lv_rand;
        if (auto204E1D72_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/4C229376"), StringExternal("Param/Value/EEB6E412"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto204E1D72_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9122D5CB"), StringExternal("Param/Value/F1B0FCC9"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto204E1D72_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/DF29EB92"), StringExternal("Param/Value/11E929D2"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto204E1D72_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A81395D6"), StringExternal("Param/Value/88D39388"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto204E1D72_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CB49D7C6"), StringExternal("Param/Value/80FD45A6"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransmissionScienceFacilityDefeat_Init () {
    gt_TransmissionScienceFacilityDefeat = TriggerCreate("gt_TransmissionScienceFacilityDefeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Bonus Manually 1
//--------------------------------------------------------------------------------------------------
bool gt_StartBonusManually1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_BonusObjecteve12, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartBonusManually1_Init () {
    gt_StartBonusManually1 = TriggerCreate("gt_StartBonusManually1_Func");
    TriggerAddEventUnitRegion(gt_StartBonusManually1, null, RegionFromId(15), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Bonus Manually 2
//--------------------------------------------------------------------------------------------------
bool gt_StartBonusManually2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_BonusObjecteve34, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartBonusManually2_Init () {
    gt_StartBonusManually2 = TriggerCreate("gt_StartBonusManually2_Func");
    TriggerAddEventUnitRegion(gt_StartBonusManually2, null, RegionFromId(11), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Objecteve 1/2
//--------------------------------------------------------------------------------------------------
bool gt_BonusObjecteve12_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    int autoE61B2A3B_val;
    unitgroup autoC042E328_g;
    int autoC042E328_u;
    unit autoC042E328_var;
    unitgroup auto93064D3F_g;
    int auto93064D3F_u;
    unit auto93064D3F_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_StartBonusManually1, false);
    autoE61B2A3B_val = gv_bonusRand1;
    if (autoE61B2A3B_val == 1) {
        TriggerExecute(gt_TransmissionBonusObjective11Start, true, false);
        ObjectiveCreateForPlayers(StringExternal("Param/Value/F0568DD9"), StringExternal("Param/Value/A3C00BCE"), c_objectiveStateActive, false, PlayerGroupAll());
        gv_bonusObjective[1] = ObjectiveLastCreated();
        libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingBonus", PointFromId(295425141), Color(97.65, 76.86, 27.45), 0.0);
        gv_bonusPing[1] = PingLastCreated();
        PingSetTooltip(gv_bonusPing[1], StringExternal("Param/Value/052C84E0"));
        UnitRemove(UnitFromId(1361234545));
        UnitCreate(4, "VikingAssault", 0, 0, PointFromId(295425141), 270.0);
        gv_bonusUnitGroup[1] = UnitLastCreatedGroup();
    }
    else if (autoE61B2A3B_val == 2) {
        TriggerExecute(gt_TransmissionBonusObjective12Start, true, false);
        ObjectiveCreateForPlayers(StringExternal("Param/Value/F001B5ED"), StringExternal("Param/Value/3354CE16"), c_objectiveStateActive, false, PlayerGroupAll());
        gv_bonusObjective[1] = ObjectiveLastCreated();
        libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingBonus", PointFromId(295425141), Color(97.65, 76.86, 27.45), 0.0);
        gv_bonusPing[1] = PingLastCreated();
        PingSetTooltip(gv_bonusPing[1], StringExternal("Param/Value/1AD3098B"));
        UnitRemove(UnitFromId(1361234545));
        UnitCreate(2, "ScienceVessel", 0, 0, PointFromId(295425141), 270.0);
        gv_bonusUnitGroup[1] = UnitLastCreatedGroup();
        autoC042E328_g = gv_bonusUnitGroup[1];
        autoC042E328_u = UnitGroupCount(autoC042E328_g, c_unitCountAll);
        for (;; autoC042E328_u -= 1) {
            autoC042E328_var = UnitGroupUnitFromEnd(autoC042E328_g, autoC042E328_u);
            if (autoC042E328_var == null) { break; }
            UnitSetPropertyFixed(autoC042E328_var, c_unitPropEnergyRegen, 5.0);
        }
    }
    else {
    }
    auto93064D3F_g = gv_bonusUnitGroup[1];
    auto93064D3F_u = UnitGroupCount(auto93064D3F_g, c_unitCountAll);
    for (;; auto93064D3F_u -= 1) {
        auto93064D3F_var = UnitGroupUnitFromEnd(auto93064D3F_g, auto93064D3F_u);
        if (auto93064D3F_var == null) { break; }
        UnitSetPropertyFixed(auto93064D3F_var, c_unitPropLifeMax, (UnitGetPropertyFixed(auto93064D3F_var, c_unitPropLifeMax, c_unitPropCurrent) * 1.5));
        UnitSetPropertyFixed(auto93064D3F_var, c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(auto93064D3F_var, c_unitPropMovementSpeed, 5.0);
        libNtve_gf_MakeUnitInvulnerable(auto93064D3F_var, true);
    }
    TriggerExecute(gt_CheckForBonusCompletion1, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusObjecteve12_Init () {
    gt_BonusObjecteve12 = TriggerCreate("gt_BonusObjecteve12_Func");
    TriggerAddEventTimeElapsed(gt_BonusObjecteve12, 530.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bonus Objecteve 3/4
//--------------------------------------------------------------------------------------------------
bool gt_BonusObjecteve34_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto13E4DCE5_val;
    unitgroup auto6100A21F_g;
    int auto6100A21F_u;
    unit auto6100A21F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_StartBonusManually2, false);
    auto13E4DCE5_val = gv_bonusRand2;
    if (auto13E4DCE5_val == 1) {
        TriggerExecute(gt_TransmissionBonusObjective21Start, true, false);
        ObjectiveCreateForPlayers(StringExternal("Param/Value/050ADC26"), StringExternal("Param/Value/682694FD"), c_objectiveStateActive, false, PlayerGroupAll());
        gv_bonusObjective[2] = ObjectiveLastCreated();
        libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingBonus", PointFromId(1881462836), Color(97.65, 76.86, 27.45), 0.0);
        gv_bonusPing[2] = PingLastCreated();
        PingSetTooltip(gv_bonusPing[2], StringExternal("Param/Value/F42F1995"));
        UnitRemove(UnitFromId(1150906052));
        UnitCreate(2, "SiegeTank", 0, 0, PointFromId(1881462836), 270.0);
        gv_bonusUnitGroup[2] = UnitLastCreatedGroup();
    }
    else if (auto13E4DCE5_val == 2) {
        TriggerExecute(gt_TransmissionBonusObjective22Start, true, false);
        ObjectiveCreateForPlayers(StringExternal("Param/Value/EA3CF084"), StringExternal("Param/Value/6FC8F2C0"), c_objectiveStateActive, false, PlayerGroupAll());
        gv_bonusObjective[2] = ObjectiveLastCreated();
        libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingBonus", PointFromId(1881462836), Color(97.65, 76.86, 27.45), 0.0);
        gv_bonusPing[2] = PingLastCreated();
        PingSetTooltip(gv_bonusPing[2], StringExternal("Param/Value/C415EF76"));
        UnitRemove(UnitFromId(1150906052));
        UnitCreate(4, "Goliath", 0, 0, PointFromId(1881462836), 270.0);
        gv_bonusUnitGroup[2] = UnitLastCreatedGroup();
    }
    else {
    }
    auto6100A21F_g = gv_bonusUnitGroup[2];
    auto6100A21F_u = UnitGroupCount(auto6100A21F_g, c_unitCountAll);
    for (;; auto6100A21F_u -= 1) {
        auto6100A21F_var = UnitGroupUnitFromEnd(auto6100A21F_g, auto6100A21F_u);
        if (auto6100A21F_var == null) { break; }
        UnitSetPropertyFixed(auto6100A21F_var, c_unitPropLifeMax, (UnitGetPropertyFixed(auto6100A21F_var, c_unitPropLifeMax, c_unitPropCurrent) * 1.5));
        UnitSetPropertyFixed(auto6100A21F_var, c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(auto6100A21F_var, c_unitPropMovementSpeed, 5.0);
        libNtve_gf_MakeUnitInvulnerable(auto6100A21F_var, true);
    }
    TriggerExecute(gt_CheckForBonusCompletion2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BonusObjecteve34_Init () {
    gt_BonusObjecteve34 = TriggerCreate("gt_BonusObjecteve34_Func");
    TriggerAddEventTimeElapsed(gt_BonusObjecteve34, 630.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Check For Bonus Completion 1
//--------------------------------------------------------------------------------------------------
bool gt_CheckForBonusCompletion1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoD4045C2B_g;
    int autoD4045C2B_u;
    unit autoD4045C2B_var;
    unitgroup auto6F5CA059_g;
    int auto6F5CA059_u;
    unit auto6F5CA059_var;
    unitgroup auto067010FD_g;
    int auto067010FD_u;
    unit auto067010FD_var;
    unitgroup auto10550D83_g;
    int auto10550D83_u;
    unit auto10550D83_var;

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((UnitGroupCount(UnitGroup(null, 3, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup(null, 4, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0))) {
        Wait(1.0, c_timeGame);
    }
    ObjectiveSetState(gv_bonusObjective[1], c_objectiveStateCompleted);
    libCOMI_gf_DestroyPingCoop(gv_bonusPing[1]);
    TriggerExecute(gt_TransmissionBonusObjectiveComplete, true, false);
    if ((gv_bonusRand1 == 1)) {
        auto6F5CA059_g = gv_bonusUnitGroup[1];
        auto6F5CA059_u = UnitGroupCount(auto6F5CA059_g, c_unitCountAll);
        for (;; auto6F5CA059_u -= 1) {
            auto6F5CA059_var = UnitGroupUnitFromEnd(auto6F5CA059_g, auto6F5CA059_u);
            if (auto6F5CA059_var == null) { break; }
            UnitIssueOrder(auto6F5CA059_var, Order(AbilityCommand("FighterMode", 0)), c_orderQueueReplace);
            UnitIssueOrder(auto6F5CA059_var, Order(AbilityCommand("FighterMode", 0)), c_orderQueueReplace);
        }
        Wait(2.0, c_timeGame);
        auto067010FD_g = gv_bonusUnitGroup[1];
        auto067010FD_u = UnitGroupCount(auto067010FD_g, c_unitCountAll);
        for (;; auto067010FD_u -= 1) {
            auto067010FD_var = UnitGroupUnitFromEnd(auto067010FD_g, auto067010FD_u);
            if (auto067010FD_var == null) { break; }
            UnitSetPropertyFixed(auto067010FD_var, c_unitPropMovementSpeed, 5.0);
            UnitIssueOrder(auto067010FD_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1645298066)), c_orderQueueReplace);
        }
    }
    else {
        autoD4045C2B_g = gv_bonusUnitGroup[1];
        autoD4045C2B_u = UnitGroupCount(autoD4045C2B_g, c_unitCountAll);
        for (;; autoD4045C2B_u -= 1) {
            autoD4045C2B_var = UnitGroupUnitFromEnd(autoD4045C2B_g, autoD4045C2B_u);
            if (autoD4045C2B_var == null) { break; }
            UnitIssueOrder(autoD4045C2B_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1645298066)), c_orderQueueReplace);
        }
    }
    while (!((libNtve_gf_UnitInRegion(UnitGroupRandomUnit(gv_bonusUnitGroup[1], c_unitCountAlive), RegionCircle(PointFromId(1645298066), 5.0)) == true))) {
        Wait(1.0, c_timeGame);
    }
    auto10550D83_g = gv_bonusUnitGroup[1];
    auto10550D83_u = UnitGroupCount(auto10550D83_g, c_unitCountAll);
    for (;; auto10550D83_u -= 1) {
        auto10550D83_var = UnitGroupUnitFromEnd(auto10550D83_g, auto10550D83_u);
        if (auto10550D83_var == null) { break; }
        UnitSetOwner(auto10550D83_var, 5, true);
        libNtve_gf_MakeUnitInvulnerable(auto10550D83_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CheckForBonusCompletion1_Init () {
    gt_CheckForBonusCompletion1 = TriggerCreate("gt_CheckForBonusCompletion1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Check For Bonus Completion 2
//--------------------------------------------------------------------------------------------------
bool gt_CheckForBonusCompletion2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoAB989FFE_g;
    int autoAB989FFE_u;
    unit autoAB989FFE_var;
    unitgroup auto348103CD_g;
    int auto348103CD_u;
    unit auto348103CD_var;
    unitgroup auto0D52910D_g;
    int auto0D52910D_u;
    unit auto0D52910D_var;
    unitgroup autoAB40F839_g;
    int autoAB40F839_u;
    unit autoAB40F839_var;

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((UnitGroupCount(UnitGroup(null, 3, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup(null, 4, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0))) {
        Wait(1.0, c_timeGame);
    }
    ObjectiveSetState(gv_bonusObjective[2], c_objectiveStateCompleted);
    libCOMI_gf_DestroyPingCoop(gv_bonusPing[2]);
    TriggerExecute(gt_TransmissionBonusObjectiveComplete, true, false);
    if ((gv_bonusRand2 == 1)) {
        auto0D52910D_g = gv_bonusUnitGroup[2];
        auto0D52910D_u = UnitGroupCount(auto0D52910D_g, c_unitCountAll);
        for (;; auto0D52910D_u -= 1) {
            auto0D52910D_var = UnitGroupUnitFromEnd(auto0D52910D_g, auto0D52910D_u);
            if (auto0D52910D_var == null) { break; }
            UnitBehaviorAddPlayer(auto0D52910D_var, "SuppressCollision", 3, 1);
            UnitIssueOrder(auto0D52910D_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(569689564)), c_orderQueueReplace);
        }
        while (!((libNtve_gf_UnitInRegion(UnitGroupRandomUnit(gv_bonusUnitGroup[2], c_unitCountAlive), RegionFromId(10)) == true))) {
            Wait(1.0, c_timeGame);
        }
        Wait(8.0, c_timeGame);
        autoAB40F839_g = gv_bonusUnitGroup[2];
        autoAB40F839_u = UnitGroupCount(autoAB40F839_g, c_unitCountAll);
        for (;; autoAB40F839_u -= 1) {
            autoAB40F839_var = UnitGroupUnitFromEnd(autoAB40F839_g, autoAB40F839_u);
            if (autoAB40F839_var == null) { break; }
            UnitSetOwner(autoAB40F839_var, 5, true);
            libNtve_gf_MakeUnitInvulnerable(autoAB40F839_var, false);
            UnitIssueOrder(autoAB40F839_var, Order(AbilityCommand("SiegeMode", 0)), c_orderQueueReplace);
        }
    }
    else {
        autoAB989FFE_g = gv_bonusUnitGroup[2];
        autoAB989FFE_u = UnitGroupCount(autoAB989FFE_g, c_unitCountAll);
        for (;; autoAB989FFE_u -= 1) {
            autoAB989FFE_var = UnitGroupUnitFromEnd(autoAB989FFE_g, autoAB989FFE_u);
            if (autoAB989FFE_var == null) { break; }
            UnitBehaviorAddPlayer(autoAB989FFE_var, "SuppressCollision", 3, 1);
            UnitIssueOrder(autoAB989FFE_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(569689564)), c_orderQueueReplace);
        }
        while (!((libNtve_gf_UnitInRegion(UnitGroupRandomUnit(gv_bonusUnitGroup[2], c_unitCountAlive), RegionFromId(10)) == true))) {
            Wait(1.0, c_timeGame);
        }
        Wait(5.0, c_timeGame);
        auto348103CD_g = gv_bonusUnitGroup[2];
        auto348103CD_u = UnitGroupCount(auto348103CD_g, c_unitCountAll);
        for (;; auto348103CD_u -= 1) {
            auto348103CD_var = UnitGroupUnitFromEnd(auto348103CD_g, auto348103CD_u);
            if (auto348103CD_var == null) { break; }
            UnitSetOwner(auto348103CD_var, 5, true);
            libNtve_gf_MakeUnitInvulnerable(auto348103CD_var, false);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CheckForBonusCompletion2_Init () {
    gt_CheckForBonusCompletion2 = TriggerCreate("gt_CheckForBonusCompletion2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Facility Under Fire
//--------------------------------------------------------------------------------------------------
bool gt_FacilityUnderFire_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;
    int lv_rand2;

    // Automatic Variable Declarations
    int autoC738CA8E_val;
    int auto6E44BEA3_val;
    int autoC3E96BB7_val;
    int autoE40C1C78_val;
    int auto7B363256_val;
    int autoCCDC6CF5_val;
    int auto9B0A98C3_val;
    int auto7FD63001_val;
    int auto96902718_val;
    int autoF3AE20DB_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);
    lv_rand2 = RandomInt(1, 2);

    // Conditions
    if (testConds) {
        if (!((ObjectiveGetState(gv_facilityObjective) == c_objectiveStateActive))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "ScienceFacility"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingAlert", UnitGetPosition(EventUnit()), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 4.0);
    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 80.0)) {
            if ((gv_transmissionCalled[1] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A8EEF39C"), StringExternal("Param/Value/F77EE66D"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[1] = true;
            }
            else {
                autoC738CA8E_val = lv_rand2;
                if (autoC738CA8E_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B6B69566"), StringExternal("Param/Value/7270CBF0"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (autoC738CA8E_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CAA9085E"), StringExternal("Param/Value/E1278CC0"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 80.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 60.0)) {
            if ((gv_transmissionCalled[2] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/63FEDC90"), StringExternal("Param/Value/9BA18068"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[2] = true;
            }
            else {
                auto6E44BEA3_val = lv_rand2;
                if (auto6E44BEA3_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/34597AFF"), StringExternal("Param/Value/C63697CA"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (auto6E44BEA3_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/06E9B3A4"), StringExternal("Param/Value/7E0EDF75"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 60.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 40.0)) {
            if ((gv_transmissionCalled[3] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CD9D0AA8"), StringExternal("Param/Value/68453087"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[3] = true;
            }
            else {
                autoC3E96BB7_val = lv_rand2;
                if (autoC3E96BB7_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2F29838C"), StringExternal("Param/Value/1E56E9D5"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (autoC3E96BB7_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A8ECC809"), StringExternal("Param/Value/CD79D19B"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 40.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 20.0)) {
            if ((gv_transmissionCalled[4] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/91C99243"), StringExternal("Param/Value/E8D845AF"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[4] = true;
            }
            else {
                autoE40C1C78_val = lv_rand2;
                if (autoE40C1C78_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D3D1A385"), StringExternal("Param/Value/C453BBE5"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (autoE40C1C78_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CF79F0E8"), StringExternal("Param/Value/46E6B475"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 20.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 0.0)) {
            if ((gv_transmissionCalled[5] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/FDD76666"), StringExternal("Param/Value/D1AFB98A"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[5] = true;
            }
            else {
                auto7B363256_val = lv_rand2;
                if (auto7B363256_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/487A34E7"), StringExternal("Param/Value/E5B21EB3"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (auto7B363256_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/EFAA5F30"), StringExternal("Param/Value/34C54E68"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 80.0)) {
            if ((gv_transmissionCalled[1] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/BA477021"), StringExternal("Param/Value/29A43D72"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[1] = true;
            }
            else {
                autoCCDC6CF5_val = lv_rand2;
                if (autoCCDC6CF5_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/10FA8E36"), StringExternal("Param/Value/AB625199"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (autoCCDC6CF5_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/17FC5D62"), StringExternal("Param/Value/689B79E7"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 80.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 60.0)) {
            if ((gv_transmissionCalled[2] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/187B6680"), StringExternal("Param/Value/8B5786FB"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[2] = true;
            }
            else {
                auto9B0A98C3_val = lv_rand2;
                if (auto9B0A98C3_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/F2B59A95"), StringExternal("Param/Value/DF55FF18"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (auto9B0A98C3_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/53820EDE"), StringExternal("Param/Value/04AFC2C6"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 60.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 40.0)) {
            if ((gv_transmissionCalled[3] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D0C33426"), StringExternal("Param/Value/97B4B1F4"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[3] = true;
            }
            else {
                auto7FD63001_val = lv_rand2;
                if (auto7FD63001_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/82A2A3FD"), StringExternal("Param/Value/083EB009"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (auto7FD63001_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/03542F8F"), StringExternal("Param/Value/3F19E62C"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 40.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 20.0)) {
            if ((gv_transmissionCalled[4] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/1104AF38"), StringExternal("Param/Value/EB97CCCF"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[4] = true;
            }
            else {
                auto96902718_val = lv_rand2;
                if (auto96902718_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/937251C4"), StringExternal("Param/Value/83DE168A"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (auto96902718_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8D1EBFB8"), StringExternal("Param/Value/F3B165E5"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        else if ((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 20.0) && (UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) >= 0.0)) {
            if ((gv_transmissionCalled[5] == false)) {
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/6181CE02"), StringExternal("Param/Value/5DBE66E1"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                gv_transmissionCalled[5] = true;
            }
            else {
                autoF3AE20DB_val = lv_rand2;
                if (autoF3AE20DB_val == 1) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2B16CA37"), StringExternal("Param/Value/E970864E"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else if (autoF3AE20DB_val == 2) {
                    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/51316E86"), StringExternal("Param/Value/36DEA928"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
                }
                else {
                }
            }
        }
        gv_pos += 1;
    }
    Wait(30.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FacilityUnderFire_Init () {
    gt_FacilityUnderFire = TriggerCreate("gt_FacilityUnderFire_Func");
    TriggerAddEventUnitDamaged(gt_FacilityUnderFire, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attacks on Facility Hard/Brut
//--------------------------------------------------------------------------------------------------
bool gt_AttacksonFacilityHardBrut_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    int auto681FC791_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TriggerGetExecCount(TriggerGetCurrent()) == 0)) {
        auto681FC791_val = lv_rand;
        if (auto681FC791_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A9AE5B59"), StringExternal("Param/Value/B59D0CB5"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/93F54775"), StringExternal("Param/Value/7EF071FC"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto681FC791_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/7BD4F08F"), StringExternal("Param/Value/1BB02368"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/25395EA2"), StringExternal("Param/Value/2A0C43C4"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (auto681FC791_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/EDCF121D"), StringExternal("Param/Value/5C71EDB4"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/8EF80B32"), StringExternal("Param/Value/8092AA5D"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }

    if ((gv_enemyStrengthInc == 0)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest, libCOMI_ge_CoopAITechLevelBuckets__1Early, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    else if ((gv_enemyStrengthInc == 1)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__3Small, libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    else if ((gv_enemyStrengthInc >= 2)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__5Large, libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttacksonFacilityHardBrut_Init () {
    gt_AttacksonFacilityHardBrut = TriggerCreate("gt_AttacksonFacilityHardBrut_Func");
    TriggerEnable(gt_AttacksonFacilityHardBrut, false);
    TriggerAddEventTimeElapsed(gt_AttacksonFacilityHardBrut, 22.5, c_timeGame);
    TriggerAddEventTimePeriodic(gt_AttacksonFacilityHardBrut, 45.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attacks on Facility Cas/Norm
//--------------------------------------------------------------------------------------------------
bool gt_AttacksonFacilityCasNorm_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    int autoDEA38C04_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TriggerGetExecCount(TriggerGetCurrent()) == 0)) {
        autoDEA38C04_val = lv_rand;
        if (autoDEA38C04_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C7EE2611"), StringExternal("Param/Value/52513BE1"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/57C5DAAC"), StringExternal("Param/Value/9439386E"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoDEA38C04_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/72AAD659"), StringExternal("Param/Value/32851AF8"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/A5A09F9C"), StringExternal("Param/Value/90800AFA"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else if (autoDEA38C04_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/1EA1C8CA"), StringExternal("Param/Value/412B1B4C"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D0D0F463"), StringExternal("Param/Value/42C9B61F"), 8.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        else {
        }
    }

    if ((gv_enemyStrengthInc == 0)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest, libCOMI_ge_CoopAITechLevelBuckets__1Early, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    else if ((gv_enemyStrengthInc == 1)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__3Small, libCOMI_ge_CoopAITechLevelBuckets__1Early, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    else if ((gv_enemyStrengthInc >= 2)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, UnitGetPosition(gv_facility));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, UnitGetPosition(gv_facility));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__5Large, libCOMI_ge_CoopAITechLevelBuckets__1Early, RegionRandomPoint(RegionFromId(12)), true);
        UnitGroupIssueOrder(libCOMI_gf_LastCreatedCoopAttackForce(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1299823556)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttacksonFacilityCasNorm_Init () {
    gt_AttacksonFacilityCasNorm = TriggerCreate("gt_AttacksonFacilityCasNorm_Func");
    TriggerEnable(gt_AttacksonFacilityCasNorm, false);
    TriggerAddEventTimeElapsed(gt_AttacksonFacilityCasNorm, 22.5, c_timeGame);
    TriggerAddEventTimePeriodic(gt_AttacksonFacilityCasNorm, 55.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Major Attack On Facility
//--------------------------------------------------------------------------------------------------
bool gt_MajorAttackOnFacility_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rand = RandomInt(1, 4);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((ObjectiveGetState(gv_facilityObjective) == c_objectiveStateActive)) {
        if ((TriggerGetExecCount(TriggerGetCurrent()) == 0)) {
            TriggerExecute(gt_TransmissionMajorAttack, true, false);
        }

    }

    if ((gv_enemyStrengthInc == 0)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(1299823556));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(1299823556));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__5Large, libCOMI_ge_CoopAITechLevelBuckets__4LateMid, RegionRandomPoint(RegionFromId(12)), true);
        libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 10, true);
    }
    else if ((gv_enemyStrengthInc == 1)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(1299823556));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(1299823556));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__6Larger, libCOMI_ge_CoopAITechLevelBuckets__5Late, RegionRandomPoint(RegionFromId(12)), true);
        libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 10, true);
    }
    else if ((gv_enemyStrengthInc >= 2)) {
        AIAttackWaveSetTargetPoint(gv_pLAYER_03_ENEMY, PointFromId(1299823556));
        AIAttackWaveSetTargetPoint(gv_pLAYER_04_ENEMY, PointFromId(1299823556));
        libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2(gv_pLAYER_03_ENEMY, gv_pLAYER_04_ENEMY, libCOMI_ge_CoopAIAttackWaveBuckets__7Largest, libCOMI_ge_CoopAITechLevelBuckets_TechLevel06, RegionRandomPoint(RegionFromId(12)), true);
        libCOMI_gf_SendAttackWaveusingCoopAttackForce(libCOMI_gf_LastCreatedCoopAttackForce(), 10, true);
    }
    gv_enemyStrengthInc += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MajorAttackOnFacility_Init () {
    gt_MajorAttackOnFacility = TriggerCreate("gt_MajorAttackOnFacility_Func");
    TriggerAddEventTimePeriodic(gt_MajorAttackOnFacility, 450.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport Under Fire
//--------------------------------------------------------------------------------------------------
bool gt_TransportUnderFire_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_position;
    bool lv_inQueue;
    int lv_rand;

    // Automatic Variable Declarations
    int autoD58ABDC5_val;
    int auto4860E1D7_val;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "TransportTruck"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libCOMI_gf_CreatePingCoop(PlayerGroupAll(), "PingAlert", UnitGetPosition(EventUnit()), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 4.0);
    if ((TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false)) {
        autoD58ABDC5_val = lv_rand;
        if (autoD58ABDC5_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/6E78896F"), StringExternal("Param/Value/895955C9"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD58ABDC5_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/075F6487"), StringExternal("Param/Value/63FC5467"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD58ABDC5_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/B5D42013"), StringExternal("Param/Value/676558DB"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD58ABDC5_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/49693F83"), StringExternal("Param/Value/A348434F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (autoD58ABDC5_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/D89EB06D"), StringExternal("Param/Value/1A446CF2"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
    }
    else {
        lv_inQueue = true;
        lv_position = gv_queue;
        gv_queue += 1;
        while (!((lv_position == gv_pos) && (TransmissionPlayerHasActiveTransmission(1) == false) && (TransmissionPlayerHasActiveTransmission(2) == false))) {
            Wait(1.0, c_timeGame);
        }
        auto4860E1D7_val = lv_rand;
        if (auto4860E1D7_val == 1) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/EDEDDD7B"), StringExternal("Param/Value/1CB69E3F"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto4860E1D7_val == 2) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/41F5AA88"), StringExternal("Param/Value/BAED9F71"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto4860E1D7_val == 3) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/3FC9CB44"), StringExternal("Param/Value/685073EE"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto4860E1D7_val == 4) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/CC1709A4"), StringExternal("Param/Value/8A0335D4"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else if (auto4860E1D7_val == 5) {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("HansonPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E0FD7BB7"), StringExternal("Param/Value/7B9C2168"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
        }
        else {
        }
        gv_pos += 1;
    }
    Wait(30.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransportUnderFire_Init () {
    gt_TransportUnderFire = TriggerCreate("gt_TransportUnderFire_Func");
    TriggerAddEventUnitDamaged(gt_TransportUnderFire, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 1
//--------------------------------------------------------------------------------------------------
bool gt_Transport1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rand = RandomInt(1, 4);

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_TransmissionTransport1, true, false);
    gv_transport[1] = UnitFromId(1150455333);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    UnitSetPropertyFixed(gv_transport[1], c_unitPropLifeMax, 2700.0);
    UnitSetPropertyFixed(gv_transport[1], c_unitPropLife, 2700.0);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[1][1], 1, 1, gv_transportRows[1], Color(0.00, 100.00, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport1_Init () {
    gt_Transport1 = TriggerCreate("gt_Transport1_Func");
    TriggerAddEventTimeElapsed(gt_Transport1, 240.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 2
//--------------------------------------------------------------------------------------------------
bool gt_Transport2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = RandomInt(1, 3);
    lv_rand = RandomInt(1, 2);

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((TriggerActiveCount(gt_Transport1) == 0))) {
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_TransmissionTransport2, true, false);
    gv_transport[1] = UnitFromId(609598098);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[2][lv_randPath], 2, lv_randPath, gv_transportRows[2], Color(0.00, 100.00, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport2_Init () {
    gt_Transport2 = TriggerCreate("gt_Transport2_Func");
    TriggerAddEventTimeElapsed(gt_Transport2, 480.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 3
//--------------------------------------------------------------------------------------------------
bool gt_Transport3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;
    int lv_randPath;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rand = RandomInt(1, 2);
    lv_randPath = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((TriggerActiveCount(gt_Transport2) == 0))) {
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_TransmissionTransport3, true, false);
    gv_transport[1] = UnitFromId(789534300);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[3][lv_randPath], 3, lv_randPath, gv_transportRows[3], Color(0.00, 100.00, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport3_Init () {
    gt_Transport3 = TriggerCreate("gt_Transport3_Func");
    TriggerAddEventTimeElapsed(gt_Transport3, 720.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 4 1
//--------------------------------------------------------------------------------------------------
bool gt_Transport41_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = RandomInt(1, 2);
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    gv__4th2ndPath = lv_randPath;
    while (!((TriggerActiveCount(gt_Transport3) == 0))) {
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_TransmissionTransport4, true, false);
    gv_transport[1] = UnitFromId(1401833827);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    TriggerExecute(gt_Transport42, true, false);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[4][lv_randPath], 4, lv_randPath, gv_transportRows[1], Color(0.00, 100.00, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport41_Init () {
    gt_Transport41 = TriggerCreate("gt_Transport41_Func");
    TriggerAddEventTimeElapsed(gt_Transport41, 960.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 4 2
//--------------------------------------------------------------------------------------------------
bool gt_Transport42_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = 3;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv__4th2ndPath == 1)) {
        lv_randPath = 4;
    }
    else {
        lv_randPath = 3;
    }
    Wait(20.0, c_timeGame);
    gv_transport[2] = UnitFromId(1567756432);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[2], false);
    UnitResetSpeed(gv_transport[2]);
    gf_TransportDirection(gv_transport[2], gv_transportTarget[4][lv_randPath], 4, lv_randPath, gv_transportRows[2], Color(0.00, 0.00, 100.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport42_Init () {
    gt_Transport42 = TriggerCreate("gt_Transport42_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 5 1
//--------------------------------------------------------------------------------------------------
bool gt_Transport51_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = RandomInt(1, 2);
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((TriggerActiveCount(gt_Transport41) == 0) && (TriggerActiveCount(gt_Transport42) == 0))) {
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_TransmissionTransport5, true, false);
    gv_transport[1] = UnitFromId(1677643250);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    TriggerExecute(gt_Transport52, true, false);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[5][lv_randPath], 5, lv_randPath, gv_transportRows[3], Color(0.00, 100.00, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport51_Init () {
    gt_Transport51 = TriggerCreate("gt_Transport51_Func");
    TriggerAddEventTimeElapsed(gt_Transport51, 1200.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 5 2
//--------------------------------------------------------------------------------------------------
bool gt_Transport52_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = RandomInt(3, 4);

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(20.0, c_timeGame);
    gv_transport[2] = UnitFromId(1910016611);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[2], false);
    UnitResetSpeed(gv_transport[2]);
    TriggerExecute(gt_Transport53, true, false);
    gf_TransportDirection(gv_transport[2], gv_transportTarget[5][lv_randPath], 5, lv_randPath, gv_transportRows[1], Color(0.00, 0.00, 100.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport52_Init () {
    gt_Transport52 = TriggerCreate("gt_Transport52_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 5 3
//--------------------------------------------------------------------------------------------------
bool gt_Transport53_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randPath;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randPath = 5;

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(20.0, c_timeGame);
    gv_transport[3] = UnitFromId(642246473);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[3], false);
    UnitResetSpeed(gv_transport[3]);
    gf_TransportDirection(gv_transport[3], gv_transportTarget[5][lv_randPath], 5, lv_randPath, gv_transportRows[2], Color(100.00, 50.20, 0.00));
    gv_transportCount += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport53_Init () {
    gt_Transport53 = TriggerCreate("gt_Transport53_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transport 6
//--------------------------------------------------------------------------------------------------
bool gt_Transport6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rand;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rand = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((TriggerActiveCount(gt_Transport51) == 0) && (TriggerActiveCount(gt_Transport52) == 0) && (TriggerActiveCount(gt_Transport53) == 0))) {
        Wait(1.0, c_timeGame);
    }
    TriggerExecute(gt_TransmissionTransport6, true, false);
    gv_transport[1] = UnitFromId(2019740771);
    libNtve_gf_MakeUnitInvulnerable(gv_transport[1], false);
    UnitResetSpeed(gv_transport[1]);
    gf_TransportDirection(gv_transport[1], gv_transportTarget[6][1], 6, 1, gv_transportRows[3], Color(0.00, 100.00, 0.00));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transport6_Init () {
    gt_Transport6 = TriggerCreate("gt_Transport6_Func");
    TriggerAddEventTimeElapsed(gt_Transport6, 1440.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat/Objective Lost
//--------------------------------------------------------------------------------------------------
bool gt_DefeatObjectiveLost_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;
    int lv_rand;

    // Automatic Variable Declarations
    unitgroup auto0421FFA8_g;
    int auto0421FFA8_u;
    unit auto0421FFA8_var;
    unitgroup auto56E9BB26_g;
    int auto56E9BB26_u;
    unit auto56E9BB26_var;

    // Variable Initialization
    lv_rand = RandomInt(1, 5);

    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 5)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "TransportTruck") && (UnitGetOwner(EventUnit()) == 5)) {
        auto0421FFA8_g = UnitGroup("CivilianFemale", c_playerAny, RegionCircle(UnitGetPosition(EventUnit()), 1.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto0421FFA8_u = UnitGroupCount(auto0421FFA8_g, c_unitCountAll);
        for (;; auto0421FFA8_u -= 1) {
            auto0421FFA8_var = UnitGroupUnitFromEnd(auto0421FFA8_g, auto0421FFA8_u);
            if (auto0421FFA8_var == null) { break; }
            UnitRemove(auto0421FFA8_var);
            gv_civiliansLost += 1;
        }
        auto56E9BB26_g = UnitGroup("Civilian", c_playerAny, RegionCircle(UnitGetPosition(EventUnit()), 1.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto56E9BB26_u = UnitGroupCount(auto56E9BB26_g, c_unitCountAll);
        for (;; auto56E9BB26_u -= 1) {
            auto56E9BB26_var = UnitGroupUnitFromEnd(auto56E9BB26_g, auto56E9BB26_u);
            if (auto56E9BB26_var == null) { break; }
            UnitRemove(auto56E9BB26_var);
            gv_civiliansLost += 1;
        }
        ObjectiveSetName(gv_transportObjective, (StringExternal("Param/Value/BBA82915") + IntToText(gv_civiliansEvacuated) + StringExternal("Param/Value/79DC624C") + IntToText(gv_civiliansLost) + StringExternal("Param/Value/B36C0419")));
        if ((gv_civiliansLost >= 100)) {
            ObjectiveSetName(gv_transportObjective, StringExternal("Param/Value/FE23B55E"));
            TriggerEnable(gt_Transport51, false);
            TriggerEnable(gt_Transport52, false);
            TriggerEnable(gt_Transport53, false);
            TriggerEnable(gt_Transport6, false);
            TriggerEnable(gt_DefeatObjectiveLost, false);
            TriggerStop(gt_Transport6);
            TriggerStop(gt_Transport53);
            TriggerStop(gt_Transport52);
            TriggerStop(gt_Transport51);
            TriggerExecute(gt_TransmissionTransportLostDefeat, true, true);
            Wait(2.0, c_timeGame);
            GameOver(1, c_gameOverDefeat, true, true);
            GameOver(2, c_gameOverDefeat, true, true);
        }
        else {
            TriggerExecute(gt_TransmissionTransportLost, true, false);
        }
    }
    else {
        if ((gv_facility == EventUnit()) && (UnitGetOwner(EventUnit()) == 5) && (ObjectiveGetState(gv_facilityObjective) == c_objectiveStateActive)) {
            ObjectiveSetName(gv_facilityObjective, StringExternal("Param/Value/80854534"));
            TriggerEnable(gt_Transport51, false);
            TriggerEnable(gt_Transport52, false);
            TriggerEnable(gt_Transport53, false);
            TriggerEnable(gt_Transport6, false);
            TriggerEnable(gt_DefeatObjectiveLost, false);
            TriggerStop(gt_Transport6);
            TriggerStop(gt_Transport53);
            TriggerStop(gt_Transport52);
            TriggerStop(gt_Transport51);
            TriggerExecute(gt_TransmissionScienceFacilityDefeat, true, true);
            Wait(2.0, c_timeGame);
            libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Defeat);
            GameOver(1, c_gameOverDefeat, true, true);
            GameOver(2, c_gameOverDefeat, true, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatObjectiveLost_Init () {
    gt_DefeatObjectiveLost = TriggerCreate("gt_DefeatObjectiveLost_Func");
    TriggerAddEventUnitDied(gt_DefeatObjectiveLost, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Init01LoadData_Init();
    gt_Init02Players_Init();
    gt_Init03LoadingComplete_Init();
    gt_Init04Technology_Init();
    gt_Init05Units_Init();
    gt_Init06MusicSound_Init();
    gt_Init07Environment_Init();
    gt_Init08Difficulties_Init();
    gt_DebugCantFail_Init();
    gt_EnemyAttackingQ_Init();
    gt_DefeatBaseDead_Init();
    gt_VictoryPrimaryObjectiveComplete_Init();
    gt_VictorySequence_Init();
    gt_VictoryFanfareQ_Init();
    gt_Victory_Init();
    gt_Defeat_Init();
    gt_StartAI_Init();
    gt_SetupAttackWaveSpawn_Init();
    gt_AIAttackWaves_Init();
    gt_AttackWave01_Init();
    gt_AttackWave02_Init();
    gt_AttackWave03_Init();
    gt_AttackWave04_Init();
    gt_AttackWave05_Init();
    gt_AttackWave06_Init();
    gt_AttackWave07_Init();
    gt_MeleeInitialization_Init();
    gt_TransmissionBonusObjectiveStart_Init();
    gt_TransmissionBonusObjective11Start_Init();
    gt_TransmissionBonusObjective12Start_Init();
    gt_TransmissionBonusObjective21Start_Init();
    gt_TransmissionBonusObjective22Start_Init();
    gt_TransmissionBonusObjectiveComplete_Init();
    gt_TransmissionMajorAttack_Init();
    gt_TransmissionTransport1_Init();
    gt_TransmissionTransport2_Init();
    gt_TransmissionTransport3_Init();
    gt_TransmissionTransport4_Init();
    gt_TransmissionTransport5_Init();
    gt_TransmissionTransport6_Init();
    gt_TransmissionFacilityEmptied_Init();
    gt_TransmissionFirstTransportUnloaded_Init();
    gt_TransmissionTransportUnloaded_Init();
    gt_TransmissionTransportPartiallyUnloaded_Init();
    gt_TransmissionTransportUnloadedThenDestroyed_Init();
    gt_TransmissionVictory_Init();
    gt_TransmissionTransportLost_Init();
    gt_TransmissionTransportLostDefeat_Init();
    gt_TransmissionScienceFacilityDefeat_Init();
    gt_StartBonusManually1_Init();
    gt_StartBonusManually2_Init();
    gt_BonusObjecteve12_Init();
    gt_BonusObjecteve34_Init();
    gt_CheckForBonusCompletion1_Init();
    gt_CheckForBonusCompletion2_Init();
    gt_FacilityUnderFire_Init();
    gt_AttacksonFacilityHardBrut_Init();
    gt_AttacksonFacilityCasNorm_Init();
    gt_MajorAttackOnFacility_Init();
    gt_TransportUnderFire_Init();
    gt_Transport1_Init();
    gt_Transport2_Init();
    gt_Transport3_Init();
    gt_Transport41_Init();
    gt_Transport42_Init();
    gt_Transport51_Init();
    gt_Transport52_Init();
    gt_Transport53_Init();
    gt_Transport6_Init();
    gt_DefeatObjectiveLost_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitCustomAI();
    InitTriggers();
}

//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Scion Campaign Mission 2: A Purpose
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/LibertyLib"
include "TriggerLibs/VoidLib"
include "ai25ACE05B"
include "ai96C033E6"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libLbty_InitLib();
    libLotv_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
timer gv_whirlWindTimer2;
unitgroup gv_armadaUnitGroup;
int gv_armadaUpgradeCounter;
unit gv_whirlwind;
timer gv_whirlWindTimer;
bool gv_whirlWindLoose;

void InitGlobals () {
    gv_whirlWindTimer2 = TimerCreate();
    gv_armadaUnitGroup = UnitGroupEmpty();
    gv_whirlWindTimer = TimerCreate();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_ExpoAi (unit lp_expo);
void gf_UmojanBunkerAi (unit lp_Bunker);
void gf_ShadowguardAi (unit lp_shadowguard);
void gf_WhirwindAI (unit lp_whirlwind);
void gf_MistAi (unit lp_mist);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Start;
trigger gt_Start2;
trigger gt_Start3;
trigger gt_StartCuteAi;
trigger gt_StartCuteAi2;
trigger gt_ClaimRegion;
trigger gt_BossWarning;
trigger gt_ClaimRegion2;
trigger gt_ClaimRegion3;
trigger gt_SnowEffect;
trigger gt_OpeningCinamaticdontchange;
trigger gt_TalkingaboutGhosts;
trigger gt_Boss2;
trigger gt_Gorgondies2;
trigger gt_TalkingaboutLore;
trigger gt_Skipped;
trigger gt_GameStarts;
trigger gt_Money;
trigger gt_Winfinishme;
trigger gt_UmojanUpgrades;
trigger gt_Upgrades;
trigger gt_EscortRaid2;
trigger gt_EscortRaid4;
trigger gt_EscortRaid3;
trigger gt_EscortRaid;
trigger gt_EscortRaid6;
trigger gt_EscortRaid5;
trigger gt_RaidPicker;
trigger gt_Boss;
trigger gt_Gorgondies;
trigger gt_Timer;
trigger gt_CatAi;
trigger gt_RNG;
trigger gt_GhostCatAi;
trigger gt_MarineAi;
trigger gt_MarineAi2;
trigger gt_UmojanBunker;
trigger gt_ShadowguardPICKER;
trigger gt_NightmareMode;
trigger gt_WhirwindAiStart;
trigger gt_WhirwindAiStart2;
trigger gt_MistAiPicker;
trigger gt_BCAi;
trigger gt_BCAi2;
trigger gt_Freeze;
trigger gt_ThorFortAi;
trigger gt_ShredderAi3;
trigger gt_ShredderAi;
trigger gt_PoliticalAi;
trigger gt_ShredderAi2;
trigger gt_PoliticalAi3;
trigger gt_PoliticalAi2;
trigger gt_AntiAirAi3;
trigger gt_AntiAirAiTimer2;
trigger gt_GhostOpening;
trigger gt_UmojanSendGhost2;
trigger gt_UmojanSendGhost;
trigger gt_UmojanSendGhost3;
trigger gt_MakeNuke;
trigger gt_Goliath;
trigger gt_PathFinder;
trigger gt_PathFinder2;
trigger gt_PathfinderPicker;
trigger gt_PathfinderPicker2;
trigger gt_SpawnSpotter;
trigger gt_Pickker;
trigger gt_Pickker2;
trigger gt_Pickker3;
trigger gt_Pickker4;

//--------------------------------------------------------------------------------------------------
// Custom AI Functions
//--------------------------------------------------------------------------------------------------
string[17] cai_playerAI;

//--------------------------------------------------------------------------------------------------
void InitCustomAI () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        cai_playerAI[init_i] = null;
    }
}

//--------------------------------------------------------------------------------------------------
void cai_start (string ai, int p) {
    if (p < 0 || p >= 16) {
        return;
    }
    cai_playerAI[p] = ai;

    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_start(p); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_start(p); }
}

//--------------------------------------------------------------------------------------------------
void cai_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_setDefGather(p, val); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_setDefGather(p, val); }
}

//--------------------------------------------------------------------------------------------------
string cai_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { return ai25ACE05B_getCustomData(p); }
    if (cai_playerAI[p] == "ai96C033E6") { return ai96C033E6_getCustomData(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { return ai25ACE05B_getLastWave(p); }
    if (cai_playerAI[p] == "ai96C033E6") { return ai96C033E6_getLastWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_waves_run (int p, playergroup target) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_waves_run(p, target); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_waves_run(p, target); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_waves_enable(p, val); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_waves_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
void cai_waves_stop (string ai) {
    if (ai == "ai25ACE05B") { ai25ACE05B_waves_stop(); }
    if (ai == "ai96C033E6") { ai96C033E6_waves_stop(); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_run (int w, int p, playergroup target, bool wait) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_wave_run(w, p, target, wait); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_wave_run(w, p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
void cai_wave_enable (int w, int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { ai25ACE05B_wave_enable(w, p, val); }
    if (cai_playerAI[p] == "ai96C033E6") { ai96C033E6_wave_enable(w, p, val); }
}

//--------------------------------------------------------------------------------------------------
bool cai_wave_isEnabled (int w, int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { return ai25ACE05B_wave_isEnabled(w, p); }
    if (cai_playerAI[p] == "ai96C033E6") { return ai96C033E6_wave_isEnabled(w, p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup cai_wave_createdUnits (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { return ai25ACE05B_wave_createdUnits(w, p); }
    if (cai_playerAI[p] == "ai96C033E6") { return ai96C033E6_wave_createdUnits(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave cai_wave_createdWave (int w, int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    if (cai_playerAI[p] == "ai25ACE05B") { return ai25ACE05B_wave_createdWave(w, p); }
    if (cai_playerAI[p] == "ai96C033E6") { return ai96C033E6_wave_createdWave(w, p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void cai_startall () {
    AICampaignStart(2);
    AICampaignStart(3);
}

//--------------------------------------------------------------------------------------------------
void cai_runall () {
    playergroup target = PlayerGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
trigger auto_gf_ExpoAi_Trigger = null;
unit auto_gf_ExpoAi_lp_expo;

void gf_ExpoAi (unit lp_expo) {
    auto_gf_ExpoAi_lp_expo = lp_expo;

    if (auto_gf_ExpoAi_Trigger == null) {
        auto_gf_ExpoAi_Trigger = TriggerCreate("auto_gf_ExpoAi_TriggerFunc");
    }

    TriggerExecute(auto_gf_ExpoAi_Trigger, false, false);
}

bool auto_gf_ExpoAi_TriggerFunc (bool testConds, bool runActions) {
    unit lp_expo = auto_gf_ExpoAi_lp_expo;

    // Automatic Variable Declarations
    // Implementation
    AISetUnitScriptControlled(lp_expo, true);
    while (true) {
        if ((UnitIsAlive(lp_expo) == false)) {
            break;
        }
        else {
            Wait(2.0, c_timeGame);
            UnitIssueOrder(lp_expo, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
            Wait(22.0, c_timeGame);
            break;
        }
    }
    return true;
}

trigger auto_gf_UmojanBunkerAi_Trigger = null;
unit auto_gf_UmojanBunkerAi_lp_Bunker;

void gf_UmojanBunkerAi (unit lp_Bunker) {
    auto_gf_UmojanBunkerAi_lp_Bunker = lp_Bunker;

    if (auto_gf_UmojanBunkerAi_Trigger == null) {
        auto_gf_UmojanBunkerAi_Trigger = TriggerCreate("auto_gf_UmojanBunkerAi_TriggerFunc");
    }

    TriggerExecute(auto_gf_UmojanBunkerAi_Trigger, false, false);
}

bool auto_gf_UmojanBunkerAi_TriggerFunc (bool testConds, bool runActions) {
    unit lp_Bunker = auto_gf_UmojanBunkerAi_lp_Bunker;

    // Variable Declarations
    unitgroup lv_bunkerable;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bunkerable = UnitGroupEmpty();

    // Implementation
    AISetUnitScriptControlled(lp_Bunker, true);
    while (true) {
        if ((UnitIsAlive(lp_Bunker) == false)) {
            break;
        }

        lv_bunkerable = UnitGroup(null, 2, RegionCircle(UnitGetPosition(lp_Bunker), 6.0), UnitFilter((1 << c_targetFilterVisible), 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        if ((UnitGroupCount(lv_bunkerable, c_unitCountAlive) >= 1)) {
            UnitIssueOrder(lp_Bunker, OrderTargetingUnit(AbilityCommand("UmojanBunkerTransport", 0), UnitGroupClosestToPoint(lv_bunkerable, UnitGetPosition(lp_Bunker))), c_orderQueueReplace);
            Wait(45.0, c_timeAI);
            UnitIssueOrder(lp_Bunker, OrderTargetingUnit(AbilityCommand("UmojanBunkerTransport", 0), UnitGroupClosestToPoint(lv_bunkerable, UnitGetPosition(lp_Bunker))), c_orderQueueReplace);
            Wait(600.0, c_timeAI);
        }

        Wait(1.0, c_timeAI);
        lv_bunkerable = UnitGroupEmpty();
    }
    return true;
}

trigger auto_gf_ShadowguardAi_Trigger = null;
unit auto_gf_ShadowguardAi_lp_shadowguard;

void gf_ShadowguardAi (unit lp_shadowguard) {
    auto_gf_ShadowguardAi_lp_shadowguard = lp_shadowguard;

    if (auto_gf_ShadowguardAi_Trigger == null) {
        auto_gf_ShadowguardAi_Trigger = TriggerCreate("auto_gf_ShadowguardAi_TriggerFunc");
    }

    TriggerExecute(auto_gf_ShadowguardAi_Trigger, false, false);
}

bool auto_gf_ShadowguardAi_TriggerFunc (bool testConds, bool runActions) {
    unit lp_shadowguard = auto_gf_ShadowguardAi_lp_shadowguard;

    // Variable Declarations
    unitgroup lv_validEnemies;
    timer lv_cooldown;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_validEnemies = UnitGroupEmpty();
    lv_cooldown = TimerCreate();

    // Implementation
    AISetUnitScriptControlled(lp_shadowguard, true);
    UnitIssueOrder(lp_shadowguard, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    while (true) {
        if ((UnitIsAlive(lp_shadowguard) == false)) {
            break;
        }

        lv_validEnemies = UnitGroup(null, 1, RegionCircle(UnitGetPosition(lp_shadowguard), 100.0), UnitFilter((1 << c_targetFilterVisible), 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        if ((UnitGroupCount(lv_validEnemies, c_unitCountAlive) >= 1)) {
            TimerStart(lv_cooldown, 4.0, false, c_timeAI);
            UnitIssueOrder(lp_shadowguard, OrderTargetingUnitGroup(AbilityCommand("UmojanLockdown", 0), lv_validEnemies), c_orderQueueReplace);
        }

        Wait(1.0, c_timeAI);
        UnitIssueOrder(lp_shadowguard, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        lv_validEnemies = UnitGroupEmpty();
    }
    return true;
}

trigger auto_gf_WhirwindAI_Trigger = null;
unit auto_gf_WhirwindAI_lp_whirlwind;

void gf_WhirwindAI (unit lp_whirlwind) {
    auto_gf_WhirwindAI_lp_whirlwind = lp_whirlwind;

    if (auto_gf_WhirwindAI_Trigger == null) {
        auto_gf_WhirwindAI_Trigger = TriggerCreate("auto_gf_WhirwindAI_TriggerFunc");
    }

    TriggerExecute(auto_gf_WhirwindAI_Trigger, false, false);
}

bool auto_gf_WhirwindAI_TriggerFunc (bool testConds, bool runActions) {
    unit lp_whirlwind = auto_gf_WhirwindAI_lp_whirlwind;

    // Variable Declarations
    unitgroup lv_validEnemies;
    timer lv_cooldown;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_validEnemies = UnitGroupEmpty();
    lv_cooldown = TimerCreate();

    // Implementation
    AISetUnitScriptControlled(lp_whirlwind, true);
    UnitIssueOrder(lp_whirlwind, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    while (true) {
        if ((UnitIsAlive(lp_whirlwind) == false)) {
            break;
        }

        lv_validEnemies = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        if ((UnitGroupCount(lv_validEnemies, c_unitCountAlive) >= 1)) {
            UnitIssueOrder(lp_whirlwind, OrderTargetingPoint(AbilityCommand("UmojanMissileBarrage", 0), UnitGetPosition(UnitGroupRandomUnit(lv_validEnemies, c_unitCountAlive))), c_orderQueueReplace);
        }

        Wait(1.0, c_timeAI);
        UnitIssueOrder(lp_whirlwind, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        lv_validEnemies = UnitGroupEmpty();
    }
    return true;
}

trigger auto_gf_MistAi_Trigger = null;
unit auto_gf_MistAi_lp_mist;

void gf_MistAi (unit lp_mist) {
    auto_gf_MistAi_lp_mist = lp_mist;

    if (auto_gf_MistAi_Trigger == null) {
        auto_gf_MistAi_Trigger = TriggerCreate("auto_gf_MistAi_TriggerFunc");
    }

    TriggerExecute(auto_gf_MistAi_Trigger, false, false);
}

bool auto_gf_MistAi_TriggerFunc (bool testConds, bool runActions) {
    unit lp_mist = auto_gf_MistAi_lp_mist;

    // Automatic Variable Declarations
    // Implementation
    AISetUnitScriptControlled(lp_mist, true);
    while (true) {
        if ((UnitIsAlive(lp_mist) == false)) {
            break;
        }
        else {
            Wait(2.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(2.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(5.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(2.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(8.0, c_timeGame);
            Wait(5.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(9.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(4.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(8.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(5.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(2.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(5.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
            Wait(15.0, c_timeGame);
            UnitIssueOrder(lp_mist, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start
//--------------------------------------------------------------------------------------------------
bool gt_Start_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    MeleeInitResources();
    MeleeInitUnits();
    PlayerModifyPropertyInt(1, c_playerPropVespene, c_playerPropOperAdd, 250);
    PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperAdd, 450);
    PlayerModifyPropertyInt(3, c_playerPropSuppliesLimit, c_playerPropOperAdd, 1000);
    PlayerModifyPropertyInt(3, c_playerPropSuppliesMade, c_playerPropOperAdd, 800);
    PlayerModifyPropertyInt(2, c_playerPropSuppliesLimit, c_playerPropOperAdd, 800);
    PlayerModifyPropertyInt(2, c_playerPropSuppliesMade, c_playerPropOperAdd, 600);
    UnitIssueOrder(UnitFromId(1548136652), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(541312146)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(252063487), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1114027588)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2127367106), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1541135538)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(976186387), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(266719972)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1372084856), OrderTargetingPoint(AbilityCommand("moveUED", 1), PointFromId(1504550699)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1663080353), OrderTargetingPoint(AbilityCommand("moveUED", 1), PointFromId(675139504)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(390473998), OrderTargetingPoint(AbilityCommand("moveUED", 1), PointFromId(864040139)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1051639953), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(2071070258)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(961710430), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(904357510)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Start_Init () {
    gt_Start = TriggerCreate("gt_Start_Func");
    TriggerAddEventMapInit(gt_Start);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start 2
//--------------------------------------------------------------------------------------------------
bool gt_Start2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_StartCuteAi, false);
    TriggerEnable(gt_StartCuteAi2, false);
    TriggerStop(gt_StartCuteAi);
    TriggerStop(gt_StartCuteAi2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Start2_Init () {
    gt_Start2 = TriggerCreate("gt_Start2_Func");
    TriggerAddEventUnitDied(gt_Start2, UnitRefFromUnit(UnitFromId(389828278)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start 3
//--------------------------------------------------------------------------------------------------
bool gt_Start3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/54C23E0F"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Start3_Init () {
    gt_Start3 = TriggerCreate("gt_Start3_Func");
    TriggerAddEventTimeElapsed(gt_Start3, 330.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start CuteAi
//--------------------------------------------------------------------------------------------------
bool gt_StartCuteAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto07284EC7_g;
    int auto07284EC7_u;
    unit auto07284EC7_var;
    unitgroup autoBD13241C_g;
    int autoBD13241C_u;
    unit autoBD13241C_var;
    unitgroup autoFE9DBD10_g;
    int autoFE9DBD10_u;
    unit autoFE9DBD10_var;
    unitgroup auto26026B37_g;
    int auto26026B37_u;
    unit auto26026B37_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto07284EC7_g = UnitGroup("UmojanNorns", 2, RegionFromId(38), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto07284EC7_u = UnitGroupCount(auto07284EC7_g, c_unitCountAll);
    for (;; auto07284EC7_u -= 1) {
        auto07284EC7_var = UnitGroupUnitFromEnd(auto07284EC7_g, auto07284EC7_u);
        if (auto07284EC7_var == null) { break; }
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitFromId(2127930454), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
    }
    Wait(RandomInt(300, 400), c_timeReal);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 0), PointFromId(170270324)), c_orderQueueAddToFront);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 16), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 16), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 6), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 6), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 6), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 6), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 6), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 16), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1795995973), OrderTargetingPoint(AbilityCommand("UmojanBuild", 3), RegionRandomPoint(RegionFromId(37))), c_orderQueueAddToEnd);
    Wait(8.0, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(1523379490), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/6372624D"), StringExternal("Param/Value/B0AC8E98"), 4.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    SoundPlayForPlayer(SoundLink("SCV_Ready", -1), c_maxPlayers, PlayerGroupAll(), 500.0, 0.0);
    MinimapPing(PlayerGroupAll(), RegionGetCenter(RegionFromId(37)), 4.0, Color(1.57, 100.00, 100.00));
    autoBD13241C_g = UnitGroup("UmojanMCS", 2, RegionFromId(34), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBD13241C_u = UnitGroupCount(autoBD13241C_g, c_unitCountAll);
    for (;; autoBD13241C_u -= 1) {
        autoBD13241C_var = UnitGroupUnitFromEnd(autoBD13241C_g, autoBD13241C_u);
        if (autoBD13241C_var == null) { break; }
        UnitIssueOrder(autoBD13241C_var, OrderTargetingUnit(AbilityCommand("UmojanMCSHarvest", 0), UnitFromId(22901311)), c_orderQueueReplace);
    }
    autoFE9DBD10_g = UnitGroup(null, 2, RegionFromId(36), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFE9DBD10_u = UnitGroupCount(autoFE9DBD10_g, c_unitCountAll);
    for (;; autoFE9DBD10_u -= 1) {
        autoFE9DBD10_var = UnitGroupUnitFromEnd(autoFE9DBD10_g, autoFE9DBD10_u);
        if (autoFE9DBD10_var == null) { break; }
        gf_ExpoAi(autoFE9DBD10_var);
    }
    Wait(200.0, c_timeReal);
    auto26026B37_g = UnitGroup("UmojanBunker", 2, RegionFromId(37), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto26026B37_u = UnitGroupCount(auto26026B37_g, c_unitCountAll);
    for (;; auto26026B37_u -= 1) {
        auto26026B37_var = UnitGroupUnitFromEnd(auto26026B37_g, auto26026B37_u);
        if (auto26026B37_var == null) { break; }
        gf_UmojanBunkerAi(auto26026B37_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartCuteAi_Init () {
    gt_StartCuteAi = TriggerCreate("gt_StartCuteAi_Func");
    TriggerAddEventTimeElapsed(gt_StartCuteAi, 90.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start CuteAi 2
//--------------------------------------------------------------------------------------------------
bool gt_StartCuteAi2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoEB4F448A_g;
    int autoEB4F448A_u;
    unit autoEB4F448A_var;
    unitgroup autoDC1B8D8F_g;
    int autoDC1B8D8F_u;
    unit autoDC1B8D8F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEB4F448A_g = UnitGroup("UmojanBarracks", 2, RegionFromId(37), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEB4F448A_u = UnitGroupCount(autoEB4F448A_g, c_unitCountAll);
    for (;; autoEB4F448A_u -= 1) {
        autoEB4F448A_var = UnitGroupUnitFromEnd(autoEB4F448A_g, autoEB4F448A_u);
        if (autoEB4F448A_var == null) { break; }
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEB4F448A_var, Order(AbilityCommand("UmojanBarracksTrain", 0)), c_orderQueueAddToEnd);
    }
    autoDC1B8D8F_g = UnitGroup("UmojanMarine", 2, RegionFromId(37), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDC1B8D8F_u = UnitGroupCount(autoDC1B8D8F_g, c_unitCountAll);
    for (;; autoDC1B8D8F_u -= 1) {
        autoDC1B8D8F_var = UnitGroupUnitFromEnd(autoDC1B8D8F_g, autoDC1B8D8F_u);
        if (autoDC1B8D8F_var == null) { break; }
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("UmojanPowertotheWeapon", 0)), c_orderQueueReplace);
        Wait(1.0, c_timeReal);
        UnitIssueOrder(autoDC1B8D8F_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartCuteAi2_Init () {
    gt_StartCuteAi2 = TriggerCreate("gt_StartCuteAi2_Func");
    TriggerAddEventTimeElapsed(gt_StartCuteAi2, 700.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ClaimRegion
//--------------------------------------------------------------------------------------------------
bool gt_ClaimRegion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TechTreeUnitAllow(1, "Tesla", true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D45410A4"));
    UnitSetOwner(UnitFromId(863228031), 1, true);
    UnitSetOwner(UnitFromId(2008945501), 1, true);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClaimRegion_Init () {
    gt_ClaimRegion = TriggerCreate("gt_ClaimRegion_Func");
    TriggerAddEventUnitRegion(gt_ClaimRegion, null, RegionFromId(17), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Warning
//--------------------------------------------------------------------------------------------------
bool gt_BossWarning_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UmojanFrenrir"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/3D02564C"), StringExternal("Param/Value/E7DC19EF"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(6.0, c_timeGame);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingBoss", UnitGetPosition(EventUnit()), ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 40.0, 270.0);
    PingSetUnit(PingLastCreated(), EventUnit());
    SoundPlayForPlayer(SoundLink("Event_Nova01_Facility_Alarm_Klaxon", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(8.0, c_timeGame);
    SoundStop(SoundLastPlayed(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossWarning_Init () {
    gt_BossWarning = TriggerCreate("gt_BossWarning_Func");
    TriggerAddEventUnitRegion(gt_BossWarning, null, RegionFromId(33), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ClaimRegion 2
//--------------------------------------------------------------------------------------------------
bool gt_ClaimRegion2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE8A0820B_g;
    int autoE8A0820B_u;
    unit autoE8A0820B_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoE8A0820B_g = UnitGroup("Inciter", 0, RegionFromId(18), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 3);
    autoE8A0820B_u = UnitGroupCount(autoE8A0820B_g, c_unitCountAll);
    for (;; autoE8A0820B_u -= 1) {
        autoE8A0820B_var = UnitGroupUnitFromEnd(autoE8A0820B_g, autoE8A0820B_u);
        if (autoE8A0820B_var == null) { break; }
        UnitSetOwner(autoE8A0820B_var, 1, true);
        TriggerEnable(TriggerGetCurrent(), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClaimRegion2_Init () {
    gt_ClaimRegion2 = TriggerCreate("gt_ClaimRegion2_Func");
    TriggerAddEventUnitRegion(gt_ClaimRegion2, null, RegionFromId(18), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ClaimRegion 3
//--------------------------------------------------------------------------------------------------
bool gt_ClaimRegion3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto339B71D5_g;
    int auto339B71D5_u;
    unit auto339B71D5_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(ObjectiveLastCreated(), c_objectiveStateCompleted);
    TechTreeUnitAllow(1, "Uploader", true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/ADD87F42"));
    auto339B71D5_g = UnitGroup("Uploader", 0, RegionFromId(20), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto339B71D5_u = UnitGroupCount(auto339B71D5_g, c_unitCountAll);
    for (;; auto339B71D5_u -= 1) {
        auto339B71D5_var = UnitGroupUnitFromEnd(auto339B71D5_g, auto339B71D5_u);
        if (auto339B71D5_var == null) { break; }
        UnitSetOwner(auto339B71D5_var, 1, true);
        TriggerEnable(TriggerGetCurrent(), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClaimRegion3_Init () {
    gt_ClaimRegion3 = TriggerCreate("gt_ClaimRegion3_Func");
    TriggerAddEventUnitRegion(gt_ClaimRegion3, null, RegionFromId(20), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SnowEffect
//--------------------------------------------------------------------------------------------------
bool gt_SnowEffect_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAddPlayer(EventUnit(), "GlazeSnow", UnitGetOwner(EventUnit()), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SnowEffect_Init () {
    gt_SnowEffect = TriggerCreate("gt_SnowEffect_Func");
    TriggerAddEventUnitRegion(gt_SnowEffect, null, RegionPlayableMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Opening Cinamatic dont change
//--------------------------------------------------------------------------------------------------
bool gt_OpeningCinamaticdontchange_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoD1F9FD9A_g;
    int autoD1F9FD9A_u;
    unit autoD1F9FD9A_var;
    unitgroup autoDFAC5187_g;
    int autoDFAC5187_u;
    unit autoDFAC5187_var;
    unitgroup auto3A7EC772_g;
    int auto3A7EC772_u;
    unit auto3A7EC772_var;

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(2, c_playerPropVespene, c_playerPropOperAdd, 600);
    PlayerModifyPropertyInt(2, c_playerPropMinerals, c_playerPropOperAdd, 600);
    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_Skipped, true, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    VisRevealArea(1, RegionFromId(6), 66.0, false);
    Wait(0.1, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(139749857), 0.0, -1, 10, true);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    autoD1F9FD9A_g = UnitGroup("UmojanNorns", 2, RegionFromId(24), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoD1F9FD9A_u = UnitGroupCount(autoD1F9FD9A_g, c_unitCountAll);
    for (;; autoD1F9FD9A_u -= 1) {
        autoD1F9FD9A_var = UnitGroupUnitFromEnd(autoD1F9FD9A_g, autoD1F9FD9A_u);
        if (autoD1F9FD9A_var == null) { break; }
        UnitIssueOrder(autoD1F9FD9A_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(22))), c_orderQueueReplace);
    }
    autoDFAC5187_g = UnitGroup("UmojanNorns", 2, RegionFromId(25), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoDFAC5187_u = UnitGroupCount(autoDFAC5187_g, c_unitCountAll);
    for (;; autoDFAC5187_u -= 1) {
        autoDFAC5187_var = UnitGroupUnitFromEnd(autoDFAC5187_g, autoDFAC5187_u);
        if (autoDFAC5187_var == null) { break; }
        UnitIssueOrder(autoDFAC5187_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(23))), c_orderQueueReplace);
    }
    UnitIssueOrder(UnitFromId(337045618), OrderTargetingPoint(AbilityCommand("UmojanBuildTower", 1), PointFromId(1379783893)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(938054155), OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), PointFromId(382814462)), c_orderQueueReplace);
    AITimePause(true);
    GameSetMissionTimePaused(true);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/64A24C72"), StringExternal("Param/Value/7516B8AB"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    CameraPan(1, RegionGetCenter(RegionFromId(3)), 22.0, -1, 10.0, false);
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2038576179)), c_orderQueueReplace);
    Wait(9.0, c_timeReal);
    UnitIssueOrder(UnitFromId(337045618), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1360823429)), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(938054155), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(464165297)), c_orderQueueAddToEnd);
    CameraApplyInfo(1, CameraInfoFromId(792811456), 6.0, -1, 10, true);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/209CD85E"), StringExternal("Param/Value/B1F9E6CC"), 8.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(8.0, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(2005004591), 6.0, -1, 10, true);
    AITimePause(false);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/4B38A708"), StringExternal("Param/Value/28E3CEDA"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    CameraApplyInfo(1, CameraInfoFromId(2005004591), 12.0, -1, 10, true);
    Wait(8.0, c_timeReal);
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(194026153)), c_orderQueueReplace);
    auto3A7EC772_g = UnitGroup("HonorguardCruiser", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto3A7EC772_u = UnitGroupCount(auto3A7EC772_g, c_unitCountAll);
    for (;; auto3A7EC772_u -= 1) {
        auto3A7EC772_var = UnitGroupUnitFromEnd(auto3A7EC772_g, auto3A7EC772_u);
        if (auto3A7EC772_var == null) { break; }
        UnitIssueOrder(auto3A7EC772_var, OrderTargetingPoint(AbilityCommand("moveUED", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(0.1, c_timeReal);
    UnitKill(UnitFromId(357714717));
    VisRevealerDestroy(VisRevealerLastCreated());
    VisRevealArea(1, RegionFromId(1), 66.0, false);
    CameraApplyInfo(1, CameraInfoFromId(831268232), 3.0, -1, 10, true);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/27A085E8"), StringExternal("Param/Value/CEBD04E3"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(8.0, c_timeReal);
    VisFillArea(1, RegionEntireMap(), c_fillTypeUnexplored, false);
    GameSetMissionTimePaused(false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    CameraApplyInfo(1, CameraInfoFromId(455740498), 5.0, -1, 10, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/E2654417"));
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("moveUED", 0), PointFromId(548125009)), c_orderQueueAddToEnd);
    Wait(8.0, c_timeGame);
    UnitIssueOrder(UnitFromId(2042129749), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(770405268)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1124084870), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2125092656)), c_orderQueueReplace);
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/18008E25"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/CE75D045"), StringExternal("Param/Value/7CAB8281"), "Assets\\Textures\\btn-icon-dominion.dds");
    Wait(28.0, c_timeGame);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(662774997), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/E32011C8"), StringExternal("Param/Value/12676FE7"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OpeningCinamaticdontchange_Init () {
    gt_OpeningCinamaticdontchange = TriggerCreate("gt_OpeningCinamaticdontchange_Func");
    TriggerAddEventMapInit(gt_OpeningCinamaticdontchange);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Talking about Ghosts
//--------------------------------------------------------------------------------------------------
bool gt_TalkingaboutGhosts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(900.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/C40B0CEA"), StringExternal("Param/Value/A00F30F9"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(10.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/3789B472"), StringExternal("Param/Value/456F5A47"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FAE092ED"));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(1048091815)), 7.0, Color(100.00, 61.18, 22.35));
    Wait(150.0, c_timeGame);
    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(1048091815)), 7.0, Color(100.00, 61.18, 22.35));
    UnitIssueOrder(UnitFromId(1048091815), Order(AbilityCommand("UmojanResearchShadowOps", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TalkingaboutGhosts_Init () {
    gt_TalkingaboutGhosts = TriggerCreate("gt_TalkingaboutGhosts_Func");
    TriggerAddEventMapInit(gt_TalkingaboutGhosts);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss 2
//--------------------------------------------------------------------------------------------------
bool gt_Boss2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoCE8E5DAE_g;
    int autoCE8E5DAE_u;
    unit autoCE8E5DAE_var;

    // Actions
    if (!runActions) {
        return true;
    }

    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(1436647584)), 4.0, Color(100.00, 0.00, 0.00));
    Wait(1.0, c_timeGame);
    libNtve_gf_ShareVisionofUnit(UnitFromId(1436647584), true, 1);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingBoss", UnitGetPosition(UnitFromId(1436647584)), ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 22.0, 270.0);
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    Wait(1.0, c_timeGame);
    gv_whirlwind = UnitLastCreated();
    Wait(1.0, c_timeGame);
    autoCE8E5DAE_g = UnitGroup("UmojanWhirlwind", 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCE8E5DAE_u = UnitGroupCount(autoCE8E5DAE_g, c_unitCountAll);
    for (;; autoCE8E5DAE_u -= 1) {
        autoCE8E5DAE_var = UnitGroupUnitFromEnd(autoCE8E5DAE_g, autoCE8E5DAE_u);
        if (autoCE8E5DAE_var == null) { break; }
        gf_WhirwindAI(autoCE8E5DAE_var);
        MinimapPing(PlayerGroupAll(), UnitGetPosition(EventUnit()), 5.0, Color(100.00, 47.45, 22.35));
        SoundPlayForPlayer(SoundLink("Event_Nova05_ScienceLab_Alarm", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        Wait(4.0, c_timeGame);
        SoundStop(SoundLastPlayed(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Boss2_Init () {
    gt_Boss2 = TriggerCreate("gt_Boss2_Func");
    TriggerAddEventTimer(gt_Boss2, gv_whirlWindTimer2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Gorgon dies 2
//--------------------------------------------------------------------------------------------------
bool gt_Gorgondies2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_whirlWindLoose == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_whirlWindTimer2, 600.0, false, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Gorgondies2_Init () {
    gt_Gorgondies2 = TriggerCreate("gt_Gorgondies2_Func");
    TriggerAddEventUnitDied(gt_Gorgondies2, UnitRefFromVariable("gv_whirlwind"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Talking about Lore
//--------------------------------------------------------------------------------------------------
bool gt_TalkingaboutLore_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1100.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/2BD93F46"), StringExternal("Param/Value/B6C28073"), 11.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(11.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/18FB30A0"), StringExternal("Param/Value/DED77BC9"), 11.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(13.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9D94E974"), StringExternal("Param/Value/EA0E07DE"), 13.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(13.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(984729586), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/6FCF34AD"), StringExternal("Param/Value/90A2736B"), 13.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(13.0, c_timeGame);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/23F8933B"), StringExternal("Param/Value/2FA4DB85"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(10.0, c_timeGame);
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/C7EFE74C"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/C1951AFB"), StringExternal("Param/Value/41A7204C"), "Assets\\Textures\\btn-icon-dominion.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TalkingaboutLore_Init () {
    gt_TalkingaboutLore = TriggerCreate("gt_TalkingaboutLore_Func");
    TriggerAddEventMapInit(gt_TalkingaboutLore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Skipped
//--------------------------------------------------------------------------------------------------
bool gt_Skipped_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto434B8DEC_g;
    int auto434B8DEC_u;
    unit auto434B8DEC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/74259E84"));
    TriggerEnable(gt_OpeningCinamaticdontchange, false);
    TriggerStop(gt_OpeningCinamaticdontchange);
    CutsceneStop(c_cutsceneNone);
    TransmissionClearAll();
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    CameraApplyInfo(1, CameraInfoFromId(455740498), 5.0, -1, 10, true);
    AITimePause(false);
    GameSetMissionTimePaused(false);
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2038576179)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(194026153)), c_orderQueueReplace);
    auto434B8DEC_g = UnitGroup("HonorguardCruiser", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto434B8DEC_u = UnitGroupCount(auto434B8DEC_g, c_unitCountAll);
    for (;; auto434B8DEC_u -= 1) {
        auto434B8DEC_var = UnitGroupUnitFromEnd(auto434B8DEC_g, auto434B8DEC_u);
        if (auto434B8DEC_var == null) { break; }
        UnitIssueOrder(auto434B8DEC_var, OrderTargetingPoint(AbilityCommand("moveUED", 0), RegionGetCenter(RegionFromId(12))), c_orderQueueReplace);
    }
    Wait(0.1, c_timeReal);
    UnitKill(UnitFromId(357714717));
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/4FC963FB"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/0A3C7B27"), StringExternal("Param/Value/68032840"), "Assets\\Textures\\btn-icon-dominion.dds");
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/0CD195AC"));
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("moveUED", 0), PointFromId(548125009)), c_orderQueueAddToEnd);
    Wait(15.0, c_timeGame);
    UnitIssueOrder(UnitFromId(2042129749), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(770405268)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1124084870), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2125092656)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Skipped_Init () {
    gt_Skipped = TriggerCreate("gt_Skipped_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Starts
//--------------------------------------------------------------------------------------------------
bool gt_GameStarts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoAB6BDB56_g;
    int autoAB6BDB56_u;
    unit autoAB6BDB56_var;
    unitgroup autoEA1312C5_g;
    int autoEA1312C5_u;
    unit autoEA1312C5_var;
    unitgroup auto0DA188A8_g;
    int auto0DA188A8_u;
    unit auto0DA188A8_var;
    unitgroup auto46C0EB91_g;
    int auto46C0EB91_u;
    unit auto46C0EB91_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAB6BDB56_g = UnitGroup("Salvager", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 3);
    autoAB6BDB56_u = UnitGroupCount(autoAB6BDB56_g, c_unitCountAll);
    for (;; autoAB6BDB56_u -= 1) {
        autoAB6BDB56_var = UnitGroupUnitFromEnd(autoAB6BDB56_g, autoAB6BDB56_u);
        if (autoAB6BDB56_var == null) { break; }
        UnitIssueOrder(autoAB6BDB56_var, OrderTargetingUnit(AbilityCommand("SalvagerHarvest", 0), UnitFromId(1864158475)), c_orderQueueReplace);
    }
    autoEA1312C5_g = UnitGroup("Salvager", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 3);
    autoEA1312C5_u = UnitGroupCount(autoEA1312C5_g, c_unitCountAll);
    for (;; autoEA1312C5_u -= 1) {
        autoEA1312C5_var = UnitGroupUnitFromEnd(autoEA1312C5_g, autoEA1312C5_u);
        if (autoEA1312C5_var == null) { break; }
        UnitIssueOrder(autoEA1312C5_var, OrderTargetingUnit(AbilityCommand("SalvagerHarvest", 0), UnitFromId(1938677220)), c_orderQueueReplace);
    }
    auto0DA188A8_g = UnitGroup("Salvager", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 3);
    auto0DA188A8_u = UnitGroupCount(auto0DA188A8_g, c_unitCountAll);
    for (;; auto0DA188A8_u -= 1) {
        auto0DA188A8_var = UnitGroupUnitFromEnd(auto0DA188A8_g, auto0DA188A8_u);
        if (auto0DA188A8_var == null) { break; }
        UnitIssueOrder(auto0DA188A8_var, OrderTargetingUnit(AbilityCommand("SalvagerHarvest", 0), UnitFromId(1126324017)), c_orderQueueReplace);
    }
    auto46C0EB91_g = UnitGroup("Salvager", 3, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 3);
    auto46C0EB91_u = UnitGroupCount(auto46C0EB91_g, c_unitCountAll);
    for (;; auto46C0EB91_u -= 1) {
        auto46C0EB91_var = UnitGroupUnitFromEnd(auto46C0EB91_g, auto46C0EB91_u);
        if (auto46C0EB91_var == null) { break; }
        UnitIssueOrder(auto46C0EB91_var, OrderTargetingUnit(AbilityCommand("SalvagerHarvest", 0), UnitFromId(1269068684)), c_orderQueueReplace);
    }
    ObjectiveCreate(StringExternal("Param/Value/E78255FF"), StringToText(""), c_objectiveStateActive, true);
    ObjectiveCreate(StringExternal("Param/Value/AD897D34"), StringToText(""), c_objectiveStateActive, false);
    TechTreeRequirementsEnable(1, true);
    TechTreeRestrictionsEnable(1, true);
    TechTreeUnitAllow(1, "Uploader", false);
    TechTreeUnitAllow(1, "Tesla", false);
    TechTreeRequirementsEnable(2, false);
    TechTreeRestrictionsEnable(2, false);
    TechTreeRequirementsEnable(3, false);
    TechTreeRestrictionsEnable(3, false);
    AISetDefenseRadii(3, 40.0, 40.0, 40.0);
    AISetDefenseRadii(2, 40.0, 40.0, 40.0);
    AIToggleBulliesInRegion(3, RegionFromId(2), true);
    VisRevealArea(1, RegionFromId(4), 600.0, false);
    PlayerSetAlliance(1, c_allianceIdVision, 3, true);
    PlayerSetAlliance(3, c_allianceIdVision, 1, true);
    PlayerSetAlliance(1, c_allianceIdVision, 2, true);
    PlayerSetAlliance(2, c_allianceIdVision, 1, true);
    MeleeInitResources();
    TechTreeUpgradeAllow(1, "AAMDefenseTurret", false);
    TechTreeUpgradeAllow(1, "ShapedHull", false);
    TechTreeUnitAllow(1, "Badger", false);
    TechTreeUnitAllow(1, "Mole", false);
    TechTreeUnitAllow(1, "Boar", false);
    TechTreeUnitAllow(1, "Tesla", false);
    TechTreeUnitAllow(1, "Olympus", false);
    TechTreeUnitAllow(1, "OrdnanceCache", false);
    TechTreeUpgradeAllow(1, "SubterraneanSensors", false);
    TechTreeUpgradeAllow(1, "GenetronAircraftWeaponsLevel1", false);
    TechTreeUpgradeAllow(1, "GenetronAircraftWeaponsLevel2", false);
    TechTreeUpgradeAllow(1, "GenetronAircraftWeaponsLevel3", false);
    TechTreeUpgradeAllow(1, "GenetronAircraftWeaponsLevel3", false);
    TechTreeUnitAllow(1, "AssemblyArray", false);
    libNtve_gf_SetPlayerGroupAlliance(PlayerGroupAlliance(c_playerGroupEnemy, 1), libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    cai_start("ai25ACE05B", 2);
    cai_start("ai96C033E6", 3);
    cai_waves_run(2, PlayerGroupSingle(1));
    cai_waves_run(3, PlayerGroupSingle(1));
    AISetBullyRebuildDelay(libNtve_gf_DifficultyValueFixed(25.0, 25.0, 25.0, 25.0), libNtve_gf_DifficultyValueFixed(30.0, 30.0, 30.0, 30.0), 2);
    AISetBullyRebuildDelay(libNtve_gf_DifficultyValueFixed(25.0, 25.0, 25.0, 25.0), libNtve_gf_DifficultyValueFixed(30.0, 30.0, 30.0, 30.0), 3);
    Wait(210.0, c_timeGame);
    PlayerSetAlliance(1, c_allianceIdVision, 2, false);
    PlayerSetAlliance(2, c_allianceIdVision, 1, false);
    PlayerSetAlliance(1, c_allianceIdVision, 3, false);
    PlayerSetAlliance(3, c_allianceIdVision, 1, false);
    Wait(2.0, c_timeGame);
    PlayerSetAlliance(3, c_allianceIdVision, 1, true);
    Wait(400.0, c_timeGame);
    VisRevealArea(1, RegionFromId(16), 5.0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GameStarts_Init () {
    gt_GameStarts = TriggerCreate("gt_GameStarts_Func");
    TriggerAddEventMapInit(gt_GameStarts);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Money
//--------------------------------------------------------------------------------------------------
bool gt_Money_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(3, c_playerPropVespene, c_playerPropOperAdd, 25);
    PlayerModifyPropertyInt(3, c_playerPropMinerals, c_playerPropOperAdd, 25);
    PlayerModifyPropertyInt(2, c_playerPropVespene, c_playerPropOperAdd, 5);
    PlayerModifyPropertyInt(2, c_playerPropMinerals, c_playerPropOperAdd, 5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Money_Init () {
    gt_Money = TriggerCreate("gt_Money_Func");
    TriggerAddEventTimePeriodic(gt_Money, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Win(finish me)
//--------------------------------------------------------------------------------------------------
bool gt_Winfinishme_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(1436647584)) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    VisRevealArea(1, RegionEntireMap(), 60.0, false);
    CameraApplyInfo(1, CameraInfoFromId(1016545752), 0.0, -1, 10, true);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(484314551), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/831F9497"), StringExternal("Param/Value/01E64687"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(5.0, c_timeGame);
    UnitIssueOrder(UnitFromId(484314551), OrderTargetingPoint(AbilityCommand("moveUED", 0), PointFromId(1398856976)), c_orderQueueReplace);
    Wait(3.0, c_timeGame);
    GameOver(1, c_gameOverVictory, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Winfinishme_Init () {
    gt_Winfinishme = TriggerCreate("gt_Winfinishme_Func");
    TriggerAddEventUnitDied(gt_Winfinishme, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Umojan Upgrades
//--------------------------------------------------------------------------------------------------
bool gt_UmojanUpgrades_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(1, "FirewallShield", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "UmojanEngineeringSuit", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "DroneRepairModule", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "RefittedNozzles", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "BlazeFirewallRevert", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanLockdown", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanStrikeMineReserve", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanMobileTargeting", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanEngineeringSuit", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanEngineeringSuit", 1);
    Wait(400.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanSecondaryHangar", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanBlink", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanStrikeMineReserve", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanOverloadWeapons", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanDisruptionWeb", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanPlasmaRecycler", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanPowertotheWeapons", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanHiSecAutoTracking", 1);
    Wait(600.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVigilantTurret", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanMedivacIncreaseSpeedBoost", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanResearchStasisGun", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanOverchargeGenerator", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanBattlelinkSystem", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanEngineeringSuit", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanMobileTargeting", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanCloakingField", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanCorvidReactor", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanHighOutputThruster", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanCombatShield", 1);
    Wait(300.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanInfantryArmor", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanInfantryArmorLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShields", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShieldsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShipPlating", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShipPlatingLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVehiclePlating", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVehiclePlatingLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanInfantryWeapons", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanInfantryWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShipWeapons", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShipWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVehicleWeapons", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVehicleWeaponsLevel1", 1);
    Wait(1000.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanInfantryWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanShipWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "UmojanVehicleWeaponsLevel2", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UmojanUpgrades_Init () {
    gt_UmojanUpgrades = TriggerCreate("gt_UmojanUpgrades_Func");
    TriggerAddEventMapInit(gt_UmojanUpgrades);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrades
//--------------------------------------------------------------------------------------------------
bool gt_Upgrades_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(1, "CalibratedEngines", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "SpitfireMadcapRounds", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "OpticalFlare", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "CloakingDrone", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "ProjectedGravityShield", 1);
    Wait(345.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "AtmosphericOperationsLoadout", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "ExtendedMissilePayloads", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "SalvoFiringPattern", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "TandemReactiveArmor", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "DroneRepairModule", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "EnginSurchargeProtocols", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "FieldReloadingProtocols", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "CloakingDrone", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "ProjectedGravityShield", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "UEDVehicalsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "UEDWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "SpareRifleBatteries", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "OpticalFlare", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "UEDArmorLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "StrikeGrenade", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(3, "CommandoTraining", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Upgrades_Init () {
    gt_Upgrades = TriggerCreate("gt_Upgrades_Func");
    TriggerAddEventTimeElapsed(gt_Upgrades, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid 2
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_EscortRaid3, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 315.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 315.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid2_Init () {
    gt_EscortRaid2 = TriggerCreate("gt_EscortRaid2_Func");
    TriggerAddEventTimeElapsed(gt_EscortRaid2, 1300.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid 4
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_EscortRaid3, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 315.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(105.0, 105.0, 105.0, 135.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(255.0, 255.0, 255.0, 225.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(255.0, 255.0, 255.0, 225.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(255.0, 255.0, 255.0, 225.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid4_Init () {
    gt_EscortRaid4 = TriggerCreate("gt_EscortRaid4_Func");
    TriggerAddEventTimeElapsed(gt_EscortRaid4, 2000.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid 3
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 315.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(105.0, 105.0, 105.0, 135.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, libLotv_gf_DifficultyValueFixed2(4.0, 4.0, 4.0, 3.0), libLotv_gf_DifficultyValueFixed2(255.0, 255.0, 255.0, 225.0));
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid3_Init () {
    gt_EscortRaid3 = TriggerCreate("gt_EscortRaid3_Func");
    TriggerEnable(gt_EscortRaid3, false);
    TriggerAddEventTimePeriodic(gt_EscortRaid3, 660.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(1665910753), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", null, StringExternal("Param/Value/5AA86E67"), StringExternal("Param/Value/7EAAF8B9"), 5.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid_Init () {
    gt_EscortRaid = TriggerCreate("gt_EscortRaid_Func");
    TriggerAddEventTimeElapsed(gt_EscortRaid, 800.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid 6
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid6_Init () {
    gt_EscortRaid6 = TriggerCreate("gt_EscortRaid6_Func");
    TriggerAddEventTimeElapsed(gt_EscortRaid6, 110.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EscortRaid 5
//--------------------------------------------------------------------------------------------------
bool gt_EscortRaid5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lv_EscortTargetUnit;
    int lv_lv_BossPing;
    point lv_lv_SpawnPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lv_BossPing = c_invalidPingId;
    lv_lv_SpawnPoint = PointFromId(1778674431);

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecat", 0, 2, lv_lv_SpawnPoint);
    lv_lv_EscortTargetUnit = UnitLastCreated();
    UnitGroupAdd(gv_armadaUnitGroup, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetEscort(2, libNtve_gf_ConvertUnitToUnitGroup(lv_lv_EscortTargetUnit), 1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatCuirassier", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 45.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UmojanBattlecatSpahi", 0, 2, lv_lv_SpawnPoint);
    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 4.0, 315.0);
    UnitGroupAdd(gv_armadaUnitGroup, UnitLastCreated());
    if ((libLotv_gf_DifficultyValueInt2(0, 1, 1, 1) == 1)) {
    }

    AIAttackWaveAddEscortUnit(2, UnitLastCreated(), lv_lv_EscortTargetUnit, 3.0, 180.0);
    AIAttackWaveSend(2, 0, false);
    AIAttackWaveUseUnit(2, lv_lv_EscortTargetUnit);
    AIAttackWaveSetTargetPoint(2, PointFromId(1344934326));
    AIAttackWaveSend(2, 0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EscortRaid5_Init () {
    gt_EscortRaid5 = TriggerCreate("gt_EscortRaid5_Func");
    TriggerAddEventTimePeriodic(gt_EscortRaid5, 500.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RaidPicker
//--------------------------------------------------------------------------------------------------
bool gt_RaidPicker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto9320B974_g;
    int auto9320B974_u;
    unit auto9320B974_var;
    unitgroup autoDCF8D5C0_g;
    int autoDCF8D5C0_u;
    unit autoDCF8D5C0_var;
    unitgroup auto1558312C_g;
    int auto1558312C_u;
    unit auto1558312C_var;
    unitgroup autoDD5242AA_g;
    int autoDD5242AA_u;
    unit autoDD5242AA_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto9320B974_g = UnitGroup("UmojanBattlecat", 2, RegionFromId(21), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 4);
    auto9320B974_u = UnitGroupCount(auto9320B974_g, c_unitCountAll);
    for (;; auto9320B974_u -= 1) {
        auto9320B974_var = UnitGroupUnitFromEnd(auto9320B974_g, auto9320B974_u);
        if (auto9320B974_var == null) { break; }
        UnitIssueOrder(auto9320B974_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
    }
    autoDCF8D5C0_g = UnitGroup("UmojanBattlecatCuirassier", 2, RegionFromId(21), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 4);
    autoDCF8D5C0_u = UnitGroupCount(autoDCF8D5C0_g, c_unitCountAll);
    for (;; autoDCF8D5C0_u -= 1) {
        autoDCF8D5C0_var = UnitGroupUnitFromEnd(autoDCF8D5C0_g, autoDCF8D5C0_u);
        if (autoDCF8D5C0_var == null) { break; }
        UnitIssueOrder(autoDCF8D5C0_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
    }
    auto1558312C_g = UnitGroup("UmojanBattlecatLancer", 2, RegionFromId(21), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 4);
    auto1558312C_u = UnitGroupCount(auto1558312C_g, c_unitCountAll);
    for (;; auto1558312C_u -= 1) {
        auto1558312C_var = UnitGroupUnitFromEnd(auto1558312C_g, auto1558312C_u);
        if (auto1558312C_var == null) { break; }
        UnitIssueOrder(auto1558312C_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
    }
    autoDD5242AA_g = UnitGroup("UmojanBattlecatSpahi", 2, RegionFromId(21), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 4);
    autoDD5242AA_u = UnitGroupCount(autoDD5242AA_g, c_unitCountAll);
    for (;; autoDD5242AA_u -= 1) {
        autoDD5242AA_var = UnitGroupUnitFromEnd(autoDD5242AA_g, autoDD5242AA_u);
        if (autoDD5242AA_var == null) { break; }
        UnitIssueOrder(autoDD5242AA_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RaidPicker_Init () {
    gt_RaidPicker = TriggerCreate("gt_RaidPicker_Func");
    TriggerAddEventTimePeriodic(gt_RaidPicker, 350.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss
//--------------------------------------------------------------------------------------------------
bool gt_Boss_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0D1BAA3D_g;
    int auto0D1BAA3D_u;
    unit auto0D1BAA3D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(1436647584)), 4.0, Color(100.00, 0.00, 0.00));
    Wait(1.0, c_timeGame);
    libNtve_gf_ShareVisionofUnit(UnitFromId(1436647584), true, 1);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingBoss", UnitGetPosition(UnitFromId(1436647584)), ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 22.0, 270.0);
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    Wait(1.0, c_timeGame);
    gv_whirlwind = UnitLastCreated();
    Wait(1.0, c_timeGame);
    auto0D1BAA3D_g = UnitGroup("UmojanWhirlwind", 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0D1BAA3D_u = UnitGroupCount(auto0D1BAA3D_g, c_unitCountAll);
    for (;; auto0D1BAA3D_u -= 1) {
        auto0D1BAA3D_var = UnitGroupUnitFromEnd(auto0D1BAA3D_g, auto0D1BAA3D_u);
        if (auto0D1BAA3D_var == null) { break; }
        gf_WhirwindAI(auto0D1BAA3D_var);
        MinimapPing(PlayerGroupAll(), UnitGetPosition(EventUnit()), 5.0, Color(100.00, 47.45, 22.35));
        SoundPlayForPlayer(SoundLink("Event_Nova05_ScienceLab_Alarm", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        Wait(4.0, c_timeGame);
        SoundStop(SoundLastPlayed(), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Boss_Init () {
    gt_Boss = TriggerCreate("gt_Boss_Func");
    TriggerAddEventTimer(gt_Boss, gv_whirlWindTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Gorgon dies
//--------------------------------------------------------------------------------------------------
bool gt_Gorgondies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_whirlWindLoose == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_whirlWindTimer, 600.0, false, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Gorgondies_Init () {
    gt_Gorgondies = TriggerCreate("gt_Gorgondies_Func");
    TriggerAddEventUnitDied(gt_Gorgondies, UnitRefFromVariable("gv_whirlwind"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Timer
//--------------------------------------------------------------------------------------------------
bool gt_Timer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_whirlWindTimer, 600.0, false, c_timeReal);
    gv_whirlWindTimer = TimerLastStarted();
    TimerWindowCreate(gv_whirlWindTimer, StringExternal("Param/Value/143964BA"), true, false);
    gv_whirlWindTimer = gv_whirlWindTimer;
    Wait(625.0, c_timeReal);
    TimerWindowDestroy(TimerWindowLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Timer_Init () {
    gt_Timer = TriggerCreate("gt_Timer_Func");
    TriggerAddEventMapInit(gt_Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CatAi
//--------------------------------------------------------------------------------------------------
bool gt_CatAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UmojanBattlecat"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.1, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("UmojanBlink", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueAddToFront);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CatAi_Init () {
    gt_CatAi = TriggerCreate("gt_CatAi_Func");
    TriggerAddEventUnitAttacked(gt_CatAi, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RNG
//--------------------------------------------------------------------------------------------------
bool gt_RNG_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(RandomInt(0, 50), c_timeGame);
    PointSet(PointFromId(1660507047), RegionRandomPoint(RegionFromId(32)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RNG_Init () {
    gt_RNG = TriggerCreate("gt_RNG_Func");
    TriggerAddEventTimePeriodic(gt_RNG, 60.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GhostCatAi
//--------------------------------------------------------------------------------------------------
bool gt_GhostCatAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "UmojanBattlecatLancer") || (UnitGetType(EventUnit()) == "UmojanBattlecatCuirassier") || (UnitGetType(EventUnit()) == "UmojanBattlecatSpahi")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(4.0, c_timeGame);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("UmojanStayatRange", 0)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GhostCatAi_Init () {
    gt_GhostCatAi = TriggerCreate("gt_GhostCatAi_Func");
    TriggerAddEventUnitBecomesIdle(gt_GhostCatAi, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MarineAi
//--------------------------------------------------------------------------------------------------
bool gt_MarineAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UmojanMarine"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_MarineAi, false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("UmojanPowertotheWeapon", 0)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarineAi_Init () {
    gt_MarineAi = TriggerCreate("gt_MarineAi_Func");
    TriggerAddEventUnitAttacked2(gt_MarineAi, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MarineAi 2
//--------------------------------------------------------------------------------------------------
bool gt_MarineAi2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_MarineAi, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MarineAi2_Init () {
    gt_MarineAi2 = TriggerCreate("gt_MarineAi2_Func");
    TriggerAddEventTimePeriodic(gt_MarineAi2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UmojanBunker
//--------------------------------------------------------------------------------------------------
bool gt_UmojanBunker_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto54C66E1D_g;
    int auto54C66E1D_u;
    unit auto54C66E1D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto54C66E1D_g = UnitGroup("UmojanBunker", 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto54C66E1D_u = UnitGroupCount(auto54C66E1D_g, c_unitCountAll);
    for (;; auto54C66E1D_u -= 1) {
        auto54C66E1D_var = UnitGroupUnitFromEnd(auto54C66E1D_g, auto54C66E1D_u);
        if (auto54C66E1D_var == null) { break; }
        gf_UmojanBunkerAi(auto54C66E1D_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UmojanBunker_Init () {
    gt_UmojanBunker = TriggerCreate("gt_UmojanBunker_Func");
    TriggerAddEventMapInit(gt_UmojanBunker);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ShadowguardPICKER
//--------------------------------------------------------------------------------------------------
bool gt_ShadowguardPICKER_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;

    // Automatic Variable Declarations
    unitgroup auto65D2E69C_g;
    int auto65D2E69C_u;
    unit auto65D2E69C_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_sabotageTarget = UnitGroup(null, 1, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0);
    auto65D2E69C_g = UnitGroup("UmojanShadowguard", c_playerAny, RegionFromId(13), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto65D2E69C_u = UnitGroupCount(auto65D2E69C_g, c_unitCountAll);
    for (;; auto65D2E69C_u -= 1) {
        auto65D2E69C_var = UnitGroupUnitFromEnd(auto65D2E69C_g, auto65D2E69C_u);
        if (auto65D2E69C_var == null) { break; }
        UnitIssueOrder(auto65D2E69C_var, OrderTargetingUnitGroup(AbilityCommand("UmojanSabotage", 0), lv_sabotageTarget), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShadowguardPICKER_Init () {
    gt_ShadowguardPICKER = TriggerCreate("gt_ShadowguardPICKER_Func");
    TriggerAddEventTimePeriodic(gt_ShadowguardPICKER, 15.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: NightmareMode
//--------------------------------------------------------------------------------------------------
bool gt_NightmareMode_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/F6699D72"));
    GameSetLighting("IceWorldNight", 300.0);
    Wait(60.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "UmojanWhirlwind", c_unitCreateIgnorePlacement, 2, PointFromId(398300867));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_NightmareMode_Init () {
    gt_NightmareMode = TriggerCreate("gt_NightmareMode_Func");
    TriggerAddEventChatMessage(gt_NightmareMode, c_playerAny, "-Nightmare", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: WhirwindAiStart
//--------------------------------------------------------------------------------------------------
bool gt_WhirwindAiStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE5277581_g;
    int autoE5277581_u;
    unit autoE5277581_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE5277581_g = UnitGroup("UmojanWhirlwind", 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE5277581_u = UnitGroupCount(autoE5277581_g, c_unitCountAll);
    for (;; autoE5277581_u -= 1) {
        autoE5277581_var = UnitGroupUnitFromEnd(autoE5277581_g, autoE5277581_u);
        if (autoE5277581_var == null) { break; }
        gf_WhirwindAI(autoE5277581_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhirwindAiStart_Init () {
    gt_WhirwindAiStart = TriggerCreate("gt_WhirwindAiStart_Func");
    TriggerEnable(gt_WhirwindAiStart, false);
    TriggerAddEventTimePeriodic(gt_WhirwindAiStart, 17.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: WhirwindAiStart 2
//--------------------------------------------------------------------------------------------------
bool gt_WhirwindAiStart2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC407F8F1_g;
    int autoC407F8F1_u;
    unit autoC407F8F1_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC407F8F1_g = UnitGroup("UmojanWhirlwind", 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC407F8F1_u = UnitGroupCount(autoC407F8F1_g, c_unitCountAll);
    for (;; autoC407F8F1_u -= 1) {
        autoC407F8F1_var = UnitGroupUnitFromEnd(autoC407F8F1_g, autoC407F8F1_u);
        if (autoC407F8F1_var == null) { break; }
        gf_WhirwindAI(autoC407F8F1_var);
        MinimapPing(PlayerGroupAll(), UnitGetPosition(EventUnit()), 5.0, Color(100.00, 47.45, 22.35));
        SoundPlayForPlayer(SoundLink("Event_Nova05_ScienceLab_Alarm", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        Wait(4.0, c_timeGame);
        SoundStop(SoundLastPlayed(), true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/07CC801E"));
        TriggerEnable(gt_WhirwindAiStart, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhirwindAiStart2_Init () {
    gt_WhirwindAiStart2 = TriggerCreate("gt_WhirwindAiStart2_Func");
    TriggerAddEventTimeElapsed(gt_WhirwindAiStart2, 600.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MistAiPicker
//--------------------------------------------------------------------------------------------------
bool gt_MistAiPicker_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoCAC81830_g;
    int autoCAC81830_u;
    unit autoCAC81830_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCAC81830_g = UnitGroup("UmojanMist", 2, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCAC81830_u = UnitGroupCount(autoCAC81830_g, c_unitCountAll);
    for (;; autoCAC81830_u -= 1) {
        autoCAC81830_var = UnitGroupUnitFromEnd(autoCAC81830_g, autoCAC81830_u);
        if (autoCAC81830_var == null) { break; }
        gf_MistAi(autoCAC81830_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MistAiPicker_Init () {
    gt_MistAiPicker = TriggerCreate("gt_MistAiPicker_Func");
    TriggerAddEventMapInit(gt_MistAiPicker);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BCAi
//--------------------------------------------------------------------------------------------------
bool gt_BCAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((libNtve_gf_UnitIsVisibleToPlayer(EventUnit(), 1) == true) && (UnitGetType(EventUnit()) == "UmojanBattleship")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(9.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("UmojanHyperjump", 0), RegionRandomPoint(RegionFromId(8))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BCAi_Init () {
    gt_BCAi = TriggerCreate("gt_BCAi_Func");
    TriggerAddEventUnitAttacked(gt_BCAi, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BCAi 2
//--------------------------------------------------------------------------------------------------
bool gt_BCAi2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BCAi, true);
    Wait(7.0, c_timeGame);
    UnitIssueOrder(UnitFromId(1866805358), OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(9))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BCAi2_Init () {
    gt_BCAi2 = TriggerCreate("gt_BCAi2_Func");
    TriggerAddEventTimePeriodic(gt_BCAi2, 500.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Freeze!
//--------------------------------------------------------------------------------------------------
bool gt_Freeze_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "UmojanBattleship") && (UnitGetType(EventUnitTarget()) != "Interdictor")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("UmojanStasisGun", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Freeze_Init () {
    gt_Freeze = TriggerCreate("gt_Freeze_Func");
    TriggerAddEventUnitAttacked(gt_Freeze, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ThorFortAi
//--------------------------------------------------------------------------------------------------
bool gt_ThorFortAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UmojanFrenrir"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), Order(AbilityCommand("UmojanFrenrirSiegeMode", 0)), c_orderQueueReplace);
    Wait(60.0, c_timeGame);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("UmojanFrenrirNormalMode", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ThorFortAi_Init () {
    gt_ThorFortAi = TriggerCreate("gt_ThorFortAi_Func");
    TriggerAddEventUnitStartedAttack2(gt_ThorFortAi, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Shredder Ai 3
//--------------------------------------------------------------------------------------------------
bool gt_ShredderAi3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UmojanShadowguard"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingUnit(AbilityCommand("UmojanLockdown", 0), EventUnitTarget()), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShredderAi3_Init () {
    gt_ShredderAi3 = TriggerCreate("gt_ShredderAi3_Func");
    TriggerAddEventUnitAttacked(gt_ShredderAi3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Shredder Ai
//--------------------------------------------------------------------------------------------------
bool gt_ShredderAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Medic"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("BonesTossGrenade", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShredderAi_Init () {
    gt_ShredderAi = TriggerCreate("gt_ShredderAi_Func");
    TriggerAddEventUnitAttacked(gt_ShredderAi, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Political Ai
//--------------------------------------------------------------------------------------------------
bool gt_PoliticalAi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "MengskMarine"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OnwardComrades", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PoliticalAi_Init () {
    gt_PoliticalAi = TriggerCreate("gt_PoliticalAi_Func");
    TriggerAddEventUnitAttacked(gt_PoliticalAi, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Shredder Ai 2
//--------------------------------------------------------------------------------------------------
bool gt_ShredderAi2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "PoliticalAdvisor"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("BonesTossGrenade", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShredderAi2_Init () {
    gt_ShredderAi2 = TriggerCreate("gt_ShredderAi2_Func");
    TriggerAddEventUnitAttacked(gt_ShredderAi2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Political Ai 3
//--------------------------------------------------------------------------------------------------
bool gt_PoliticalAi3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "PoliticalAdvisor"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OnwardComrades", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PoliticalAi3_Init () {
    gt_PoliticalAi3 = TriggerCreate("gt_PoliticalAi3_Func");
    TriggerAddEventUnitAttacked(gt_PoliticalAi3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Political Ai 2
//--------------------------------------------------------------------------------------------------
bool gt_PoliticalAi2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Spectre"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("UltrasonicPulse", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PoliticalAi2_Init () {
    gt_PoliticalAi2 = TriggerCreate("gt_PoliticalAi2_Func");
    TriggerAddEventUnitAttacked(gt_PoliticalAi2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Anti Air Ai 3
//--------------------------------------------------------------------------------------------------
bool gt_AntiAirAi3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "SupportShuttle"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitTarget()) == "Aquila") && (UnitGetType(EventUnitTarget()) == "Blitzer")) {
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("PsionicSuppressionField", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
    }
    else {
        if (((UnitGetType(EventUnitTarget()) == "Interdictor") || (UnitGetType(EventUnitTarget()) == "AvengerGenetron") || (UnitGetType(EventUnitTarget()) == "Torrent"))) {
            UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("PsionicSuppressionField", 0), UnitGetPosition(EventUnitTarget())), c_orderQueueReplace);
            Wait(0.6, c_timeGame);
            UnitIssueOrder(EventUnit(), OrderTargetingUnit(AbilityCommand("CloakingDrone", 0), EventUnit()), c_orderQueueReplace);
            Wait(1.5, c_timeGame);
            UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("moveUED", 0), PointFromId(194026153)), c_orderQueueReplace);
            TriggerEnable(TriggerGetCurrent(), false);
        }
        else {
            Wait(5.0, c_timeGame);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AntiAirAi3_Init () {
    gt_AntiAirAi3 = TriggerCreate("gt_AntiAirAi3_Func");
    TriggerAddEventUnitAttacked(gt_AntiAirAi3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Anti Air Ai Timer 2
//--------------------------------------------------------------------------------------------------
bool gt_AntiAirAiTimer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_AntiAirAi3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AntiAirAiTimer2_Init () {
    gt_AntiAirAiTimer2 = TriggerCreate("gt_AntiAirAiTimer2_Func");
    TriggerAddEventTimePeriodic(gt_AntiAirAiTimer2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GhostOpening
//--------------------------------------------------------------------------------------------------
bool gt_GhostOpening_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    Wait(2.0, c_timeGame);
    VisRevealArea(1, RegionFromId(10), 30.0, false);
    VisRevealArea(2, RegionFromId(10), 20.0, false);
    Wait(0.1, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(1255484409), 0.0, -1, 10, true);
    libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(1876606104), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/BDD8F2A0"), StringExternal("Param/Value/FEE1779F"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    CameraPan(1, RegionGetCenter(RegionFromId(5)), 30.0, -1, 10.0, false);
    UnitIssueOrder(UnitFromId(1876606104), OrderTargetingUnit(AbilityCommand("UmojanLockdown", 0), UnitFromId(366627498)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(731406721), OrderTargetingUnit(AbilityCommand("UmojanLockdown", 0), UnitFromId(1533864647)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(UnitFromId(1876606104), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(366627498)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(731406721), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(1533864647)), c_orderQueueReplace);
    UnitSetPropertyFixed(UnitFromId(1533864647), c_unitPropLife, 150.0);
    UnitSetPropertyFixed(UnitFromId(366627498), c_unitPropLife, 150.0);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(UnitFromId(1663626787), OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitFromId(627734765)), c_orderQueueReplace);
    CameraApplyInfo(1, CameraInfoFromId(1074506251), 6.0, -1, 10, true);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(1663626787), true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, StringExternal("Param/Value/9528F96F"), StringExternal("Param/Value/CE456803"), 7.0, c_transmissionDurationAdd, false, c_maxPlayers, false);
    Wait(14.0, c_timeReal);
    GameSetMissionTimePaused(false);
    CameraApplyInfo(1, CameraInfoFromId(455740498), 5.0, -1, 10, true);
    Wait(4.0, c_timeReal);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/957A25EB"));
    libNtve_gf_ShareVisionofUnit(UnitFromId(1436647584), true, 1);
    VisFillArea(1, RegionFromId(10), c_fillTypeUnexplored, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GhostOpening_Init () {
    gt_GhostOpening = TriggerCreate("gt_GhostOpening_Func");
    TriggerAddEventTimeElapsed(gt_GhostOpening, 210.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UmojanSendGhost 2
//--------------------------------------------------------------------------------------------------
bool gt_UmojanSendGhost2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto8443D7C0_g;
    int auto8443D7C0_u;
    unit auto8443D7C0_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_sabotageTarget = UnitGroup(null, 1, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    UnitCreate(1, "UmojanShadowguard", 0, 2, PointFromId(479513076), 180.0);
    Wait(1.0, c_timeReal);
    auto8443D7C0_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto8443D7C0_u = UnitGroupCount(auto8443D7C0_g, c_unitCountAll);
    for (;; auto8443D7C0_u -= 1) {
        auto8443D7C0_var = UnitGroupUnitFromEnd(auto8443D7C0_g, auto8443D7C0_u);
        if (auto8443D7C0_var == null) { break; }
        UnitIssueOrder(auto8443D7C0_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UmojanSendGhost2_Init () {
    gt_UmojanSendGhost2 = TriggerCreate("gt_UmojanSendGhost2_Func");
    TriggerAddEventTimePeriodic(gt_UmojanSendGhost2, 310.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UmojanSendGhost
//--------------------------------------------------------------------------------------------------
bool gt_UmojanSendGhost_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto84758116_g;
    int auto84758116_u;
    unit auto84758116_var;
    unitgroup auto7ED3D56D_g;
    int auto7ED3D56D_u;
    unit auto7ED3D56D_var;
    unitgroup auto69B4CCB7_g;
    int auto69B4CCB7_u;
    unit auto69B4CCB7_var;
    unitgroup autoE7F7B7C3_g;
    int autoE7F7B7C3_u;
    unit autoE7F7B7C3_var;
    unitgroup auto652825D0_g;
    int auto652825D0_u;
    unit auto652825D0_var;
    unitgroup auto6F7BDD84_g;
    int auto6F7BDD84_u;
    unit auto6F7BDD84_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lv_sabotageTarget = UnitGroup(null, 1, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    lv_unitneedtomove = UnitLastCreatedGroup();
    UnitCreate(6, "UmojanShadowguard", 0, 2, PointFromId(479513076), 180.0);
    Wait(1.0, c_timeReal);
    auto84758116_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto84758116_u = UnitGroupCount(auto84758116_g, c_unitCountAll);
    for (;; auto84758116_u -= 1) {
        auto84758116_var = UnitGroupUnitFromEnd(auto84758116_g, auto84758116_u);
        if (auto84758116_var == null) { break; }
        UnitIssueOrder(auto84758116_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto7ED3D56D_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto7ED3D56D_u = UnitGroupCount(auto7ED3D56D_g, c_unitCountAll);
    for (;; auto7ED3D56D_u -= 1) {
        auto7ED3D56D_var = UnitGroupUnitFromEnd(auto7ED3D56D_g, auto7ED3D56D_u);
        if (auto7ED3D56D_var == null) { break; }
        UnitIssueOrder(auto7ED3D56D_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto69B4CCB7_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto69B4CCB7_u = UnitGroupCount(auto69B4CCB7_g, c_unitCountAll);
    for (;; auto69B4CCB7_u -= 1) {
        auto69B4CCB7_var = UnitGroupUnitFromEnd(auto69B4CCB7_g, auto69B4CCB7_u);
        if (auto69B4CCB7_var == null) { break; }
        UnitIssueOrder(auto69B4CCB7_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    autoE7F7B7C3_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoE7F7B7C3_u = UnitGroupCount(autoE7F7B7C3_g, c_unitCountAll);
    for (;; autoE7F7B7C3_u -= 1) {
        autoE7F7B7C3_var = UnitGroupUnitFromEnd(autoE7F7B7C3_g, autoE7F7B7C3_u);
        if (autoE7F7B7C3_var == null) { break; }
        UnitIssueOrder(autoE7F7B7C3_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupRandomUnit(lv_sabotageTarget, c_unitCountAlive)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto652825D0_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto652825D0_u = UnitGroupCount(auto652825D0_g, c_unitCountAll);
    for (;; auto652825D0_u -= 1) {
        auto652825D0_var = UnitGroupUnitFromEnd(auto652825D0_g, auto652825D0_u);
        if (auto652825D0_var == null) { break; }
        UnitIssueOrder(auto652825D0_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto6F7BDD84_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto6F7BDD84_u = UnitGroupCount(auto6F7BDD84_g, c_unitCountAll);
    for (;; auto6F7BDD84_u -= 1) {
        auto6F7BDD84_var = UnitGroupUnitFromEnd(auto6F7BDD84_g, auto6F7BDD84_u);
        if (auto6F7BDD84_var == null) { break; }
        UnitIssueOrder(auto6F7BDD84_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupRandomUnit(lv_sabotageTarget, c_unitCountAlive)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UmojanSendGhost_Init () {
    gt_UmojanSendGhost = TriggerCreate("gt_UmojanSendGhost_Func");
    TriggerAddEventTimePeriodic(gt_UmojanSendGhost, 555.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UmojanSendGhost 3
//--------------------------------------------------------------------------------------------------
bool gt_UmojanSendGhost3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto84B02909_g;
    int auto84B02909_u;
    unit auto84B02909_var;
    unitgroup auto6F07D913_g;
    int auto6F07D913_u;
    unit auto6F07D913_var;
    unitgroup auto1581BEA1_g;
    int auto1581BEA1_u;
    unit auto1581BEA1_var;
    unitgroup auto846B80A0_g;
    int auto846B80A0_u;
    unit auto846B80A0_var;
    unitgroup auto8AA83B21_g;
    int auto8AA83B21_u;
    unit auto8AA83B21_var;
    unitgroup autoD7CBB828_g;
    int autoD7CBB828_u;
    unit autoD7CBB828_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeReal);
    auto84B02909_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 12);
    auto84B02909_u = UnitGroupCount(auto84B02909_g, c_unitCountAll);
    for (;; auto84B02909_u -= 1) {
        auto84B02909_var = UnitGroupUnitFromEnd(auto84B02909_g, auto84B02909_u);
        if (auto84B02909_var == null) { break; }
        UnitIssueOrder(auto84B02909_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto6F07D913_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto6F07D913_u = UnitGroupCount(auto6F07D913_g, c_unitCountAll);
    for (;; auto6F07D913_u -= 1) {
        auto6F07D913_var = UnitGroupUnitFromEnd(auto6F07D913_g, auto6F07D913_u);
        if (auto6F07D913_var == null) { break; }
        UnitIssueOrder(auto6F07D913_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto1581BEA1_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto1581BEA1_u = UnitGroupCount(auto1581BEA1_g, c_unitCountAll);
    for (;; auto1581BEA1_u -= 1) {
        auto1581BEA1_var = UnitGroupUnitFromEnd(auto1581BEA1_g, auto1581BEA1_u);
        if (auto1581BEA1_var == null) { break; }
        UnitIssueOrder(auto1581BEA1_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto846B80A0_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto846B80A0_u = UnitGroupCount(auto846B80A0_g, c_unitCountAll);
    for (;; auto846B80A0_u -= 1) {
        auto846B80A0_var = UnitGroupUnitFromEnd(auto846B80A0_g, auto846B80A0_u);
        if (auto846B80A0_var == null) { break; }
        UnitIssueOrder(auto846B80A0_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupRandomUnit(lv_sabotageTarget, c_unitCountAlive)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    auto8AA83B21_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto8AA83B21_u = UnitGroupCount(auto8AA83B21_g, c_unitCountAll);
    for (;; auto8AA83B21_u -= 1) {
        auto8AA83B21_var = UnitGroupUnitFromEnd(auto8AA83B21_g, auto8AA83B21_u);
        if (auto8AA83B21_var == null) { break; }
        UnitIssueOrder(auto8AA83B21_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupClosestToPoint(lv_sabotageTarget, PointFromId(479513076))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    autoD7CBB828_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoD7CBB828_u = UnitGroupCount(autoD7CBB828_g, c_unitCountAll);
    for (;; autoD7CBB828_u -= 1) {
        autoD7CBB828_var = UnitGroupUnitFromEnd(autoD7CBB828_g, autoD7CBB828_u);
        if (autoD7CBB828_var == null) { break; }
        UnitIssueOrder(autoD7CBB828_var, OrderTargetingUnit(AbilityCommand("UmojanSabotage", 0), UnitGroupRandomUnit(lv_sabotageTarget, c_unitCountAlive)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UmojanSendGhost3_Init () {
    gt_UmojanSendGhost3 = TriggerCreate("gt_UmojanSendGhost3_Func");
    TriggerAddEventTimePeriodic(gt_UmojanSendGhost3, 560.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MakeNuke
//--------------------------------------------------------------------------------------------------
bool gt_MakeNuke_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1048091815)) == true)) {
        UnitIssueOrder(UnitFromId(1048091815), Order(AbilityCommand("UmojanArmSiloWithNuke", 0)), c_orderQueueReplace);
        UnitIssueOrder(UnitFromId(1048091815), Order(AbilityCommand("ArmSiloWithNuke", 0)), c_orderQueueReplace);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeNuke_Init () {
    gt_MakeNuke = TriggerCreate("gt_MakeNuke_Func");
    TriggerAddEventTimePeriodic(gt_MakeNuke, 900.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Goliath
//--------------------------------------------------------------------------------------------------
bool gt_Goliath_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto32AF2B62_g;
    int auto32AF2B62_u;
    unit auto32AF2B62_var;
    unitgroup auto477FF7B6_g;
    int auto477FF7B6_u;
    unit auto477FF7B6_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(2, "UmojanNorns", 0, 2, PointFromId(176637652), 180.0);
    Wait(1.0, c_timeReal);
    auto32AF2B62_g = UnitGroup("UmojanNorns", 2, RegionFromId(13), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto32AF2B62_u = UnitGroupCount(auto32AF2B62_g, c_unitCountAll);
    for (;; auto32AF2B62_u -= 1) {
        auto32AF2B62_var = UnitGroupUnitFromEnd(auto32AF2B62_g, auto32AF2B62_u);
        if (auto32AF2B62_var == null) { break; }
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("UmojanBuildTower", 2), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto32AF2B62_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(15))), c_orderQueueAddToEnd);
    }
    Wait(7.0, c_timeReal);
    auto477FF7B6_g = UnitGroup("UmojanNorns", 2, RegionFromId(13), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto477FF7B6_u = UnitGroupCount(auto477FF7B6_g, c_unitCountAll);
    for (;; auto477FF7B6_u -= 1) {
        auto477FF7B6_var = UnitGroupUnitFromEnd(auto477FF7B6_g, auto477FF7B6_u);
        if (auto477FF7B6_var == null) { break; }
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("UmojanBuildTower", 2), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto477FF7B6_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(15))), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Goliath_Init () {
    gt_Goliath = TriggerCreate("gt_Goliath_Func");
    TriggerAddEventTimePeriodic(gt_Goliath, 290.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PathFinder
//--------------------------------------------------------------------------------------------------
bool gt_PathFinder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup autoDCD04CBF_g;
    int autoDCD04CBF_u;
    unit autoDCD04CBF_var;
    unitgroup autoB919FADE_g;
    int autoB919FADE_u;
    unit autoB919FADE_var;
    unitgroup autoEEF49513_g;
    int autoEEF49513_u;
    unit autoEEF49513_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(3, "UmojanPathfinder", 0, 2, PointFromId(1638320082), 180.0);
    Wait(1.0, c_timeReal);
    autoDCD04CBF_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(19), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoDCD04CBF_u = UnitGroupCount(autoDCD04CBF_g, c_unitCountAll);
    for (;; autoDCD04CBF_u -= 1) {
        autoDCD04CBF_var = UnitGroupUnitFromEnd(autoDCD04CBF_g, autoDCD04CBF_u);
        if (autoDCD04CBF_var == null) { break; }
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(autoDCD04CBF_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    Wait(7.0, c_timeReal);
    autoB919FADE_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(19), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoB919FADE_u = UnitGroupCount(autoB919FADE_g, c_unitCountAll);
    for (;; autoB919FADE_u -= 1) {
        autoB919FADE_var = UnitGroupUnitFromEnd(autoB919FADE_g, autoB919FADE_u);
        if (autoB919FADE_var == null) { break; }
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(autoB919FADE_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    Wait(7.0, c_timeReal);
    autoEEF49513_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(19), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoEEF49513_u = UnitGroupCount(autoEEF49513_g, c_unitCountAll);
    for (;; autoEEF49513_u -= 1) {
        autoEEF49513_var = UnitGroupUnitFromEnd(autoEEF49513_g, autoEEF49513_u);
        if (autoEEF49513_var == null) { break; }
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(autoEEF49513_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PathFinder_Init () {
    gt_PathFinder = TriggerCreate("gt_PathFinder_Func");
    TriggerAddEventTimePeriodic(gt_PathFinder, 480.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PathFinder 2
//--------------------------------------------------------------------------------------------------
bool gt_PathFinder2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto05E59B27_g;
    int auto05E59B27_u;
    unit auto05E59B27_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "UmojanPathfinder", 0, 2, PointFromId(1135999825), 180.0);
    auto05E59B27_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(26), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto05E59B27_u = UnitGroupCount(auto05E59B27_g, c_unitCountAll);
    for (;; auto05E59B27_u -= 1) {
        auto05E59B27_var = UnitGroupUnitFromEnd(auto05E59B27_g, auto05E59B27_u);
        if (auto05E59B27_var == null) { break; }
        UnitIssueOrder(auto05E59B27_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(auto05E59B27_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PathFinder2_Init () {
    gt_PathFinder2 = TriggerCreate("gt_PathFinder2_Func");
    TriggerAddEventTimePeriodic(gt_PathFinder2, 400.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PathfinderPicker
//--------------------------------------------------------------------------------------------------
bool gt_PathfinderPicker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto9F415C69_g;
    int auto9F415C69_u;
    unit auto9F415C69_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto9F415C69_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(19), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto9F415C69_u = UnitGroupCount(auto9F415C69_g, c_unitCountAll);
    for (;; auto9F415C69_u -= 1) {
        auto9F415C69_var = UnitGroupUnitFromEnd(auto9F415C69_g, auto9F415C69_u);
        if (auto9F415C69_var == null) { break; }
        UnitIssueOrder(auto9F415C69_var, OrderTargetingPoint(AbilityCommand("UmojanDeployStrikeMines", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        Wait(5.0, c_timeReal);
        UnitIssueOrder(auto9F415C69_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PathfinderPicker_Init () {
    gt_PathfinderPicker = TriggerCreate("gt_PathfinderPicker_Func");
    TriggerAddEventTimePeriodic(gt_PathfinderPicker, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PathfinderPicker 2
//--------------------------------------------------------------------------------------------------
bool gt_PathfinderPicker2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto65CEE09E_g;
    int auto65CEE09E_u;
    unit auto65CEE09E_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto65CEE09E_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(19), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto65CEE09E_u = UnitGroupCount(auto65CEE09E_g, c_unitCountAll);
    for (;; auto65CEE09E_u -= 1) {
        auto65CEE09E_var = UnitGroupUnitFromEnd(auto65CEE09E_g, auto65CEE09E_u);
        if (auto65CEE09E_var == null) { break; }
        UnitIssueOrder(auto65CEE09E_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        Wait(5.0, c_timeReal);
        UnitIssueOrder(auto65CEE09E_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PathfinderPicker2_Init () {
    gt_PathfinderPicker2 = TriggerCreate("gt_PathfinderPicker2_Func");
    TriggerAddEventTimePeriodic(gt_PathfinderPicker2, 72.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpawnSpotter
//--------------------------------------------------------------------------------------------------
bool gt_SpawnSpotter_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto888CA6E3_g;
    int auto888CA6E3_u;
    unit auto888CA6E3_var;
    unitgroup autoC70EFEED_g;
    int autoC70EFEED_u;
    unit autoC70EFEED_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(2, "UmojanPathfinder", 0, 2, RegionRandomPoint(RegionFromId(30)), 180.0);
    auto888CA6E3_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(31), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    auto888CA6E3_u = UnitGroupCount(auto888CA6E3_g, c_unitCountAll);
    for (;; auto888CA6E3_u -= 1) {
        auto888CA6E3_var = UnitGroupUnitFromEnd(auto888CA6E3_g, auto888CA6E3_u);
        if (auto888CA6E3_var == null) { break; }
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueReplace);
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(14))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto888CA6E3_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueAddToEnd);
    }
    Wait(5.0, c_timeReal);
    autoC70EFEED_g = UnitGroup("UmojanPathfinder", 2, RegionFromId(31), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1);
    autoC70EFEED_u = UnitGroupCount(autoC70EFEED_g, c_unitCountAll);
    for (;; autoC70EFEED_u -= 1) {
        autoC70EFEED_var = UnitGroupUnitFromEnd(autoC70EFEED_g, autoC70EFEED_u);
        if (autoC70EFEED_var == null) { break; }
        UnitIssueOrder(autoC70EFEED_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(32))), c_orderQueueReplace);
        Wait(5.0, c_timeReal);
        UnitIssueOrder(autoC70EFEED_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(32))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoC70EFEED_var, OrderTargetingPoint(AbilityCommand("UmojanDeployGroundSensor", 0), RegionRandomPoint(RegionFromId(32))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoC70EFEED_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1344934326)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnSpotter_Init () {
    gt_SpawnSpotter = TriggerCreate("gt_SpawnSpotter_Func");
    TriggerAddEventTimePeriodic(gt_SpawnSpotter, 340.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pickker
//--------------------------------------------------------------------------------------------------
bool gt_Pickker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup autoA15F14C9_g;
    int autoA15F14C9_u;
    unit autoA15F14C9_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoA15F14C9_g = UnitGroup(null, 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 8);
    autoA15F14C9_u = UnitGroupCount(autoA15F14C9_g, c_unitCountAll);
    for (;; autoA15F14C9_u -= 1) {
        autoA15F14C9_var = UnitGroupUnitFromEnd(autoA15F14C9_g, autoA15F14C9_u);
        if (autoA15F14C9_var == null) { break; }
        UnitIssueOrder(autoA15F14C9_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
        Wait(15.0, c_timeReal);
        UnitIssueOrder(autoA15F14C9_var, OrderTargetingPoint(AbilityCommand("UmojanBuildNorns", 1), RegionRandomPoint(RegionFromId(15))), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Pickker_Init () {
    gt_Pickker = TriggerCreate("gt_Pickker_Func");
    TriggerAddEventTimePeriodic(gt_Pickker, 610.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pickker 2
//--------------------------------------------------------------------------------------------------
bool gt_Pickker2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto6C795239_g;
    int auto6C795239_u;
    unit auto6C795239_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto6C795239_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(11), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 8);
    auto6C795239_u = UnitGroupCount(auto6C795239_g, c_unitCountAll);
    for (;; auto6C795239_u -= 1) {
        auto6C795239_var = UnitGroupUnitFromEnd(auto6C795239_g, auto6C795239_u);
        if (auto6C795239_var == null) { break; }
        UnitIssueOrder(auto6C795239_var, OrderTargetingPoint(AbilityCommand("UmojanTacNukeStrike", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
        UnitIssueOrder(auto6C795239_var, OrderTargetingPoint(AbilityCommand("TacNukeStrike", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Pickker2_Init () {
    gt_Pickker2 = TriggerCreate("gt_Pickker2_Func");
    TriggerAddEventTimePeriodic(gt_Pickker2, 310.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pickker 3
//--------------------------------------------------------------------------------------------------
bool gt_Pickker3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto4BE5DA77_g;
    int auto4BE5DA77_u;
    unit auto4BE5DA77_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto4BE5DA77_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(27), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 8);
    auto4BE5DA77_u = UnitGroupCount(auto4BE5DA77_g, c_unitCountAll);
    for (;; auto4BE5DA77_u -= 1) {
        auto4BE5DA77_var = UnitGroupUnitFromEnd(auto4BE5DA77_g, auto4BE5DA77_u);
        if (auto4BE5DA77_var == null) { break; }
        UnitIssueOrder(auto4BE5DA77_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Pickker3_Init () {
    gt_Pickker3 = TriggerCreate("gt_Pickker3_Func");
    TriggerAddEventTimePeriodic(gt_Pickker3, 210.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pickker 4
//--------------------------------------------------------------------------------------------------
bool gt_Pickker4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_sabotageTarget;
    unitgroup lv_unitneedtomove;

    // Automatic Variable Declarations
    unitgroup auto494FC383_g;
    int auto494FC383_u;
    unit auto494FC383_var;

    // Variable Initialization
    lv_sabotageTarget = UnitGroupEmpty();
    lv_unitneedtomove = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto494FC383_g = UnitGroup("UmojanShadowguard", 2, RegionFromId(28), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 8);
    auto494FC383_u = UnitGroupCount(auto494FC383_g, c_unitCountAll);
    for (;; auto494FC383_u -= 1) {
        auto494FC383_var = UnitGroupUnitFromEnd(auto494FC383_g, auto494FC383_u);
        if (auto494FC383_var == null) { break; }
        UnitIssueOrder(auto494FC383_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(9))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Pickker4_Init () {
    gt_Pickker4 = TriggerCreate("gt_Pickker4_Func");
    TriggerAddEventTimeElapsed(gt_Pickker4, 900.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Start_Init();
    gt_Start2_Init();
    gt_Start3_Init();
    gt_StartCuteAi_Init();
    gt_StartCuteAi2_Init();
    gt_ClaimRegion_Init();
    gt_BossWarning_Init();
    gt_ClaimRegion2_Init();
    gt_ClaimRegion3_Init();
    gt_SnowEffect_Init();
    gt_OpeningCinamaticdontchange_Init();
    gt_TalkingaboutGhosts_Init();
    gt_Boss2_Init();
    gt_Gorgondies2_Init();
    gt_TalkingaboutLore_Init();
    gt_Skipped_Init();
    gt_GameStarts_Init();
    gt_Money_Init();
    gt_Winfinishme_Init();
    gt_UmojanUpgrades_Init();
    gt_Upgrades_Init();
    gt_EscortRaid2_Init();
    gt_EscortRaid4_Init();
    gt_EscortRaid3_Init();
    gt_EscortRaid_Init();
    gt_EscortRaid6_Init();
    gt_EscortRaid5_Init();
    gt_RaidPicker_Init();
    gt_Boss_Init();
    gt_Gorgondies_Init();
    gt_Timer_Init();
    gt_CatAi_Init();
    gt_RNG_Init();
    gt_GhostCatAi_Init();
    gt_MarineAi_Init();
    gt_MarineAi2_Init();
    gt_UmojanBunker_Init();
    gt_ShadowguardPICKER_Init();
    gt_NightmareMode_Init();
    gt_WhirwindAiStart_Init();
    gt_WhirwindAiStart2_Init();
    gt_MistAiPicker_Init();
    gt_BCAi_Init();
    gt_BCAi2_Init();
    gt_Freeze_Init();
    gt_ThorFortAi_Init();
    gt_ShredderAi3_Init();
    gt_ShredderAi_Init();
    gt_PoliticalAi_Init();
    gt_ShredderAi2_Init();
    gt_PoliticalAi3_Init();
    gt_PoliticalAi2_Init();
    gt_AntiAirAi3_Init();
    gt_AntiAirAiTimer2_Init();
    gt_GhostOpening_Init();
    gt_UmojanSendGhost2_Init();
    gt_UmojanSendGhost_Init();
    gt_UmojanSendGhost3_Init();
    gt_MakeNuke_Init();
    gt_Goliath_Init();
    gt_PathFinder_Init();
    gt_PathFinder2_Init();
    gt_PathfinderPicker_Init();
    gt_PathfinderPicker2_Init();
    gt_SpawnSpotter_Init();
    gt_Pickker_Init();
    gt_Pickker2_Init();
    gt_Pickker3_Init();
    gt_Pickker4_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitCustomAI();
    InitTriggers();
}

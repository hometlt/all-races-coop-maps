<?xml version="1.0" encoding="utf-8"?>
<TriggerData>
    <Root>
        <Item Type="CustomScript" Id="219FBC40"/>
    </Root>
    <Element Type="CustomScript" Id="219FBC40">
        <ScriptCode>
            //==================================================================================================
            //
            // Generated Map Script
            //
            // Name:   RTC 2017: Death From Above
            //
            //==================================================================================================
            include &quot;TriggerLibs/NativeLib&quot;
            include &quot;TriggerLibs/LibertyLib&quot;
            include &quot;TriggerLibs/SwarmLib&quot;
            include &quot;LibCOMI&quot;
            //--------------------------------------------------------------------------------------------------
            // Library Initialization
            //--------------------------------------------------------------------------------------------------
            void InitLibs () {
                libNtve_InitLib();
                libLbty_InitLib();
                libHots_InitLib();
                libCOMI_InitLib();
            }
            //--------------------------------------------------------------------------------------------------
            // Constants
            //--------------------------------------------------------------------------------------------------
            int gv_pLAYER_01_USER = 1;
            int gv_pLAYER_02_USER = 2;
            int gv_pLAYER_04_Mothership = 9;
            int gv_pLAYER_06_Bonus = 6;
            const int gv_pLAYER_03_ENEMY = 7;
            const int gv_pLAYER_05_ENEMY = 8;
            //--------------------------------------------------------------------------------------------------
            // Global Variables
            //--------------------------------------------------------------------------------------------------
            int gv_turret1_Bonus;
            int gv_turret2_Bonus;
            int gv_turret_Ping1;
            int gv_turret_Ping2;
            int gv_void_Behemoth_Timer;
            int gv_turet_Reveal;
            timer gv_bonus_Timer;
            point gv_victoryCompletePan;
            int gv_bonus_Wave_Ping1;
            unit gv_bonus_Wave_Drop1;
            int gv_mothership_Def_Ping;
            unit gv_mothership_DefDrop;
            unitgroup gv_mothership_Def_Group;
            int gv_mothership_Def_Ping2;
            unit gv_mothership_DefDrop2;
            unitgroup gv_mothership_Def_Group2;
            int gv_mothership_Def_Ping3;
            unit gv_mothership_DefDrop3;
            unitgroup gv_mothership_Def_Group3;
            unitgroup gv_bonus_Wave_Group1;
            int gv_bonus_Wave_Ping2;
            unit gv_bonus_Wave_Drop2;
            unitgroup gv_bonus_Wave_Group2;
            unit gv_projector;
            int gv_shard01;
            int gv_shard02;
            int gv_shard03;
            int gv_shard04;
            int gv_shard05;
            int gv_shard06;
            int gv_shard07;
            int gv_shard08;
            int gv_shard09;
            int gv_shard10;
            int gv_shadow01;
            int gv_shadow02;
            int gv_shadow03;
            int gv_shadow04;
            int gv_shadow05;
            int gv_path1;
            int gv_path2;
            int gv_path3;
            int gv_ping_Fissure01;
            int gv_ping_Fissure02;
            int gv_ping_Fissure03;
            int gv_fissure_Ping;
            int gv_fissure_Ping2;
            int gv_fissure_Ping3;
            int gv_chasm_Ping;
            unitgroup gv_pLAYERS_GROUP;
            int gv_behemoth_Ping;
            unit gv_behemoth_Unit1;
            unit gv_drop_Pod;
            unit gv_torment_Shard;
            unit gv_void_Thrasher;
            unit gv_void_Thrasher2;
            unit gv_beam1;
            unit gv_beam2;
            unit gv_beam3;
            unit gv_beam4;
            unit gv_beam5;
            unit gv_drop_Pod_AttackMS;
            unit gv_drop_Pod_AttackMS2;
            unit gv_drop_Pod_AttackMS3;
            unit gv_void_Rift;
            unit gv_drop_Pod2;
            unit gv_dropPod_1;
            unit gv_dropPod_Wave_MS1;
            unit gv_dropPod_Wave_MS2;
            unit gv_dropPod_Wave_MS3;
            unit gv_dropPod_Wave_MS4;
            unitgroup gv_dropPod_Wave_MS1_Group;
            unitgroup gv_dropPod_Wave_MS1_Group2;
            unitgroup gv_dropPod_Wave_MS1_Group3;
            unitgroup gv_dropPod_Wave_MS1_Group4;
            int gv_dropPodPing_WAVEMS_Ping;
            int gv_dropPodPing_WAVEMS_Ping2;
            int gv_dropPodPing_WAVEMS_Ping3;
            int gv_dropPodPing_WAVEMS_Ping4;
            unitgroup gv_dropPod_1Group;
            int gv_dropPodPing_1;
            unitgroup gv_drop_Pod1;
            unitgroup gv_drop_Pod3;
            unitgroup gv_attack_MothersihpGroup;
            unitgroup gv_attack_MothersihpGroup2;
            unitgroup gv_attack_MothersihpGroup3;
            unitgroup gv_hybrid;
            int gv_ping_DropPod;
            int gv_ping_Thrasher;
            int gv_ping_Thrasher2;
            int gv_ping_HybridDrop;
            unit gv_mothership;
            int gv_voidCorruptionObjective;
            unit gv_mothership_Shadow;
            int gv_projector_Ping;
            int gv_mothership_Ping;
            int gv_attackWave_MothershipPing;
            int gv_attackWave_MothershipPing2;
            int gv_attackWave_MothershipPing3;
            int gv_charging_Integer;
            int gv_vespene_Integer;
            int gv_attack_Wave;
            int gv_fissures;
            int gv_spawn_Shadows1;
            int gv_spawn_Shadows2;
            int gv_spawn_Shadows3;
            int gv_spawn_Constructs;
            int gv_channeling_Progress;
            int gv_objective_CorruptionShards;
            int gv_objective_Projector;
            int gv_objective_Mothership;
            void InitGlobals () {
                gv_turret1_Bonus = c_invalidObjectiveId;
                gv_turret2_Bonus = c_invalidObjectiveId;
                gv_turret_Ping1 = c_invalidPingId;
                gv_turret_Ping2 = c_invalidPingId;
                gv_void_Behemoth_Timer = c_invalidPingId;
                gv_bonus_Timer = TimerCreate();
                gv_bonus_Wave_Ping1 = c_invalidPingId;
                gv_mothership_Def_Ping = c_invalidPingId;
                gv_mothership_Def_Group = UnitGroupEmpty();
                gv_mothership_Def_Ping2 = c_invalidPingId;
                gv_mothership_Def_Group2 = UnitGroupEmpty();
                gv_mothership_Def_Ping3 = c_invalidPingId;
                gv_mothership_Def_Group3 = UnitGroupEmpty();
                gv_bonus_Wave_Group1 = UnitGroupEmpty();
                gv_bonus_Wave_Ping2 = c_invalidPingId;
                gv_bonus_Wave_Group2 = UnitGroupEmpty();
                gv_shard01 = c_invalidPingId;
                gv_shard02 = c_invalidPingId;
                gv_shard03 = c_invalidPingId;
                gv_shard04 = c_invalidPingId;
                gv_shard05 = c_invalidPingId;
                gv_shard06 = c_invalidPingId;
                gv_shard07 = c_invalidPingId;
                gv_shard08 = c_invalidPingId;
                gv_shard09 = c_invalidPingId;
                gv_shard10 = c_invalidPingId;
                gv_shadow01 = c_invalidPingId;
                gv_shadow02 = c_invalidPingId;
                gv_shadow03 = c_invalidPingId;
                gv_shadow04 = c_invalidPingId;
                gv_shadow05 = c_invalidPingId;
                gv_ping_Fissure01 = c_invalidPingId;
                gv_ping_Fissure02 = c_invalidPingId;
                gv_ping_Fissure03 = c_invalidPingId;
                gv_fissure_Ping = c_invalidPingId;
                gv_fissure_Ping2 = c_invalidPingId;
                gv_fissure_Ping3 = c_invalidPingId;
                gv_chasm_Ping = c_invalidPingId;
                gv_pLAYERS_GROUP = UnitGroupEmpty();
                gv_behemoth_Ping = c_invalidPingId;
                gv_dropPod_Wave_MS1_Group = UnitGroupEmpty();
                gv_dropPod_Wave_MS1_Group2 = UnitGroupEmpty();
                gv_dropPod_Wave_MS1_Group3 = UnitGroupEmpty();
                gv_dropPod_Wave_MS1_Group4 = UnitGroupEmpty();
                gv_dropPodPing_WAVEMS_Ping = c_invalidPingId;
                gv_dropPodPing_WAVEMS_Ping2 = c_invalidPingId;
                gv_dropPodPing_WAVEMS_Ping3 = c_invalidPingId;
                gv_dropPodPing_WAVEMS_Ping4 = c_invalidPingId;
                gv_dropPod_1Group = UnitGroupEmpty();
                gv_dropPodPing_1 = c_invalidPingId;
                gv_drop_Pod1 = UnitGroupEmpty();
                gv_drop_Pod3 = UnitGroupEmpty();
                gv_attack_MothersihpGroup = UnitGroupEmpty();
                gv_attack_MothersihpGroup2 = UnitGroupEmpty();
                gv_attack_MothersihpGroup3 = UnitGroupEmpty();
                gv_hybrid = UnitGroupEmpty();
                gv_ping_DropPod = c_invalidPingId;
                gv_ping_Thrasher = c_invalidPingId;
                gv_ping_Thrasher2 = c_invalidPingId;
                gv_ping_HybridDrop = c_invalidPingId;
                gv_projector_Ping = c_invalidPingId;
                gv_mothership_Ping = c_invalidPingId;
                gv_attackWave_MothershipPing = c_invalidPingId;
                gv_attackWave_MothershipPing2 = c_invalidPingId;
                gv_attackWave_MothershipPing3 = c_invalidPingId;
                gv_objective_CorruptionShards = c_invalidObjectiveId;
                gv_objective_Projector = c_invalidObjectiveId;
                gv_objective_Mothership = c_invalidObjectiveId;
            }
            //--------------------------------------------------------------------------------------------------
            // Global Function Declarations
            //--------------------------------------------------------------------------------------------------
            void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime);
            void gf_CreateProgressBarForMothership (unit lp_unit, int lp_time, fixed lp_progressBarHeight);
            void gf_CreateProgressBarForTurret (unit lp_unit, int lp_time, fixed lp_progressBarHeight);
            void gf_CreateProgressBarForChasm (unit lp_unit2, int lp_time, fixed lp_progressBarHeight);
            //--------------------------------------------------------------------------------------------------
            // Trigger Variables
            //--------------------------------------------------------------------------------------------------
            trigger gt_Init01LoadData;
            trigger gt_Init02Players;
            trigger gt_Init03LoadingComplete;
            trigger gt_Init04Technology;
            trigger gt_Init05Units;
            trigger gt_Init06MusicSound;
            trigger gt_Init07Environment;
            trigger gt_Init08Difficulties;
            trigger gt_Init09Coop;
            trigger gt_ConstructMissiles;
            trigger gt_GasPing;
            trigger gt_RevealBonusObjectiveQ;
            trigger gt_BonusObjective1Activate;
            trigger gt_Bonus_Turret_1_Attacks;
            trigger gt_Turret1Attack;
            trigger gt_RevealBonusObjectiveQ2;
            trigger gt_BonusObjective2Activate;
            trigger gt_Bonus_Turret_2_Attacks;
            trigger gt_Turret2Attack;
            trigger gt_Shard_Spawn1;
            trigger gt_Shard_Spawn5;
            trigger gt_Shard_Spawn2;
            trigger gt_Shard_Spawn3;
            trigger gt_Shard_Spawn4;
            trigger gt_DefeatObjective2;
            trigger gt_Music;
            trigger gt_StartGameQ;
            trigger gt_HighlightStart;
            trigger gt_HighlightStop;
            trigger gt_HighlightStartShard;
            trigger gt_HighlightStopShard;
            trigger gt_VoidChasmStartQ;
            trigger gt_VoidChasmRebirthQ;
            trigger gt_VoidChasmSummonEntities;
            trigger gt_VoidChasmEntitiesAttack;
            trigger gt_Fissure_Event;
            trigger gt_Gas_Players;
            trigger gt_Mothership_UnderAttack;
            trigger gt_ShardPing;
            trigger gt_ShardPing2;
            trigger gt_ShardPing3;
            trigger gt_ShardPing4;
            trigger gt_ShardPing5;
            trigger gt_ShardPing8;
            trigger gt_ShardPing9;
            trigger gt_ShardPing10;
            trigger gt_Thrasher_Ping;
            trigger gt_Thrasher_Ping2;
            trigger gt_MothershipCharge;
            trigger gt_Charging_Finish1;
            trigger gt_Purify_Area1;
            trigger gt_Purify_Area2;
            trigger gt_Purify_Area3;
            trigger gt_Purify_Area4;
            trigger gt_Charging_Finish2;
            trigger gt_Wave2_MS_Area1;
            trigger gt_Wave2_MS_Area2;
            trigger gt_Charging_Finish3;
            trigger gt_Wave3_MS_Area1;
            trigger gt_Wave3_MS_Area2;
            trigger gt_Charging_Finish4;
            trigger gt_Wave5_MS_Area1;
            trigger gt_Upgrades;
            trigger gt_VictoryFanfareQ;
            trigger gt_MainBaseDestroyed1;
            trigger gt_MainBaseDestroyed2;
            trigger gt_BonusAttackWave1;
            trigger gt_BonusAttackWave2;
            trigger gt_BonusAttackWave3;
            trigger gt_BonusAttackWave4;
            trigger gt_BonusAttackWave5;
            trigger gt_BonusAttackWave6;
            trigger gt_BonusAttackWave7;
            trigger gt_BonusAttackWave8;
            trigger gt_BonusAttackWave9;
            trigger gt_BonusAttackWave10;
            trigger gt_BonusAttackWave11;
            trigger gt_DestroyBonusAttackWavePing;
            trigger gt_DestroyBonusAttackWavePing2;
            trigger gt_DestroyBonusAttackWavePing3;
            trigger gt_DestroyBonusAttackWavePing4;
            trigger gt_DestroyBonusAttackWavePing5;
            trigger gt_StartAI;
            trigger gt_Mothership_Attack1;
            trigger gt_Mothership_Attack2;
            trigger gt_Mothership_Attack2Def;
            trigger gt_Mothership_Attack3Def;
            trigger gt_Mothership_Attack3;
            trigger gt_Mothership_Attack32;
            trigger gt_Mothership_Attack33;
            trigger gt_Mothership_Attack4;
            trigger gt_Mothership_Attack5;
            trigger gt_Mothership_AttackStart2;
            trigger gt_EnemyAttackWaveQ1;
            trigger gt_EnemyAttackWaveQ2;
            trigger gt_EnemyAttackWaveQ3;
            trigger gt_EnemyAttackWaveQ4;
            trigger gt_EnemyAttackWaveQ5;
            trigger gt_EnemyAttackWave6;
            trigger gt_EnemyAttackWave7;
            trigger gt_EnemyAttackWaveQ6;
            trigger gt_EnemyAttackWaveQ7;
            trigger gt_DestroyAttackWavePing;
            trigger gt_DestroyAttackWavePing2;
            trigger gt_DestroyAttackWavePing3;
            trigger gt_DestroyAttackWavePing4;
            trigger gt_DestroyAttackMothershipPing;
            trigger gt_DestroyAttackMothershipPing2;
            trigger gt_DestroyAttackMothershipPing3;
            trigger gt_DestroyAttackMothershipPing7;
            trigger gt_DestroyAttackMothershipPing4;
            trigger gt_DestroyAttackMothershipPing5;
            trigger gt_DestroyAttackMothershipPing6;
            //--------------------------------------------------------------------------------------------------
            // Global Functions
            //--------------------------------------------------------------------------------------------------
            trigger auto_gf_RunMissionEvent_Trigger = null;
            trigger auto_gf_RunMissionEvent_lp_missionEventTrigger;
            fixed auto_gf_RunMissionEvent_lp_missionEventTime;
            void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime) {
                auto_gf_RunMissionEvent_lp_missionEventTrigger = lp_missionEventTrigger;
                auto_gf_RunMissionEvent_lp_missionEventTime = lp_missionEventTime;
                if (auto_gf_RunMissionEvent_Trigger == null) {
                    auto_gf_RunMissionEvent_Trigger = TriggerCreate(&quot;auto_gf_RunMissionEvent_TriggerFunc&quot;);
                }
                TriggerExecute(auto_gf_RunMissionEvent_Trigger, false, false);
            }
            bool auto_gf_RunMissionEvent_TriggerFunc (bool testConds, bool runActions) {
                trigger lp_missionEventTrigger = auto_gf_RunMissionEvent_lp_missionEventTrigger;
                fixed lp_missionEventTime = auto_gf_RunMissionEvent_lp_missionEventTime;
                // Implementation
                while (!((GameGetMissionTime() &gt;= lp_missionEventTime))) {
                    Wait(0.5, c_timeAI);
                }
                if ((libCOMI_gf_GameIsOver() == false)) {
                    TriggerExecute(lp_missionEventTrigger, true, false);
                }
                return true;
            }
            void gf_CreateProgressBarForMothership (unit lp_unit, int lp_time, fixed lp_progressBarHeight) {
                // Variable Declarations
                unit lv_progressBarUnit;
                int lv_timerMax;
                int lv_timerCount;
                // Variable Initialization
                lv_timerMax = lp_time;
                lv_timerCount = lp_time;
                // Implementation
                if (true) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ProgressBarDummy&quot;, c_unitCreateIgnorePlacement, 1, UnitGetPosition(lp_unit));
                    lv_progressBarUnit = UnitLastCreated();
                    UnitSetHeight(lv_progressBarUnit, lp_progressBarHeight, 0.0);
                    UnitSetProgressStage(lv_progressBarUnit, 1, c_unitProgressStageResume);
                    libCOMI_gf_DisplayUnitProgressBar(lv_progressBarUnit, StringExternal(&quot;Param/Value/CA1152E3&quot;), 0, lv_timerMax);
                    libCOMI_gf_SetUnitProgressBarIsWideBar(lv_progressBarUnit, false);
                    libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit, lv_timerCount);
                    libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit, lv_timerCount);
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit, true);
                    Wait(2.0, c_timeAI);
                    while ((UnitIsAlive(lv_progressBarUnit) == true) &amp;&amp; (lv_timerCount &gt; 0)) {
                        libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit, lv_timerCount);
                        libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit, lv_timerCount);
                        lv_timerCount -= 1;
                        Wait(1.0, c_timeGame);
                    }
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit, false);
                    UnitRemove(lv_progressBarUnit);
                    UnitClearInfoText(lp_unit);
                    UnitSetState(lp_unit, c_unitStateTooltipable, false);
                }
            }
            void gf_CreateProgressBarForTurret (unit lp_unit, int lp_time, fixed lp_progressBarHeight) {
                // Variable Declarations
                unit lv_progressBarUnit2;
                int lv_timerMax2;
                int lv_timerCount2;
                // Variable Initialization
                lv_timerMax2 = lp_time;
                lv_timerCount2 = lp_time;
                // Implementation
                if (true) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ProgressBarDummy&quot;, c_unitCreateIgnorePlacement, 1, UnitGetPosition(lp_unit));
                    lv_progressBarUnit2 = UnitLastCreated();
                    UnitSetHeight(lv_progressBarUnit2, lp_progressBarHeight, 0.0);
                    UnitSetProgressStage(lv_progressBarUnit2, 1, c_unitProgressStageResume);
                    libCOMI_gf_DisplayUnitProgressBar(lv_progressBarUnit2, StringExternal(&quot;Param/Value/5018BA3A&quot;), 0, lv_timerMax2);
                    libCOMI_gf_SetUnitProgressBarIsWideBar(lv_progressBarUnit2, false);
                    libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit2, lv_timerCount2);
                    libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit2, lv_timerCount2);
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit2, true);
                    Wait(2.0, c_timeAI);
                    while ((UnitIsAlive(lv_progressBarUnit2) == true) &amp;&amp; (lv_timerCount2 &gt; 0)) {
                        libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit2, lv_timerCount2);
                        libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit2, lv_timerCount2);
                        lv_timerCount2 -= 1;
                        Wait(1.0, c_timeGame);
                    }
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit2, false);
                    UnitRemove(lv_progressBarUnit2);
                    UnitClearInfoText(lp_unit);
                    UnitSetState(lp_unit, c_unitStateTooltipable, false);
                }
            }
            void gf_CreateProgressBarForChasm (unit lp_unit2, int lp_time, fixed lp_progressBarHeight) {
                // Variable Declarations
                unit lv_progressBarUnit2;
                int lv_timerMax;
                int lv_timerCount;
                // Variable Initialization
                lv_timerMax = lp_time;
                lv_timerCount = lp_time;
                // Implementation
                if (true) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ProgressBarDummy&quot;, c_unitCreateIgnorePlacement, 1, UnitGetPosition(lp_unit2));
                    lv_progressBarUnit2 = UnitLastCreated();
                    UnitSetHeight(lv_progressBarUnit2, lp_progressBarHeight, 0.0);
                    UnitSetProgressStage(lv_progressBarUnit2, 1, c_unitProgressStageResume);
                    libCOMI_gf_DisplayUnitProgressBar(lv_progressBarUnit2, StringExternal(&quot;Param/Value/E066CE71&quot;), 0, lv_timerMax);
                    libCOMI_gf_SetUnitProgressBarIsWideBar(lv_progressBarUnit2, false);
                    libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit2, lv_timerCount);
                    libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit2, lv_timerCount);
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit2, true);
                    Wait(2.0, c_timeAI);
                    while ((UnitIsAlive(lv_progressBarUnit2) == true) &amp;&amp; (lv_timerCount &gt; 0)) {
                        libCOMI_gf_SetUnitProgressBarProgress(lv_progressBarUnit2, lv_timerCount);
                        libCOMI_gf_SetUnitProgressBarProgress2(lv_progressBarUnit2, lv_timerCount);
                        lv_timerCount -= 1;
                        Wait(1.0, c_timeGame);
                    }
                    libCOMI_gf_ShowHideUnitProgressBar(lv_progressBarUnit2, false);
                    UnitRemove(lv_progressBarUnit2);
                    UnitClearInfoText(lp_unit2);
                    UnitSetState(lp_unit2, c_unitStateTooltipable, false);
                }
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 01 Load Data
            //--------------------------------------------------------------------------------------------------
            bool gt_Init01LoadData_Func (bool testConds, bool runActions) {
                playergroup auto871DBDD0_g;
                int auto871DBDD0_p;
                string autoFE921416_val;
                // Variable Declarations
                int lv_indexPlayer;
                // Variable Initialization
                // Actions
                if (!runActions) {
                    return true;
                }
                libCOMI_gf_LoadCoopMission(&quot;COOP_Placeholder&quot;, gt_Init03LoadingComplete);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init01LoadData_Init () {
                gt_Init01LoadData = TriggerCreate(&quot;gt_Init01LoadData_Func&quot;);
                TriggerAddEventMapInit(gt_Init01LoadData);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 02 Players
            //--------------------------------------------------------------------------------------------------
            bool gt_Init02Players_Func (bool testConds, bool runActions) {
                if (!runActions) {return true;}
                gv_pLAYER_01_USER = libCOMI_gf_GetRolePlayer(1);
                gv_pLAYER_02_USER = libCOMI_gf_GetRolePlayer(2);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init02Players_Init () {
                gt_Init02Players = TriggerCreate(&quot;gt_Init02Players_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 03 Loading Complete
            //--------------------------------------------------------------------------------------------------
            bool gt_Init03LoadingComplete_Func (bool testConds, bool runActions) {
                if (!runActions) {return true;}
                TriggerExecute(gt_Init02Players, true, false);
                //TriggerExecute(gt_Init04Technology, true, false);
                //TriggerExecute(gt_Init05Units, true, false);
                //TriggerExecute(gt_Init06MusicSound, true, false);
                //TriggerExecute(gt_Init07Environment, true, false);
                TriggerExecute(gt_Init08Difficulties, true, false);
                TriggerExecute(gt_StartGameQ, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init03LoadingComplete_Init () {
                gt_Init03LoadingComplete = TriggerCreate(&quot;gt_Init03LoadingComplete_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 04 Technology
            //--------------------------------------------------------------------------------------------------
            bool gt_Init04Technology_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init04Technology_Init () {
                gt_Init04Technology = TriggerCreate(&quot;gt_Init04Technology_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 05 Units
            //--------------------------------------------------------------------------------------------------
            bool gt_Init05Units_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init05Units_Init () {
                gt_Init05Units = TriggerCreate(&quot;gt_Init05Units_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 06 Music/Sound
            //--------------------------------------------------------------------------------------------------
            bool gt_Init06MusicSound_Func (bool testConds, bool runActions) {
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init06MusicSound_Init () {
                gt_Init06MusicSound = TriggerCreate(&quot;gt_Init06MusicSound_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 07 Environment
            //--------------------------------------------------------------------------------------------------
            bool gt_Init07Environment_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init07Environment_Init () {
                gt_Init07Environment = TriggerCreate(&quot;gt_Init07Environment_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 08 Difficulties
            //--------------------------------------------------------------------------------------------------
            bool gt_Init08Difficulties_Func (bool testConds, bool runActions) {
                // Variable Declarations
                fixed lv_bonusObjectiveLife;
                fixed lv_mainObjectiveLife;
                // Variable Initialization
                // Actions
                if (!runActions) {
                    return true;
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init08Difficulties_Init () {
                gt_Init08Difficulties = TriggerCreate(&quot;gt_Init08Difficulties_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Init 09 Coop
            //--------------------------------------------------------------------------------------------------
            bool gt_Init09Coop_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_ShowHideUnit(UnitFromId(1778431925), false);
                libNtve_gf_ShowHideUnit(UnitFromId(24340134), false);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1718504127), true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2069330141), true);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(20), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(20), &quot;GuideArrow2&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(14), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(14), &quot;GuideArrow2&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(31), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(31), &quot;GuideArrow2&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(33), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(33), &quot;GuideArrow2&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(36), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(36), &quot;GuideArrow2&quot;);
                UnitSetInfoText(UnitFromId(1384704812), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/B8621589&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(1443470665), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/3D5634BB&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(1681205063), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/C75A4826&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(1716263269), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/FB5652F9&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(1383694219), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/53064278&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(986121938), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/84E5C4B5&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(949741527), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/E2ABD9FB&quot;), StringToText(&quot;&quot;));
                UnitSetInfoText(UnitFromId(1042682701), StringToText(&quot;&quot;), StringExternal(&quot;Param/Value/9534353F&quot;), StringToText(&quot;&quot;));
                TriggerEnable(gt_BonusObjective1Activate, false);
                TriggerEnable(gt_BonusObjective2Activate, false);
                TriggerEnable(gt_Mothership_UnderAttack, false);
                TriggerEnable(gt_Thrasher_Ping, false);
                TriggerEnable(gt_Thrasher_Ping2, false);
                TriggerEnable(gt_Charging_Finish2, false);
                TriggerEnable(gt_Charging_Finish3, false);
                TriggerEnable(gt_Charging_Finish4, false);
                TriggerEnable(gt_DestroyAttackMothershipPing, false);
                TriggerEnable(gt_DestroyBonusAttackWavePing2, false);
                TriggerEnable(gt_DestroyAttackMothershipPing3, false);
                TriggerEnable(gt_DestroyBonusAttackWavePing3, false);
                TriggerEnable(gt_DestroyBonusAttackWavePing4, false);
                TriggerEnable(gt_DestroyBonusAttackWavePing5, false);
                TriggerEnable(gt_DestroyAttackMothershipPing7, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Init09Coop_Init () {
                gt_Init09Coop = TriggerCreate(&quot;gt_Init09Coop_Func&quot;);
                TriggerAddEventMapInit(gt_Init09Coop);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Construct Missiles
            //--------------------------------------------------------------------------------------------------
            bool gt_ConstructMissiles_Func (bool testConds, bool runActions) {
                // Variable Declarations
                unit lv_missileUnit;
                // Variable Initialization
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((libCOMI_gf_PlayerInCinematicModeCampaign() == false))) {
                        return false;
                    }
                    if (!((libCOMI_gf_GameIsOver() == false))) {
                        return false;
                    }
                    if (!((UnitGetType(EventUnit()) == &quot;KaiserWormScourgeMissile&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_missileUnit = EventUnit();
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;KaiserWormScourgeMissile&quot;, UnitGetPosition(lv_missileUnit), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 0.0, UnitGetFacing(lv_missileUnit));
                libHots_gf_StorePingForUnit(lv_missileUnit, 1, PingLastCreated());
                PingSetUnit(PingLastCreated(), lv_missileUnit);
                PingSetScale(PingLastCreated(), 0.075);
                while (!((UnitIsAlive(EventUnit()) == false))) {
                    Wait(0.0625, c_timeGame);
                }
                PingDestroy(libHots_gf_PingStoredForUnit(lv_missileUnit, 1));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ConstructMissiles_Init () {
                gt_ConstructMissiles = TriggerCreate(&quot;gt_ConstructMissiles_Func&quot;);
                TriggerAddEventUnitRegion(gt_ConstructMissiles, null, RegionPlayableMap(), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Gas Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_GasPing_Func (bool testConds, bool runActions) {
                // Variable Declarations
                unit lv_gasUnit;
                // Variable Initialization
                // Conditions
                if (testConds) {
                    if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
                        return false;
                    }
                    if (!((libCOMI_gf_PlayerInCinematicModeCampaign() == false))) {
                        return false;
                    }
                    if (!((libCOMI_gf_GameIsOver() == false))) {
                        return false;
                    }
                    if (!((UnitGetType(EventUnit()) == &quot;NaturalGas50&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                lv_gasUnit = EventUnit();
                libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), &quot;NaturalGas50&quot;, UnitGetPosition(lv_gasUnit), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 0.0, UnitGetFacing(lv_gasUnit));
                libHots_gf_StorePingForUnit(lv_gasUnit, 1, PingLastCreated());
                PingSetUnit(PingLastCreated(), lv_gasUnit);
                PingSetScale(PingLastCreated(), 0.06);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/2B0DB3B5&quot;));
                while (!((UnitIsAlive(EventUnit()) == false))) {
                    Wait(0.0625, c_timeGame);
                }
                PingDestroy(libHots_gf_PingStoredForUnit(lv_gasUnit, 1));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_GasPing_Init () {
                gt_GasPing = TriggerCreate(&quot;gt_GasPing_Func&quot;);
                TriggerAddEventUnitRegion(gt_GasPing, null, RegionPlayableMap(), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Reveal Bonus Objective Q
            //--------------------------------------------------------------------------------------------------
            bool gt_RevealBonusObjectiveQ_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(1778431925), true);
                ObjectiveCreateForPlayers(StringExternal(&quot;Param/Value/872B52BB&quot;), StringToText(&quot;&quot;), c_objectiveStateActive, false, PlayerGroupAll());
                gv_turret1_Bonus = ObjectiveLastCreated();
                ObjectiveSetDescription(gv_turret1_Bonus, StringExternal(&quot;Param/Value/EB7EDC3C&quot;));
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingTriangle&quot;, PointFromId(872412932), ColorWithAlpha(100.00, 100.00, 0.00, 0.00), 99999.0);
                gv_turret_Ping1 = PingLastCreated();
                PingSetTooltip(gv_turret_Ping1, StringExternal(&quot;Param/Value/5AD6C908&quot;));
                PingSetScale(gv_turret_Ping1, 0.6);
                PingSetUnit(gv_turret_Ping1, UnitFromId(2069330141));
                TriggerEnable(gt_BonusObjective1Activate, true);
                libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), true, 1);
                libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), true, 2);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_RevealBonusObjectiveQ_Init () {
                gt_RevealBonusObjectiveQ = TriggerCreate(&quot;gt_RevealBonusObjectiveQ_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Objective 1 (Activate)
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusObjective1Activate_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (PlayerGroupHasPlayer(libCOMI_gf_GetAlliedCommandersPlayers(), UnitGetOwner(EventUnit())) == false){
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitKill(UnitFromId(1778431925));
                UnitSetOwner(UnitFromId(2069330141), gv_pLAYER_06_Bonus, true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(2069330141), false);
                TriggerExecute(gt_Bonus_Turret_1_Attacks, true, false);
                gf_CreateProgressBarForTurret(UnitFromId(2069330141), 60, 5.0);
                if ((UnitIsAlive(UnitFromId(2069330141)) == true)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(2069330141), true);
                    ObjectiveSetState(gv_turret1_Bonus, c_objectiveStateCompleted);
                    PingDestroy(gv_turret_Ping1);
                    libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), false, 1);
                    libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), false, 2);
                    TriggerExecute(gt_Turret1Attack, true, false);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(2069330141)) == false)) {
                        ObjectiveSetState(gv_turret1_Bonus, c_objectiveStateFailed);
                        PingDestroy(gv_turret_Ping1);
                        libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), false, 1);
                        libNtve_gf_ShareVisionofUnit(UnitFromId(2069330141), false, 2);
                    }
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusObjective1Activate_Init () {
                gt_BonusObjective1Activate = TriggerCreate(&quot;gt_BonusObjective1Activate_Func&quot;);
                TriggerAddEventUnitRegion(gt_BonusObjective1Activate, null, RegionFromId(43), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus_Turret_1_Attacks
            //--------------------------------------------------------------------------------------------------
            bool gt_Bonus_Turret_1_Attacks_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(7.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                Wait(2.8, c_timeGame);
                UnitKill(UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1455093485));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                Wait(25.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1443700890));
                Wait(2.8, c_timeGame);
                UnitKill(UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1443700890));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1443700890));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1443700890));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1443700890));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(872412932)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Bonus_Turret_1_Attacks_Init () {
                gt_Bonus_Turret_1_Attacks = TriggerCreate(&quot;gt_Bonus_Turret_1_Attacks_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Turret (1) - Attack
            //--------------------------------------------------------------------------------------------------
            bool gt_Turret1Attack_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                while (true) {
                    Wait(2.0, c_timeGame);
                    UnitIssueOrder(UnitFromId(2069330141), OrderTargetingUnit(AbilityCommand(&quot;attack&quot;, 0), UnitFromId(1159399039)), c_orderQueueReplace);
                    Wait(6.0, c_timeGame);
                    UnitIssueOrder(UnitFromId(2069330141), OrderTargetingUnit(AbilityCommand(&quot;attack&quot;, 0), UnitFromId(1354105266)), c_orderQueueReplace);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Turret1Attack_Init () {
                gt_Turret1Attack = TriggerCreate(&quot;gt_Turret1Attack_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Reveal Bonus Objective Q 2
            //--------------------------------------------------------------------------------------------------
            bool gt_RevealBonusObjectiveQ2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(5.0, c_timeGame);
                libNtve_gf_ShowHideUnit(UnitFromId(24340134), true);
                ObjectiveCreateForPlayers(StringExternal(&quot;Param/Value/F3DB163C&quot;), StringToText(&quot;&quot;), c_objectiveStateActive, false, PlayerGroupAll());
                gv_turret2_Bonus = ObjectiveLastCreated();
                ObjectiveSetDescription(gv_turret2_Bonus, StringExternal(&quot;Param/Value/696862C5&quot;));
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingTriangle&quot;, PointFromId(1040680097), ColorWithAlpha(100.00, 100.00, 0.00, 0.00), 99999.0);
                gv_turret_Ping2 = PingLastCreated();
                PingSetTooltip(gv_turret_Ping2, StringExternal(&quot;Param/Value/8FBE4C83&quot;));
                PingSetScale(gv_turret_Ping2, 0.6);
                PingSetUnit(gv_turret_Ping2, UnitFromId(1718504127));
                TriggerEnable(gt_BonusObjective2Activate, true);
                libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), true, 1);
                libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), true, 2);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_RevealBonusObjectiveQ2_Init () {
                gt_RevealBonusObjectiveQ2 = TriggerCreate(&quot;gt_RevealBonusObjectiveQ2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Objective 2 (Activate)
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusObjective2Activate_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (PlayerGroupHasPlayer(libCOMI_gf_GetAlliedCommandersPlayers(), UnitGetOwner(EventUnit())) == false){
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitKill(UnitFromId(24340134));
                UnitSetOwner(UnitFromId(1718504127), gv_pLAYER_06_Bonus, true);
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(1718504127), false);
                TriggerExecute(gt_Bonus_Turret_2_Attacks, true, false);
                gf_CreateProgressBarForTurret(UnitFromId(1718504127), 60, 5.0);
                if ((UnitIsAlive(UnitFromId(1718504127)) == true)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1718504127), true);
                    ObjectiveSetState(gv_turret2_Bonus, c_objectiveStateCompleted);
                    PingDestroy(gv_turret_Ping2);
                    libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), false, 1);
                    libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), false, 2);
                    TriggerExecute(gt_Turret2Attack, true, false);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(1718504127)) == false)) {
                        ObjectiveSetState(gv_turret2_Bonus, c_objectiveStateFailed);
                        PingDestroy(gv_turret_Ping2);
                        libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), false, 1);
                        libNtve_gf_ShareVisionofUnit(UnitFromId(1718504127), false, 2);
                    }
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusObjective2Activate_Init () {
                gt_BonusObjective2Activate = TriggerCreate(&quot;gt_BonusObjective2Activate_Func&quot;);
                TriggerAddEventUnitRegion(gt_BonusObjective2Activate, null, RegionFromId(42), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus_Turret_2_Attacks
            //--------------------------------------------------------------------------------------------------
            bool gt_Bonus_Turret_2_Attacks_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(7.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(98350929));
                Wait(2.8, c_timeGame);
                UnitKill(UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(98350929));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(98350929));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(98350929));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(98350929));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                Wait(25.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                Wait(2.8, c_timeGame);
                UnitKill(UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDominatorVoid&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(652263562));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1040680097)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Bonus_Turret_2_Attacks_Init () {
                gt_Bonus_Turret_2_Attacks = TriggerCreate(&quot;gt_Bonus_Turret_2_Attacks_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Turret (2) - Attack
            //--------------------------------------------------------------------------------------------------
            bool gt_Turret2Attack_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                while (true) {
                    Wait(2.0, c_timeGame);
                    UnitIssueOrder(UnitFromId(1718504127), OrderTargetingUnit(AbilityCommand(&quot;attack&quot;, 0), UnitFromId(1392160762)), c_orderQueueReplace);
                    Wait(7.0, c_timeGame);
                    UnitIssueOrder(UnitFromId(1718504127), OrderTargetingUnit(AbilityCommand(&quot;attack&quot;, 0), UnitFromId(662762608)), c_orderQueueReplace);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Turret2Attack_Init () {
                gt_Turret2Attack = TriggerCreate(&quot;gt_Turret2Attack_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Shard_Spawn1
            //--------------------------------------------------------------------------------------------------
            bool gt_Shard_Spawn1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardA&quot;, 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(38)));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Shard_Spawn1_Init () {
                gt_Shard_Spawn1 = TriggerCreate(&quot;gt_Shard_Spawn1_Func&quot;);
                TriggerAddEventUnitRegion(gt_Shard_Spawn1, null, RegionFromId(38), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Shard_Spawn5
            //--------------------------------------------------------------------------------------------------
            bool gt_Shard_Spawn5_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardA&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1229956120));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Shard_Spawn5_Init () {
                gt_Shard_Spawn5 = TriggerCreate(&quot;gt_Shard_Spawn5_Func&quot;);
                TriggerAddEventUnitRegion(gt_Shard_Spawn5, null, RegionFromId(3), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Shard_Spawn2
            //--------------------------------------------------------------------------------------------------
            bool gt_Shard_Spawn2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardA&quot;, 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(40)));
                UnitGroupLoopBegin(UnitGroup(null, 5, RegionFromId(41), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                }
                UnitGroupLoopEnd();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Shard_Spawn2_Init () {
                gt_Shard_Spawn2 = TriggerCreate(&quot;gt_Shard_Spawn2_Func&quot;);
                TriggerAddEventUnitRegion(gt_Shard_Spawn2, null, RegionFromId(40), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Shard_Spawn3
            //--------------------------------------------------------------------------------------------------
            bool gt_Shard_Spawn3_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardA&quot;, 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(39)));
                Wait(1.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardB&quot;, 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(39)));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Shard_Spawn3_Init () {
                gt_Shard_Spawn3 = TriggerCreate(&quot;gt_Shard_Spawn3_Func&quot;);
                TriggerAddEventUnitRegion(gt_Shard_Spawn3, null, RegionFromId(39), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Shard_Spawn4
            //--------------------------------------------------------------------------------------------------
            bool gt_Shard_Spawn4_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;AmonShardB&quot;, 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(44)));
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Shard_Spawn4_Init () {
                gt_Shard_Spawn4 = TriggerCreate(&quot;gt_Shard_Spawn4_Func&quot;);
                TriggerAddEventUnitRegion(gt_Shard_Spawn4, null, RegionFromId(14), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Defeat / Objective 2
            //--------------------------------------------------------------------------------------------------
            bool gt_DefeatObjective2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;TalDarimMothership&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_Fissure_Event, false);
                ObjectiveSetState(gv_objective_Mothership, c_objectiveStateFailed);
                ObjectiveSetState(gv_objective_CorruptionShards, c_objectiveStateFailed);
                Wait(4.0, c_timeGame);
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Defeat);
                TransmissionClearAll();
                TriggerQueuePause(true);
                TriggerQueueClear(c_triggerQueueRemove);
                libCOMI_gf_CinematicModeCampaign(true, 1.5, true);
                libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(1), libCOMI_ge_CampaignMessageType_MissionFailed, StringExternal(&quot;Param/Value/506C6208&quot;), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
                libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(2), libCOMI_ge_CampaignMessageType_MissionFailed, StringExternal(&quot;Param/Value/883E84D2&quot;), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
                UnitGroupLoopBegin(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    libNtve_gf_MakeUnitInvulnerable(UnitGroupLoopCurrent(), true);
                }
                UnitGroupLoopEnd();
                UnitGroupLoopBegin(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    libNtve_gf_PauseUnit(UnitGroupLoopCurrent(), true);
                }
                UnitGroupLoopEnd();
                UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
                CameraApplyInfo(1, CameraInfoFromId(1243764898), 3.0, -1, 10.0, true);
                CameraApplyInfo(2, CameraInfoFromId(1243764898), 3.0, -1, 10.0, true);
                UnitKill(gv_projector);
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222222222222&quot;, -1), StringExternal(&quot;Param/Value/4DF61E25&quot;), StringExternal(&quot;Param/Value/75E013F4&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                Wait(2.0, c_timeReal);
                UISetCursorVisible(PlayerGroupAll(), true);
                libCOMI_gf_EndCampaignMission(c_gameOverDefeat);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DefeatObjective2_Init () {
                gt_DefeatObjective2 = TriggerCreate(&quot;gt_DefeatObjective2_Func&quot;);
                TriggerAddEventUnitDied(gt_DefeatObjective2, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Music
            //--------------------------------------------------------------------------------------------------
            bool gt_Music_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libHots_gf_PlaySoundLinkasMusic(SoundLink(&quot;LOTV_Music_P09Full&quot;, -1), false, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Music_Init () {
                gt_Music = TriggerCreate(&quot;gt_Music_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Music, 60.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Start Game Q
            //--------------------------------------------------------------------------------------------------
            bool gt_StartGameQ_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libHots_gf_PlaySoundLinkasMusic(SoundLink(&quot;LOTV_Music_P09Full&quot;, -1), false, false);
                TriggerEnable(gt_MothershipCharge, false);
                TriggerEnable(gt_Fissure_Event, false);
                TriggerEnable(gt_DestroyAttackWavePing, false);
                TriggerEnable(gt_DestroyAttackWavePing2, false);
                TriggerEnable(gt_DestroyAttackWavePing3, false);
                TriggerEnable(gt_DestroyAttackWavePing4, false);
                TriggerEnable(gt_DestroyBonusAttackWavePing, false);
                TriggerEnable(gt_DestroyAttackMothershipPing2, false);
                TriggerExecute(gt_Upgrades, true, false);
                Wait(5.0, c_timeGame);
                TextExpressionSetToken(&quot;Param/Expression/1FB354BB&quot;, &quot;A&quot;, IntToText(gv_voidCorruptionObjective));
                ObjectiveCreate((StringExternal(&quot;Param/Value/5E2A9915&quot;) + (TextExpressionAssemble(&quot;Param/Expression/1FB354BB&quot;) + StringExternal(&quot;Param/Value/E8099BA7&quot;))), StringToText(&quot;&quot;), c_objectiveStateActive, true);
                gv_objective_CorruptionShards = ObjectiveLastCreated();
                ObjectiveSetDescription(gv_objective_CorruptionShards, StringExternal(&quot;Param/Value/7AA5B199&quot;));
                Wait(2.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro01&quot;, -1), StringExternal(&quot;Param/Value/85BDDA54&quot;), StringExternal(&quot;Param/Value/4769BBE4&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(2.0, c_timeGame);
                ObjectiveCreateForPlayers(StringExternal(&quot;Param/Value/C94EDE5D&quot;), StringToText(&quot;&quot;), c_objectiveStateActive, true, PlayerGroupAll());
                gv_objective_Mothership = ObjectiveLastCreated();
                ObjectiveSetDescription(gv_objective_Mothership, StringExternal(&quot;Param/Value/3B33A170&quot;));
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Obelisk&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(135147310));
                gv_projector = UnitLastCreated();
                libNtve_gf_ShareVisionofUnit(gv_projector, true, 1);
                libNtve_gf_ShareVisionofUnit(gv_projector, true, 2);
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound2&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 300.0, 0.0);
                libNtve_gf_SendActorMessageToUnit(gv_projector, &quot;ModelSwap Obelisk2&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(3.6, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound22&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 300.0, 0.0);
                libNtve_gf_SendActorMessageToUnit(gv_projector, &quot;ModelSwap Obelisk&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(3.0, c_timeGame);
                libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault);
                TriggerExecute(gt_EnemyAttackWaveQ1, true, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02&quot;, -1), StringExternal(&quot;Param/Value/D7AED938&quot;), StringExternal(&quot;Param/Value/E871FB8A&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(20.0, c_timeGame);
                VisRevealArea(1, RegionFromId(26), 32767.0, false);
                VisRevealArea(1, RegionFromId(25), 32767.0, false);
                VisRevealArea(2, RegionFromId(26), 32767.0, false);
                VisRevealArea(2, RegionFromId(25), 32767.0, false);
                PingCreate(PlayerGroupAll(), &quot;PingCircle&quot;, PointFromId(125492154), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                PingSetScale(PingLastCreated(), 0.3);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/5F052674&quot;));
                PingCreate(PlayerGroupAll(), &quot;PingCircle&quot;, PointFromId(2108925997), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                PingSetScale(PingLastCreated(), 0.3);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/75F2A3F2&quot;));
                PingCreate(PlayerGroupAll(), &quot;PingCircle&quot;, PointFromId(2097863814), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                PingSetScale(PingLastCreated(), 0.3);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/D1447341&quot;));
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(125492154), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(2108925997), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(2097863814), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro023&quot;, -1), StringExternal(&quot;Param/Value/59493FF5&quot;), StringExternal(&quot;Param/Value/DBE1E04C&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                TriggerEnable(gt_Fissure_Event, true);
                Wait(70.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022&quot;, -1), StringExternal(&quot;Param/Value/5B6741CC&quot;), StringExternal(&quot;Param/Value/7131F653&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;DFAMothershipV4&quot;, 0, 0, PointFromId(846086050));
                gv_mothership_Shadow = UnitLastCreated();
                UnitIssueOrder(gv_mothership_Shadow, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(135147310)), c_orderQueueReplace);
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_shadow01 = PingLastCreated();
                PingSetScale(gv_shadow01, 1.0);
                PingSetTooltip(gv_shadow01, StringExternal(&quot;Param/Value/410516BD&quot;));
                PingSetUnit(gv_shadow01, gv_mothership_Shadow);
                Wait(18.0, c_timeGame);
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound222&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 300.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work Start&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work&quot;, c_animFlagPlayForever, c_animTimeDefault);
                libCOMI_gf_DisplayProgressBar(StringExternal(&quot;Param/Value/999C0559&quot;), 0, 100);
                libCOMI_gf_SetProgressBarLabel(((IntToText(gv_charging_Integer) + (StringExternal(&quot;Param/Value/3C33502E&quot;)))));
                libCOMI_gf_SetProgressBarProgress(gv_charging_Integer);
                libCOMI_gf_SetProgressBarColor(Color(0.00, 100.00, 0.00));
                TriggerEnable(gt_MothershipCharge, true);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1534767828), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard01 = PingLastCreated();
                PingSetTooltip(gv_shard01, StringExternal(&quot;Param/Value/942DEA4D&quot;));
                PingSetScale(gv_shard01, 0.6);
                VisRevealArea(1, RegionFromId(5), 0.1, false);
                VisRevealArea(2, RegionFromId(5), 0.1, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_StartGameQ_Init () {
                gt_StartGameQ = TriggerCreate(&quot;gt_StartGameQ_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Highlight Start
            //--------------------------------------------------------------------------------------------------
            bool gt_HighlightStart_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;Obelisk&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloStart&quot;);
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloSetColor 0,210,0&quot;);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_HighlightStart_Init () {
                gt_HighlightStart = TriggerCreate(&quot;gt_HighlightStart_Func&quot;);
                TriggerAddEventUnitHighlight(gt_HighlightStart, null, c_playerAny, true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Highlight Stop
            //--------------------------------------------------------------------------------------------------
            bool gt_HighlightStop_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;Obelisk&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloStop&quot;);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_HighlightStop_Init () {
                gt_HighlightStop = TriggerCreate(&quot;gt_HighlightStop_Func&quot;);
                TriggerAddEventUnitHighlight(gt_HighlightStop, null, c_playerAny, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Highlight Start - Shard
            //--------------------------------------------------------------------------------------------------
            bool gt_HighlightStartShard_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;VoidCorruption&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloStart&quot;);
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloSetColor 255,0,0&quot;);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_HighlightStartShard_Init () {
                gt_HighlightStartShard = TriggerCreate(&quot;gt_HighlightStartShard_Func&quot;);
                TriggerAddEventUnitHighlight(gt_HighlightStartShard, null, c_playerAny, true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Highlight Stop - Shard
            //--------------------------------------------------------------------------------------------------
            bool gt_HighlightStopShard_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;VoidCorruption&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                libNtve_gf_SendActorMessageToUnit(EventUnit(), &quot;HaloStop&quot;);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_HighlightStopShard_Init () {
                gt_HighlightStopShard = TriggerCreate(&quot;gt_HighlightStopShard_Func&quot;);
                TriggerAddEventUnitHighlight(gt_HighlightStopShard, null, c_playerAny, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Void Chasm - Start Q
            //--------------------------------------------------------------------------------------------------
            bool gt_VoidChasmStartQ_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 240.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingBonus&quot;, PointFromId(191370631), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 4.0);
                gv_chasm_Ping = PingLastCreated();
                PingSetTooltip(gv_chasm_Ping, StringExternal(&quot;Param/Value/ECB575A5&quot;));
                PingSetScale(gv_chasm_Ping, 1.0);
                libCOMI_gf_ShareVisionofUnitCoop(UnitFromId(388649439), true, 1);
                libCOMI_gf_ShareVisionofUnitCoop(UnitFromId(388649439), true, 2);
                Wait(4.0, c_timeGame);
                UnitGroupLoopBegin(UnitGroup(&quot;VoidChasmDormant&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitIssueOrder(UnitGroupLoopCurrent(), Order(AbilityCommand(&quot;VoidChasmRebirth&quot;, 0)), c_orderQueueReplace);
                }
                UnitGroupLoopEnd();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_VoidChasmStartQ_Init () {
                gt_VoidChasmStartQ = TriggerCreate(&quot;gt_VoidChasmStartQ_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Void Chasm - Rebirth Q
            //--------------------------------------------------------------------------------------------------
            bool gt_VoidChasmRebirthQ_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_ENEMY))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(240.0, c_timeGame);
                TriggerExecute(gt_VoidChasmStartQ, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_VoidChasmRebirthQ_Init () {
                gt_VoidChasmRebirthQ = TriggerCreate(&quot;gt_VoidChasmRebirthQ_Func&quot;);
                TriggerAddEventUnitAbility(gt_VoidChasmRebirthQ, null, AbilityCommand(&quot;DormantVoidChasm&quot;, 0), c_unitAbilStageAll, false);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Void Chasm - Summon Entities
            //--------------------------------------------------------------------------------------------------
            bool gt_VoidChasmSummonEntities_Func (bool testConds, bool runActions) {
                int auto4A8D7F18_val;
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerQueueEnter();
                gv_spawn_Shadows3 = RandomInt(1, 3);
                auto4A8D7F18_val = gv_spawn_Shadows3;
                if (auto4A8D7F18_val == 1) {
                    UnitGroupLoopBegin(UnitGroup(&quot;VoidChasm&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                    }
                    UnitGroupLoopEnd();
                }
                else if (auto4A8D7F18_val == 2) {
                    UnitGroupLoopBegin(UnitGroup(&quot;VoidChasm&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidHydralisk&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidHydralisk&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidHydralisk&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidHydralisk&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                    }
                    UnitGroupLoopEnd();
                }
                else if (auto4A8D7F18_val == 3) {
                    UnitGroupLoopBegin(UnitGroup(&quot;VoidChasm&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidBanshee&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidGhost&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                        Wait(1.0, c_timeGame);
                        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;UmbraSpireSpawnShadowOfTheVoidMarine&quot;, 0), RegionRandomPoint(RegionFromId(33))), c_orderQueueReplace);
                    }
                    UnitGroupLoopEnd();
                }
                else {
                }
                TriggerQueueExit();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_VoidChasmSummonEntities_Init () {
                gt_VoidChasmSummonEntities = TriggerCreate(&quot;gt_VoidChasmSummonEntities_Func&quot;);
                TriggerAddEventTimePeriodic(gt_VoidChasmSummonEntities, 27.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Void Chasm - Entities Attack
            //--------------------------------------------------------------------------------------------------
            bool gt_VoidChasmEntitiesAttack_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if (testConds) {
                    if (libCOMI_gv_gameHasBegun == false) {
                        return false;
                    }
                }
                UnitGroupLoopBegin(UnitGroup(null, 5, RegionFromId(33), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1690196328)), c_orderQueueReplace);
                }
                UnitGroupLoopEnd();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_VoidChasmEntitiesAttack_Init () {
                gt_VoidChasmEntitiesAttack = TriggerCreate(&quot;gt_VoidChasmEntitiesAttack_Func&quot;);
                TriggerAddEventTimePeriodic(gt_VoidChasmEntitiesAttack, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Fissure_Event
            //--------------------------------------------------------------------------------------------------
            bool gt_Fissure_Event_Func (bool testConds, bool runActions) {
                int autoCB9371B4_val;
                // Actions
                if (!runActions) {
                    return true;
                }
                if (testConds) {
                    if (libCOMI_gv_gameHasBegun == false) {
                        return false;
                    }
                }
                gv_fissures = RandomInt(1, 3);
                autoCB9371B4_val = gv_fissures;
                if (autoCB9371B4_val == 1) {
                    CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    WaterSetState(&quot;Vespene_Lava|Alternate Setting&quot;, 4.0, c_wtcLinear);
                    SoundPlayForPlayer(SoundLink(&quot;Event_EarthquakeRumble&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(125492154), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                    gv_fissure_Ping = PingLastCreated();
                    PingSetTooltip(gv_fissure_Ping, StringExternal(&quot;Param/Value/6E4E15FC&quot;));
                    PingSetScale(gv_fissure_Ping, 0.7);
                    Wait(3.0, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(125492154), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1127991792), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(37))), c_orderQueueReplace);
                    Wait(2.0, c_timeGame);
                    WaterSetState(&quot;Vespene_Lava|[Default]&quot;, 4.0, c_wtcLinear);
                }
                else if (autoCB9371B4_val == 2) {
                    CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    WaterSetState(&quot;Vespene_Lava|Alternate Setting&quot;, 4.0, c_wtcLinear);
                    SoundPlayForPlayer(SoundLink(&quot;Event_EarthquakeRumble&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(2108925997), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                    gv_fissure_Ping = PingLastCreated();
                    PingSetTooltip(gv_fissure_Ping, StringExternal(&quot;Param/Value/69676B59&quot;));
                    PingSetScale(gv_fissure_Ping, 0.7);
                    Wait(3.0, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2108925997), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(174558765), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(21))), c_orderQueueReplace);
                    Wait(2.0, c_timeGame);
                    WaterSetState(&quot;Vespene_Lava|[Default]&quot;, 4.0, c_wtcLinear);
                }
                else if (autoCB9371B4_val == 3) {
                    CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                    WaterSetState(&quot;Vespene_Lava|Alternate Setting&quot;, 4.0, c_wtcLinear);
                    SoundPlayForPlayer(SoundLink(&quot;Event_EarthquakeRumble&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    SoundPlayForPlayer(SoundLink(&quot;UI_PingAdvanced_Danger&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingWarning&quot;, PointFromId(2097863814), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 4.0);
                    gv_fissure_Ping = PingLastCreated();
                    PingSetTooltip(gv_fissure_Ping, StringExternal(&quot;Param/Value/378CC93B&quot;));
                    PingSetScale(gv_fissure_Ping, 0.7);
                    Wait(3.0, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(0.5, c_timeGame);
                    SoundPlayAtPointForPlayer(SoundLink(&quot;Gas_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(2097863814), 0.0, 200.0, 0.0);
                    UnitIssueOrder(UnitFromId(1178277283), OrderTargetingPoint(AbilityCommand(&quot;BuildAutoTurret2&quot;, 0), RegionRandomPoint(RegionFromId(25))), c_orderQueueReplace);
                    Wait(2.0, c_timeGame);
                    WaterSetState(&quot;Vespene_Lava|[Default]&quot;, 4.0, c_wtcLinear);
                }
                else {
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Fissure_Event_Init () {
                gt_Fissure_Event = TriggerCreate(&quot;gt_Fissure_Event_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Fissure_Event, 90.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Gas_Players
            //--------------------------------------------------------------------------------------------------
            bool gt_Gas_Players_Func (bool testConds, bool runActions) {
                // Automatic Variable Declarations
                playergroup auto2FBCB564_g;
                int auto2FBCB564_var;
                // Conditions
                if (testConds) {
                    if (!((UnitGetType(EventUnit()) == &quot;NaturalGas50&quot;))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                auto2FBCB564_g = libCOMI_gf_GetAlliedCommandersPlayers();
                auto2FBCB564_var = -1;
                while (true) {
                    auto2FBCB564_var = PlayerGroupNextPlayer(auto2FBCB564_g, auto2FBCB564_var);
                    if (auto2FBCB564_var &lt; 0) { break; }
                    PlayerModifyPropertyInt(auto2FBCB564_var, c_playerPropVespene, c_playerPropOperAdd, 50);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Gas_Players_Init () {
                gt_Gas_Players = TriggerCreate(&quot;gt_Gas_Players_Func&quot;);
                TriggerAddEventUnitDied(gt_Gas_Players, null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_UnderAttack
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_UnderAttack_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                libCOMI_gf_SendMissionTransmission(&quot;EscortUnderAttack&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(60.0, c_timeGame);
                TriggerEnable(TriggerGetCurrent(), true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_UnderAttack_Init () {
                gt_Mothership_UnderAttack = TriggerCreate(&quot;gt_Mothership_UnderAttack_Func&quot;);
                TriggerAddEventUnitAttacked2(gt_Mothership_UnderAttack, UnitRefFromVariable(&quot;gv_mothership&quot;), null);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_voidCorruptionObjective += 1;
                TextExpressionSetToken(&quot;Param/Expression/57B0EB47&quot;, &quot;A&quot;, IntToText(gv_voidCorruptionObjective));
                ObjectiveSetName(gv_objective_CorruptionShards, (StringExternal(&quot;Param/Value/7D53DC77&quot;) + (TextExpressionAssemble(&quot;Param/Expression/57B0EB47&quot;) + StringExternal(&quot;Param/Value/2B47FAC5&quot;))));
                PingDestroy(gv_shard01);
                UnitKill(gv_beam1);
                UnitKill(gv_beam2);
                UnitKill(gv_beam3);
                UnitSetHeight(gv_mothership, 8.0, 4.0);
                TriggerEnable(gt_Mothership_UnderAttack, false);
                Wait(1.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1534767828));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership22&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(2.6, c_timeGame);
                UnitRemove(gv_mothership);
                PingDestroy(gv_mothership_Ping);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(false);
                UnitGroupLoopBegin(UnitGroup(&quot;KaiserWormScourgeMissile&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitRemove(UnitGroupLoopCurrent());
                }
                UnitGroupLoopEnd();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;DFAMothershipV4&quot;, 0, 0, PointFromId(135147310));
                gv_mothership_Shadow = UnitLastCreated();
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_shadow01 = PingLastCreated();
                PingSetScale(gv_shadow01, 1.0);
                PingSetTooltip(gv_shadow01, StringExternal(&quot;Param/Value/68994D53&quot;));
                PingSetUnit(gv_shadow01, gv_mothership_Shadow);
                VisRevealArea(1, RegionFromId(6), 0.1, false);
                VisRevealArea(2, RegionFromId(6), 0.1, false);
                VisRevealArea(1, RegionFromId(7), 0.1, false);
                VisRevealArea(2, RegionFromId(7), 0.1, false);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(143381561), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard02 = PingLastCreated();
                PingSetTooltip(gv_shard02, StringExternal(&quot;Param/Value/E844B32A&quot;));
                PingSetScale(gv_shard02, 0.6);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1250167575), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard03 = PingLastCreated();
                PingSetTooltip(gv_shard03, StringExternal(&quot;Param/Value/60E80693&quot;));
                PingSetScale(gv_shard03, 0.6);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022222&quot;, -1), StringExternal(&quot;Param/Value/78B84A01&quot;), StringExternal(&quot;Param/Value/0394556A&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound222&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work Start&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work&quot;, c_animFlagPlayForever, c_animTimeDefault);
                gv_charging_Integer -= 100;
                libCOMI_gf_ShowHideProgressBar(true);
                libCOMI_gf_DisplayProgressBar(StringExternal(&quot;Param/Value/48166C6A&quot;), 0, 100);
                libCOMI_gf_SetProgressBarLabel(((IntToText(gv_charging_Integer) + (StringExternal(&quot;Param/Value/5DEFBF9B&quot;)))));
                libCOMI_gf_SetProgressBarProgress(gv_charging_Integer);
                libCOMI_gf_SetProgressBarColor(Color(0.00, 100.00, 0.00));
                Wait(2.0, c_timeGame);
                TriggerEnable(gt_Charging_Finish2, true);
                TriggerEnable(gt_MothershipCharge, true);
                TriggerExecute(gt_VoidChasmStartQ, true, false);
                Wait(2.0, c_timeGame);
                TriggerExecute(gt_EnemyAttackWaveQ2, true, false);
                Wait(10.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave2, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing_Init () {
                gt_ShardPing = TriggerCreate(&quot;gt_ShardPing_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing, UnitRefFromUnit(UnitFromId(1384704812)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 2
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_shard02);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(143381561));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1250167575)), c_orderQueueReplace);
                Wait(2.0, c_timeGame);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(283316359)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1719277257)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1081510949)), c_orderQueueReplace);
                Wait(5.0, c_timeGame);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(2040184546)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(733178069)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(363250477)), c_orderQueueReplace);
                Wait(9.0, c_timeGame);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1250167575)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1250167575)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1250167575)), c_orderQueueReplace);
                Wait(6.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing2_Init () {
                gt_ShardPing2 = TriggerCreate(&quot;gt_ShardPing2_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing2, UnitRefFromUnit(UnitFromId(1681205063)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 3
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_voidCorruptionObjective += 1;
                TextExpressionSetToken(&quot;Param/Expression/0A78B5B1&quot;, &quot;A&quot;, IntToText(gv_voidCorruptionObjective));
                ObjectiveSetName(gv_objective_CorruptionShards, (StringExternal(&quot;Param/Value/A4746A35&quot;) + (TextExpressionAssemble(&quot;Param/Expression/0A78B5B1&quot;) + StringExternal(&quot;Param/Value/033FF271&quot;))));
                UnitKill(gv_beam1);
                UnitKill(gv_beam2);
                UnitKill(gv_beam3);
                UnitSetHeight(gv_mothership, 8.0, 4.0);
                PingDestroy(gv_shard03);
                TriggerEnable(gt_Mothership_UnderAttack, false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1250167575));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership22&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(2.6, c_timeGame);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(false);
                UnitRemove(gv_mothership);
                PingDestroy(gv_mothership_Ping);
                UnitGroupLoopBegin(UnitGroup(&quot;KaiserWormScourgeMissile&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitRemove(UnitGroupLoopCurrent());
                }
                UnitGroupLoopEnd();
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022222222&quot;, -1), StringExternal(&quot;Param/Value/10F9968D&quot;), StringExternal(&quot;Param/Value/5B2080CA&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;DFAMothershipV4&quot;, 0, 0, PointFromId(135147310));
                gv_mothership_Shadow = UnitLastCreated();
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_shadow01 = PingLastCreated();
                PingSetScale(gv_shadow01, 1.0);
                PingSetTooltip(gv_shadow01, StringExternal(&quot;Param/Value/EE07392A&quot;));
                PingSetUnit(gv_shadow01, gv_mothership_Shadow);
                VisRevealArea(1, RegionFromId(16), 0.1, false);
                VisRevealArea(2, RegionFromId(16), 0.1, false);
                VisRevealArea(1, RegionFromId(17), 0.1, false);
                VisRevealArea(2, RegionFromId(17), 0.1, false);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1020117757), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard04 = PingLastCreated();
                PingSetTooltip(gv_shard04, StringExternal(&quot;Param/Value/F894E267&quot;));
                PingSetScale(gv_shard04, 0.6);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(532608825), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard05 = PingLastCreated();
                PingSetTooltip(gv_shard05, StringExternal(&quot;Param/Value/2B389916&quot;));
                PingSetScale(gv_shard05, 0.6);
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound222&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work Start&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work&quot;, c_animFlagPlayForever, c_animTimeDefault);
                gv_charging_Integer -= 100;
                libCOMI_gf_ShowHideProgressBar(true);
                libCOMI_gf_DisplayProgressBar(StringExternal(&quot;Param/Value/A82B7BAA&quot;), 0, 100);
                libCOMI_gf_SetProgressBarLabel(((IntToText(gv_charging_Integer) + (StringExternal(&quot;Param/Value/C897B709&quot;)))));
                libCOMI_gf_SetProgressBarProgress(gv_charging_Integer);
                libCOMI_gf_SetProgressBarColor(Color(0.00, 100.00, 0.00));
                Wait(8.0, c_timeGame);
                TriggerEnable(gt_Charging_Finish3, true);
                TriggerEnable(gt_MothershipCharge, true);
                Wait(5.0, c_timeGame);
                TriggerExecute(gt_EnemyAttackWaveQ3, true, false);
                Wait(20.0, c_timeGame);
                TriggerExecute(gt_EnemyAttackWaveQ4, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing3_Init () {
                gt_ShardPing3 = TriggerCreate(&quot;gt_ShardPing3_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing3, UnitRefFromUnit(UnitFromId(1443470665)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 4
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_shard04);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1020117757));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(527019706)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(2049274991)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(52250097)), c_orderQueueReplace);
                Wait(5.0, c_timeGame);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(532608825)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1628484820)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1520269738)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(149575515)), c_orderQueueReplace);
                Wait(9.0, c_timeGame);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(532608825)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(532608825)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(532608825)), c_orderQueueReplace);
                Wait(7.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                Wait(15.0, c_timeGame);
                TriggerExecute(gt_RevealBonusObjectiveQ, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing4_Init () {
                gt_ShardPing4 = TriggerCreate(&quot;gt_ShardPing4_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing4, UnitRefFromUnit(UnitFromId(1716263269)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 5
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_voidCorruptionObjective += 1;
                TextExpressionSetToken(&quot;Param/Expression/56068816&quot;, &quot;A&quot;, IntToText(gv_voidCorruptionObjective));
                ObjectiveSetName(gv_objective_CorruptionShards, (StringExternal(&quot;Param/Value/0CC74DBA&quot;) + (TextExpressionAssemble(&quot;Param/Expression/56068816&quot;) + StringExternal(&quot;Param/Value/952D6EF6&quot;))));
                UnitKill(gv_beam1);
                UnitKill(gv_beam2);
                UnitKill(gv_beam3);
                UnitSetHeight(gv_mothership, 8.0, 4.0);
                PingDestroy(gv_shard05);
                TriggerEnable(gt_Mothership_UnderAttack, false);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(532608825));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership22&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(2.6, c_timeGame);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(false);
                UnitRemove(gv_mothership);
                PingDestroy(gv_mothership_Ping);
                UnitGroupLoopBegin(UnitGroup(&quot;KaiserWormScourgeMissile&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitRemove(UnitGroupLoopCurrent());
                }
                UnitGroupLoopEnd();
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222222&quot;, -1), StringExternal(&quot;Param/Value/8E8AAE98&quot;), StringExternal(&quot;Param/Value/E02274D7&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;DFAMothershipV4&quot;, 0, 0, PointFromId(135147310));
                gv_mothership_Shadow = UnitLastCreated();
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_shadow01 = PingLastCreated();
                PingSetScale(gv_shadow01, 1.0);
                PingSetTooltip(gv_shadow01, StringExternal(&quot;Param/Value/5692BA4A&quot;));
                PingSetUnit(gv_shadow01, gv_mothership_Shadow);
                VisRevealArea(1, RegionFromId(28), 0.1, false);
                VisRevealArea(2, RegionFromId(28), 0.1, false);
                VisRevealArea(1, RegionFromId(29), 0.1, false);
                VisRevealArea(2, RegionFromId(29), 0.1, false);
                VisRevealArea(1, RegionFromId(30), 0.1, false);
                VisRevealArea(2, RegionFromId(30), 0.1, false);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1786460183), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard06 = PingLastCreated();
                PingSetTooltip(gv_shard06, StringExternal(&quot;Param/Value/EF714189&quot;));
                PingSetScale(gv_shard06, 0.6);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1296701021), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard07 = PingLastCreated();
                PingSetTooltip(gv_shard07, StringExternal(&quot;Param/Value/91AAFF5D&quot;));
                PingSetScale(gv_shard07, 0.6);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(934486428), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 40.0);
                gv_shard10 = PingLastCreated();
                PingSetTooltip(gv_shard10, StringExternal(&quot;Param/Value/12C4A5FD&quot;));
                PingSetScale(gv_shard10, 0.6);
                SoundPlayAtPointForPlayer(SoundLink(&quot;VoidTendrilDeathGripSpawnBeamSound222&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work Start&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work&quot;, c_animFlagPlayForever, c_animTimeDefault);
                gv_charging_Integer -= 100;
                libCOMI_gf_ShowHideProgressBar(true);
                libCOMI_gf_DisplayProgressBar(StringExternal(&quot;Param/Value/53F1630F&quot;), 0, 100);
                libCOMI_gf_SetProgressBarLabel(((IntToText(gv_charging_Integer) + (StringExternal(&quot;Param/Value/C1BA2145&quot;)))));
                libCOMI_gf_SetProgressBarProgress(gv_charging_Integer);
                libCOMI_gf_SetProgressBarColor(Color(0.00, 100.00, 0.00));
                Wait(2.0, c_timeGame);
                TriggerEnable(gt_Charging_Finish4, true);
                TriggerEnable(gt_MothershipCharge, true);
                TriggerExecute(gt_EnemyAttackWaveQ6, true, false);
                TriggerExecute(gt_EnemyAttackWaveQ7, true, false);
                Wait(50.0, c_timeGame);
                TriggerExecute(gt_EnemyAttackWave7, true, false);
                Wait(25.0, c_timeGame);
                TriggerExecute(gt_RevealBonusObjectiveQ2, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing5_Init () {
                gt_ShardPing5 = TriggerCreate(&quot;gt_ShardPing5_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing5, UnitRefFromUnit(UnitFromId(1383694219)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 8
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing8_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_shard08);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1786460183));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing8_Init () {
                gt_ShardPing8 = TriggerCreate(&quot;gt_ShardPing8_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing8, UnitRefFromUnit(UnitFromId(986121938)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 9
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing9_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_shard09);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1296701021));
                Wait(2.0, c_timeGame);
                UnitRemove(UnitLastCreated());
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(657010268)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(960412539)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1532830529)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam4, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1871748685)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam5, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(934486428)), c_orderQueueReplace);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(934486428)), c_orderQueueReplace);
                Wait(13.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 5.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing9_Init () {
                gt_ShardPing9 = TriggerCreate(&quot;gt_ShardPing9_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing9, UnitRefFromUnit(UnitFromId(949741527)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: ShardPing 10
            //--------------------------------------------------------------------------------------------------
            bool gt_ShardPing10_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                UnitGroupLoopBegin(UnitGroup(&quot;KaiserWormScourgeMissile&quot;, 5, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitRemove(UnitGroupLoopCurrent());
                }
                UnitGroupLoopEnd();
                libCOMI_gf_ShowHideProgressBar(false);
                PingDestroy(gv_shard10);
                PingDestroy(gv_mothership_Ping);
                TriggerEnable(gt_Fissure_Event, false);
                gv_voidCorruptionObjective += 1;
                TextExpressionSetToken(&quot;Param/Expression/3B0BC128&quot;, &quot;A&quot;, IntToText(gv_voidCorruptionObjective));
                ObjectiveSetName(gv_objective_CorruptionShards, (StringExternal(&quot;Param/Value/9E50CD30&quot;) + (TextExpressionAssemble(&quot;Param/Expression/3B0BC128&quot;) + StringExternal(&quot;Param/Value/1729D2A3&quot;))));
                ObjectiveSetState(gv_objective_CorruptionShards, c_objectiveStateCompleted);
                ObjectiveSetState(gv_objective_Mothership, c_objectiveStateCompleted);
                ObjectiveSetState(gv_objective_Projector, c_objectiveStateCompleted);
                UnitKill(gv_beam1);
                UnitKill(gv_beam2);
                UnitKill(gv_beam3);
                UnitKill(gv_beam4);
                UnitKill(gv_beam5);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Artosilope&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(934486428));
                Wait(2.0, c_timeReal);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(false);
                UnitRemove(UnitLastCreated());
                libCOMI_gf_GameOver(libCOMI_ge_CampaignMissionGameResultType_Victory);
                Wait(2.0, c_timeReal);
                libCOMI_gf_RunMissionVictorySequence(gt_VictoryFanfareQ);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_ShardPing10_Init () {
                gt_ShardPing10 = TriggerCreate(&quot;gt_ShardPing10_Func&quot;);
                TriggerAddEventUnitDied(gt_ShardPing10, UnitRefFromUnit(UnitFromId(1042682701)));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Thrasher_Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_Thrasher_Ping_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_ping_Thrasher);
                PathSetVisible(gv_path2, c_pathLocationAll, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;VoidThrasherDeath&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                TriggerEnable(gt_Thrasher_Ping, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Thrasher_Ping_Init () {
                gt_Thrasher_Ping = TriggerCreate(&quot;gt_Thrasher_Ping_Func&quot;);
                TriggerAddEventUnitDied(gt_Thrasher_Ping, UnitRefFromVariable(&quot;gv_void_Thrasher&quot;));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Thrasher_Ping 2
            //--------------------------------------------------------------------------------------------------
            bool gt_Thrasher_Ping2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                PingDestroy(gv_ping_Thrasher2);
                TriggerEnable(gt_Thrasher_Ping2, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Thrasher_Ping2_Init () {
                gt_Thrasher_Ping2 = TriggerCreate(&quot;gt_Thrasher_Ping2_Func&quot;);
                TriggerAddEventUnitDied(gt_Thrasher_Ping2, UnitRefFromVariable(&quot;gv_void_Thrasher2&quot;));
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership Charge
            //--------------------------------------------------------------------------------------------------
            bool gt_MothershipCharge_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                gv_charging_Integer += 1;
                libCOMI_gf_SetProgressBarLabel(((IntToText(gv_charging_Integer) + (StringExternal(&quot;Param/Value/D97BA00F&quot;)))));
                libCOMI_gf_SetProgressBarProgress(gv_charging_Integer);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MothershipCharge_Init () {
                gt_MothershipCharge = TriggerCreate(&quot;gt_MothershipCharge_Func&quot;);
                TriggerAddEventTimePeriodic(gt_MothershipCharge, 1.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Charging_Finish 1
            //--------------------------------------------------------------------------------------------------
            bool gt_Charging_Finish1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_charging_Integer == 100))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_MothershipCharge, false);
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_SetProgressBarLabel(StringExternal(&quot;Param/Value/7168DC38&quot;));
                libCOMI_gf_SetProgressBarTitle(StringExternal(&quot;Param/Value/8BDBF506&quot;));
                libCOMI_gf_SetProgressBarColor(Color(100.00, 0.00, 0.00));
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro0222&quot;, -1), StringExternal(&quot;Param/Value/C5622D5C&quot;), StringExternal(&quot;Param/Value/111AE9E6&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(2.0, c_timeGame);
                libCOMI_gf_ShowHideProgressBar(false);
                UnitRemove(gv_mothership_Shadow);
                PingDestroy(gv_shadow01);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_mothership_Ping = PingLastCreated();
                PingSetScale(gv_mothership_Ping, 1.0);
                PingSetTooltip(gv_mothership_Ping, StringExternal(&quot;Param/Value/82A1D94C&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;TalDarimMothership&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(135147310));
                gv_mothership = UnitLastCreated();
                PingSetUnit(gv_mothership_Ping, gv_mothership);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership2&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Mothership_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                Wait(4.6, c_timeGame);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership&quot;);
                libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;CollectionBeam_ObjectFloatUp&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work End&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand&quot;, c_animFlagPlayForever, c_animTimeDefault);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                TriggerEnable(gt_Mothership_UnderAttack, true);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1468169360), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(3974855), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1180593278), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(43750232), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(31094028), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(133625873), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(133625873)), c_orderQueueReplace);
                PathCreateForUnit(PlayerGroupAll(), gv_mothership);
                gv_path1 = PathLastCreated();
                PathSetLineWidth(gv_path1, c_pathLocationWorld, 0.8);
                PathSetLineWidth(gv_path1, c_pathLocationMinimap, 12.0);
                PathSetDestinationUnit(gv_path1, UnitFromId(1384704812));
                PathSetColor(gv_path1, c_pathLocationAll, Color(0.00, 100.00, 0.00));
                PathSetVisible(gv_path1, c_pathLocationAll, true);
                libCOMI_gf_DisplaySingularBossBarVoidCampaign(&quot;Assets\\Textures\\btn-unit-protoss-alarak-taldarim-mothership.dds&quot;, StringExternal(&quot;Param/Value/12CDEB75&quot;), 1000);
                libCOMI_gf_SetSingularBossBarBossVoidCampaign(gv_mothership, true);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Charging_Finish1_Init () {
                gt_Charging_Finish1 = TriggerCreate(&quot;gt_Charging_Finish1_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Charging_Finish1, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Purify_Area1
            //--------------------------------------------------------------------------------------------------
            bool gt_Purify_Area1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                TriggerExecute(gt_Mothership_Attack1, true, false);
                UnitIssueOrder(gv_mothership, Order(AbilityCommand(&quot;stop&quot;, 0)), c_orderQueueReplace);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, false);
                TriggerExecute(gt_Mothership_AttackStart2, true, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022223&quot;, -1), StringExternal(&quot;Param/Value/581B0166&quot;), StringExternal(&quot;Param/Value/42462535&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                gf_CreateProgressBarForMothership(gv_mothership, 40, 9.0);
                libNtve_gf_MakeUnitInvulnerable(gv_mothership, true);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, true);
                UnitSetState(gv_mothership, c_unitStateSelectable, false);
                UnitSetHeight(gv_mothership, 40.0, 6.0);
                PathDestroyAll(PlayerGroupAll());
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(20), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(20), &quot;GuideArrow2&quot;);
                SoundPlayForPlayer(SoundLink(&quot;Alarm_SoA_Protoss&quot;, -1), c_maxPlayers, PlayerGroupAll(), 400.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1534767828), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 9.0);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/CC2AE058&quot;));
                PingSetScale(PingLastCreated(), 1.0);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222&quot;, -1), StringExternal(&quot;Param/Value/8C6A4B6A&quot;), StringExternal(&quot;Param/Value/3AD33EEF&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(5.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1052489296));
                gv_beam1 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(954499057));
                gv_beam2 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1438428437));
                gv_beam3 = UnitLastCreated();
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(20), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(20), &quot;GuideArrow2&quot;);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1534767828)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1534767828)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1534767828)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1534767828)), c_orderQueueReplace);
                Wait(6.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Purify_Area1_Init () {
                gt_Purify_Area1 = TriggerCreate(&quot;gt_Purify_Area1_Func&quot;);
                TriggerAddEventUnitRegion(gt_Purify_Area1, null, RegionFromId(19), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Purify_Area2
            //--------------------------------------------------------------------------------------------------
            bool gt_Purify_Area2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, Order(AbilityCommand(&quot;stop&quot;, 0)), c_orderQueueReplace);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, false);
                TriggerExecute(gt_Mothership_Attack2Def, true, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022223&quot;, -1), StringExternal(&quot;Param/Value/1E7AE824&quot;), StringExternal(&quot;Param/Value/7C1FB645&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                TriggerExecute(gt_Mothership_Attack3Def, true, false);
                gf_CreateProgressBarForMothership(gv_mothership, 40, 9.0);
                libNtve_gf_MakeUnitInvulnerable(gv_mothership, true);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, true);
                UnitSetState(gv_mothership, c_unitStateSelectable, false);
                UnitSetHeight(gv_mothership, 40.0, 6.0);
                PathDestroyAll(PlayerGroupAll());
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(14), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(14), &quot;GuideArrow2&quot;);
                SoundPlayForPlayer(SoundLink(&quot;Alarm_SoA_Protoss&quot;, -1), c_maxPlayers, PlayerGroupAll(), 300.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(143381561), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 6.0);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/8F96BD8D&quot;));
                PingSetScale(PingLastCreated(), 1.0);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222&quot;, -1), StringExternal(&quot;Param/Value/14CCCDE2&quot;), StringExternal(&quot;Param/Value/04AC1F97&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(5.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(283316359));
                gv_beam1 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1719277257));
                gv_beam2 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1081510949));
                gv_beam3 = UnitLastCreated();
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(14), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(14), &quot;GuideArrow2&quot;);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(143381561)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(143381561)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(143381561)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(143381561)), c_orderQueueReplace);
                Wait(7.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Purify_Area2_Init () {
                gt_Purify_Area2 = TriggerCreate(&quot;gt_Purify_Area2_Func&quot;);
                TriggerAddEventUnitRegion(gt_Purify_Area2, null, RegionFromId(24), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Purify_Area3
            //--------------------------------------------------------------------------------------------------
            bool gt_Purify_Area3_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, Order(AbilityCommand(&quot;stop&quot;, 0)), c_orderQueueReplace);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, false);
                TriggerExecute(gt_Mothership_Attack32, true, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022223&quot;, -1), StringExternal(&quot;Param/Value/BBADC719&quot;), StringExternal(&quot;Param/Value/F5EDC3D6&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                TriggerExecute(gt_Mothership_Attack33, true, false);
                gf_CreateProgressBarForMothership(gv_mothership, 40, 9.0);
                libNtve_gf_MakeUnitInvulnerable(gv_mothership, true);
                UnitSetState(gv_mothership, c_unitStateSelectable, false);
                UnitSetHeight(gv_mothership, 40.0, 6.0);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1020117757)), c_orderQueueReplace);
                PathDestroyAll(PlayerGroupAll());
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(31), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(31), &quot;GuideArrow2&quot;);
                SoundPlayForPlayer(SoundLink(&quot;Alarm_SoA_Protoss&quot;, -1), c_maxPlayers, PlayerGroupAll(), 300.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1020117757), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 6.0);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/CCA669AD&quot;));
                PingSetScale(PingLastCreated(), 1.0);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222&quot;, -1), StringExternal(&quot;Param/Value/2389FFB0&quot;), StringExternal(&quot;Param/Value/3BF95904&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(5.0, c_timeGame);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(532608825)), c_orderQueueReplace);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(527019706));
                gv_beam1 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(2049274991));
                gv_beam2 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(52250097));
                gv_beam3 = UnitLastCreated();
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(31), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(31), &quot;GuideArrow2&quot;);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1020117757)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1020117757)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1020117757)), c_orderQueueReplace);
                Wait(7.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Purify_Area3_Init () {
                gt_Purify_Area3 = TriggerCreate(&quot;gt_Purify_Area3_Func&quot;);
                TriggerAddEventUnitRegion(gt_Purify_Area3, null, RegionFromId(18), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Purify_Area4
            //--------------------------------------------------------------------------------------------------
            bool gt_Purify_Area4_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, Order(AbilityCommand(&quot;stop&quot;, 0)), c_orderQueueReplace);
                libNtve_gf_MakeUnitInvulnerable(gv_mothership, true);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, false);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022223&quot;, -1), StringExternal(&quot;Param/Value/6D8BAFDD&quot;), StringExternal(&quot;Param/Value/87E60212&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                gf_CreateProgressBarForMothership(gv_mothership, 40, 9.0);
                UnitAbilityEnable(gv_mothership, &quot;move&quot;, true);
                UnitSetState(gv_mothership, c_unitStateSelectable, false);
                UnitSetHeight(gv_mothership, 40.0, 6.0);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1786460183)), c_orderQueueReplace);
                PathDestroyAll(PlayerGroupAll());
                Wait(5.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(36), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(36), &quot;GuideArrow2&quot;);
                SoundPlayForPlayer(SoundLink(&quot;Alarm_SoA_Protoss&quot;, -1), c_maxPlayers, PlayerGroupAll(), 300.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingAlert&quot;, PointFromId(1786460183), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 6.0);
                PingSetTooltip(PingLastCreated(), StringExternal(&quot;Param/Value/2BCC2D9E&quot;));
                PingSetScale(PingLastCreated(), 1.0);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222&quot;, -1), StringExternal(&quot;Param/Value/160AECC7&quot;), StringExternal(&quot;Param/Value/11D7B184&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(5.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(2128856798));
                gv_beam1 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1618909733));
                gv_beam2 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(1203719284));
                gv_beam3 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam2&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(414116444));
                gv_beam4 = UnitLastCreated();
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;MutatorPurifierBeam22&quot;, 0, 4, PointFromId(1786460183));
                gv_beam5 = UnitLastCreated();
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(36), &quot;GuideArrow&quot;);
                libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(36), &quot;GuideArrow2&quot;);
                Wait(3.0, c_timeGame);
                UnitIssueOrder(gv_beam1, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(43452886)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam2, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1535837883)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam3, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(984559170)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam4, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1259009325)), c_orderQueueReplace);
                UnitIssueOrder(gv_beam5, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1296701021)), c_orderQueueReplace);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1296701021)), c_orderQueueReplace);
                Wait(10.0, c_timeGame);
                CameraShake(1, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                CameraShake(2, &quot;Light&quot;, &quot;Earthquake&quot;, 1.0, 1.0, 3.0);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Purify_Area4_Init () {
                gt_Purify_Area4 = TriggerCreate(&quot;gt_Purify_Area4_Func&quot;);
                TriggerAddEventUnitRegion(gt_Purify_Area4, null, RegionFromId(36), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Charging_Finish 2
            //--------------------------------------------------------------------------------------------------
            bool gt_Charging_Finish2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_charging_Integer == 100))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_MothershipCharge, false);
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_SetProgressBarLabel(StringExternal(&quot;Param/Value/5984606B&quot;));
                libCOMI_gf_SetProgressBarTitle(StringExternal(&quot;Param/Value/159B7EE7&quot;));
                libCOMI_gf_SetProgressBarColor(Color(100.00, 0.00, 0.00));
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro0222222&quot;, -1), StringExternal(&quot;Param/Value/4222012A&quot;), StringExternal(&quot;Param/Value/1A482250&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(2.0, c_timeGame);
                libCOMI_gf_ShowHideProgressBar(false);
                UnitRemove(gv_mothership_Shadow);
                PingDestroy(gv_shadow01);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_mothership_Ping = PingLastCreated();
                PingSetTooltip(gv_mothership_Ping, StringExternal(&quot;Param/Value/8703918C&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;TalDarimMothership&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(135147310));
                gv_mothership = UnitLastCreated();
                PingSetUnit(gv_mothership_Ping, gv_mothership);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership2&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Mothership_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                Wait(4.6, c_timeGame);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership&quot;);
                libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;CollectionBeam_ObjectFloatUp&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work End&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand&quot;, c_animFlagPlayForever, c_animTimeDefault);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(132816944)), c_orderQueueReplace);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(15465075), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(752500222), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(266481965), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(2074903546), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1747423596), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(589000130), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1763415770), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(963337389), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1535347622), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PathCreateForUnit(PlayerGroupAll(), gv_mothership);
                gv_path1 = PathLastCreated();
                PathSetLineWidth(gv_path1, c_pathLocationWorld, 0.8);
                PathSetLineWidth(gv_path1, c_pathLocationMinimap, 12.0);
                PathSetDestinationUnit(gv_path1, UnitFromId(1681205063));
                PathSetColor(gv_path1, c_pathLocationAll, Color(0.00, 100.00, 0.00));
                PathSetVisible(gv_path1, c_pathLocationAll, true);
                libCOMI_gf_DisplaySingularBossBarVoidCampaign(&quot;Assets\\Textures\\btn-unit-protoss-alarak-taldarim-mothership.dds&quot;, StringExternal(&quot;Param/Value/C7E2BA7B&quot;), 1000);
                libCOMI_gf_SetSingularBossBarBossVoidCampaign(gv_mothership, true);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(true);
                TriggerEnable(gt_Mothership_UnderAttack, true);
                Wait(15.0, c_timeGame);
                TriggerExecute(gt_Mothership_Attack2, true, false);
                Wait(30.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave3, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Charging_Finish2_Init () {
                gt_Charging_Finish2 = TriggerCreate(&quot;gt_Charging_Finish2_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Charging_Finish2, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Wave2_MS_Area1
            //--------------------------------------------------------------------------------------------------
            bool gt_Wave2_MS_Area1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) ==  gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(963337389)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Wave2_MS_Area1_Init () {
                gt_Wave2_MS_Area1 = TriggerCreate(&quot;gt_Wave2_MS_Area1_Func&quot;);
                TriggerAddEventUnitRegion(gt_Wave2_MS_Area1, null, RegionFromId(1), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Wave2_MS_Area2
            //--------------------------------------------------------------------------------------------------
            bool gt_Wave2_MS_Area2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(283316359)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Wave2_MS_Area2_Init () {
                gt_Wave2_MS_Area2 = TriggerCreate(&quot;gt_Wave2_MS_Area2_Func&quot;);
                TriggerAddEventUnitRegion(gt_Wave2_MS_Area2, null, RegionFromId(2), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Charging_Finish 3
            //--------------------------------------------------------------------------------------------------
            bool gt_Charging_Finish3_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_charging_Integer == 100))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_MothershipCharge, false);
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_SetProgressBarLabel(StringExternal(&quot;Param/Value/5B0C5878&quot;));
                libCOMI_gf_SetProgressBarTitle(StringExternal(&quot;Param/Value/881ED5CC&quot;));
                libCOMI_gf_SetProgressBarColor(Color(100.00, 0.00, 0.00));
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro0222222222&quot;, -1), StringExternal(&quot;Param/Value/DA10412D&quot;), StringExternal(&quot;Param/Value/2A4F665D&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                Wait(2.0, c_timeGame);
                libCOMI_gf_ShowHideProgressBar(false);
                UnitRemove(gv_mothership_Shadow);
                PingDestroy(gv_shadow01);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_mothership_Ping = PingLastCreated();
                PingSetTooltip(gv_mothership_Ping, StringExternal(&quot;Param/Value/07D0042D&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;TalDarimMothership&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(135147310));
                gv_mothership = UnitLastCreated();
                PingSetUnit(gv_mothership_Ping, gv_mothership);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership2&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;Mothership_Birth&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                Wait(4.6, c_timeGame);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership&quot;);
                libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;CollectionBeam_ObjectFloatUp&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work End&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand&quot;, c_animFlagPlayForever, c_animTimeDefault);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1168828519)), c_orderQueueReplace);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1367410333), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(644663848), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1685877005), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1619862868), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1311406159), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(2018496241), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1440393819), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(949460673), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(408120291), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PathCreateForUnit(PlayerGroupAll(), gv_mothership);
                gv_path1 = PathLastCreated();
                PathSetLineWidth(gv_path1, c_pathLocationWorld, 0.8);
                PathSetLineWidth(gv_path1, c_pathLocationMinimap, 12.0);
                PathSetDestinationUnit(gv_path1, UnitFromId(1716263269));
                PathSetColor(gv_path1, c_pathLocationAll, Color(0.00, 100.00, 0.00));
                PathSetVisible(gv_path1, c_pathLocationAll, true);
                libCOMI_gf_DisplaySingularBossBarVoidCampaign(&quot;Assets\\Textures\\btn-unit-protoss-alarak-taldarim-mothership.dds&quot;, StringExternal(&quot;Param/Value/C563C6D5&quot;), 1000);
                libCOMI_gf_SetSingularBossBarBossVoidCampaign(gv_mothership, true);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(true);
                TriggerEnable(gt_Mothership_UnderAttack, true);
                Wait(5.0, c_timeGame);
                Wait(5.0, c_timeGame);
                TriggerExecute(gt_Mothership_Attack3, true, false);
                Wait(30.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave8, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Charging_Finish3_Init () {
                gt_Charging_Finish3 = TriggerCreate(&quot;gt_Charging_Finish3_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Charging_Finish3, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Wave3_MS_Area1
            //--------------------------------------------------------------------------------------------------
            bool gt_Wave3_MS_Area1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(213712092)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Wave3_MS_Area1_Init () {
                gt_Wave3_MS_Area1 = TriggerCreate(&quot;gt_Wave3_MS_Area1_Func&quot;);
                TriggerAddEventUnitRegion(gt_Wave3_MS_Area1, null, RegionFromId(4), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Wave3_MS_Area2
            //--------------------------------------------------------------------------------------------------
            bool gt_Wave3_MS_Area2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1020117757)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Wave3_MS_Area2_Init () {
                gt_Wave3_MS_Area2 = TriggerCreate(&quot;gt_Wave3_MS_Area2_Func&quot;);
                TriggerAddEventUnitRegion(gt_Wave3_MS_Area2, null, RegionFromId(35), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Charging_Finish 4
            //--------------------------------------------------------------------------------------------------
            bool gt_Charging_Finish4_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((gv_charging_Integer == 100))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_MothershipCharge, false);
                TriggerEnable(TriggerGetCurrent(), false);
                libCOMI_gf_SetProgressBarLabel(StringExternal(&quot;Param/Value/7BC02A57&quot;));
                libCOMI_gf_SetProgressBarTitle(StringExternal(&quot;Param/Value/74A177B0&quot;));
                libCOMI_gf_SetProgressBarColor(Color(100.00, 0.00, 0.00));
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222222222242&quot;, -1), StringExternal(&quot;Param/Value/91F4F399&quot;), StringExternal(&quot;Param/Value/60CC287C&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                TriggerQueueExit();
                Wait(2.0, c_timeGame);
                libCOMI_gf_ShowHideProgressBar(false);
                UnitRemove(gv_mothership_Shadow);
                PingDestroy(gv_shadow01);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingObjective&quot;, PointFromId(135147310), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 524287.0);
                gv_mothership_Ping = PingLastCreated();
                PingSetTooltip(gv_mothership_Ping, StringExternal(&quot;Param/Value/A7882987&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;TalDarimMothership&quot;, 0, gv_pLAYER_04_Mothership, PointFromId(135147310));
                gv_mothership = UnitLastCreated();
                PingSetUnit(gv_mothership_Ping, gv_mothership);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership2&quot;);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault, &quot;Birth&quot;, 0, c_animTimeDefault);
                Wait(4.6, c_timeGame);
                libNtve_gf_SendActorMessageToUnit(gv_mothership, &quot;ModelSwap TalDarimMothership&quot;);
                libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(gv_mothership), c_animNameDefault);
                SoundPlayAtPointForPlayer(SoundLink(&quot;CollectionBeam_ObjectFloatUp&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 200.0, 0.0);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand Work End&quot;, 0, c_animTimeDefault);
                Wait(6.6, c_timeGame);
                libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_projector), c_animNameDefault, &quot;Stand&quot;, c_animFlagPlayForever, c_animTimeDefault);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1468169360), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(3974855), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1180593278), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(43750232), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(31094028), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(133625873), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(953997695), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1307783256), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(179132232), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1471236914), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(935516284), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(576748404), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(192848578), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1460513743), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(470188229), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1012435840), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1139326253), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(1132356637), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                Wait(0.1, c_timeGame);
                PingCreate(PlayerGroupAll(), &quot;PingArrow&quot;, PointFromId(2119939492), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 3.0);
                PingSetScale(PingLastCreated(), 0.6);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1012435840)), c_orderQueueReplace);
                PathCreateForUnit(PlayerGroupAll(), gv_mothership);
                gv_path1 = PathLastCreated();
                PathSetLineWidth(gv_path1, c_pathLocationWorld, 0.8);
                PathSetLineWidth(gv_path1, c_pathLocationMinimap, 12.0);
                PathSetDestinationUnit(gv_path1, UnitFromId(986121938));
                PathSetColor(gv_path1, c_pathLocationAll, Color(0.00, 100.00, 0.00));
                PathSetVisible(gv_path1, c_pathLocationAll, true);
                libCOMI_gf_DisplaySingularBossBarVoidCampaign(&quot;Assets\\Textures\\btn-unit-protoss-alarak-taldarim-mothership.dds&quot;, StringExternal(&quot;Param/Value/4ED8AD1B&quot;), 1000);
                libCOMI_gf_SetSingularBossBarBossVoidCampaign(gv_mothership, true);
                libCOMI_gf_ShowHideSingularBossBarVoidCampaign(true);
                Wait(0.1, c_timeGame);
                TriggerEnable(gt_Mothership_UnderAttack, true);
                Wait(20.0, c_timeGame);
                TriggerExecute(gt_Mothership_Attack4, true, false);
                Wait(30.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave6, true, false);
                Wait(20.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave7, true, false);
                Wait(20.0, c_timeGame);
                TriggerExecute(gt_Mothership_Attack5, true, false);
                Wait(20.0, c_timeGame);
                TriggerExecute(gt_BonusAttackWave10, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Charging_Finish4_Init () {
                gt_Charging_Finish4 = TriggerCreate(&quot;gt_Charging_Finish4_Func&quot;);
                TriggerAddEventTimePeriodic(gt_Charging_Finish4, 0.5, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Wave5_MS_Area1
            //--------------------------------------------------------------------------------------------------
            bool gt_Wave5_MS_Area1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_Mothership))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                UnitIssueOrder(gv_mothership, OrderTargetingPoint(AbilityCommand(&quot;move&quot;, 0), PointFromId(1786460183)), c_orderQueueReplace);
                TriggerExecute(gt_BonusAttackWave11, true, false);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Wave5_MS_Area1_Init () {
                gt_Wave5_MS_Area1 = TriggerCreate(&quot;gt_Wave5_MS_Area1_Func&quot;);
                TriggerAddEventUnitRegion(gt_Wave5_MS_Area1, null, RegionFromId(13), true);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Upgrades
            //--------------------------------------------------------------------------------------------------
            bool gt_Upgrades_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(600.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergMissileWeaponsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergMissileWeaponsLevel1&quot;, 1);
                Wait(100.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergMeleeWeaponsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergMeleeWeaponsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergFlyerWeaponsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergFlyerWeaponsLevel1&quot;, 1);
                Wait(40.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergGroundArmorsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergGroundArmorsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergFlyerArmorsLevel1&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergFlyerArmorsLevel1&quot;, 1);
                Wait(500.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergMissileWeaponsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergMissileWeaponsLevel2&quot;, 1);
                Wait(100.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergMeleeWeaponsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergMeleeWeaponsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergFlyerWeaponsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergFlyerWeaponsLevel2&quot;, 1);
                Wait(40.0, c_timeGame);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergGroundArmorsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergGroundArmorsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(3, &quot;ZergFlyerArmorsLevel2&quot;, 1);
                libNtve_gf_SetUpgradeLevelForPlayer(5, &quot;ZergFlyerArmorsLevel2&quot;, 1);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Upgrades_Init () {
                gt_Upgrades = TriggerCreate(&quot;gt_Upgrades_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Victory Fanfare Q
            //--------------------------------------------------------------------------------------------------
            bool gt_VictoryFanfareQ_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(gt_Fissure_Event, false);
                TransmissionClearAll();
                TriggerQueueEnter();
                CameraApplyInfo(1, CameraInfoFromId(314082219), 2.0, -1, 10.0, false);
                CameraPan(1, PointFromId(934486428), 2.0, -1, 10.0, false);
                CameraApplyInfo(2, CameraInfoFromId(314082219), 2.0, -1, 10.0, false);
                CameraPan(2, PointFromId(934486428), 2.0, -1, 10.0, false);
                Wait(1.0, c_timeGame);
                libCOMI_gf_CinematicModeCampaign(true, c_transitionDurationDefault, true);
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro022222222222222422&quot;, -1), StringExternal(&quot;Param/Value/23337E9F&quot;), StringExternal(&quot;Param/Value/550465CB&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                UnitPauseAll(true);
                CameraLockInput(gv_pLAYER_01_USER, true);
                CameraLockInput(gv_pLAYER_02_USER, true);
                UnitClearSelection(gv_pLAYER_01_USER);
                UnitClearSelection(gv_pLAYER_02_USER);
                UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, false);
                libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(1), libCOMI_ge_CampaignMessageType_MissionVictory, StringExternal(&quot;Param/Value/9E619806&quot;), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
                libCOMI_gf_DisplayCampaignMessage(PlayerGroupSingle(2), libCOMI_ge_CampaignMessageType_MissionVictory, StringExternal(&quot;Param/Value/74CA63ED&quot;), libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
                libCOMI_gf_WaitForMissionTransmission();
                Wait(1.0, c_timeGame);
                UISetCursorVisible(PlayerGroupAll(), true);
                libCOMI_gf_EndCampaignMission(c_gameOverVictory);
                TriggerQueueExit();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_VictoryFanfareQ_Init () {
                gt_VictoryFanfareQ = TriggerCreate(&quot;gt_VictoryFanfareQ_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Main Base Destroyed 1
            //--------------------------------------------------------------------------------------------------
            bool gt_MainBaseDestroyed1_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGroupCount(UnitGroup(null, 1, RegionFromId(15), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32)) | (1 &lt;&lt; (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive) == 0))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(1.0, c_timeGame);
                UnitGroupLoopBegin(UnitGroup(null, 3, RegionFromId(15), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterHeroic) | (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1936422895)), c_orderQueueReplace);
                }
                UnitGroupLoopEnd();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MainBaseDestroyed1_Init () {
                gt_MainBaseDestroyed1 = TriggerCreate(&quot;gt_MainBaseDestroyed1_Func&quot;);
                TriggerAddEventTimePeriodic(gt_MainBaseDestroyed1, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Main Base Destroyed 2
            //--------------------------------------------------------------------------------------------------
            bool gt_MainBaseDestroyed2_Func (bool testConds, bool runActions) {
                // Conditions
                if (testConds) {
                    if (!((UnitGroupCount(UnitGroup(null, 2, RegionFromId(15), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32)) | (1 &lt;&lt; (c_targetFilterHidden - 32)) | (1 &lt;&lt; (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive) == 0))) {
                        return false;
                    }
                }
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerEnable(TriggerGetCurrent(), false);
                Wait(1.0, c_timeGame);
                UnitGroupLoopBegin(UnitGroup(null, 3, RegionFromId(15), UnitFilter(0, 0, (1 &lt;&lt; c_targetFilterHeroic) | (1 &lt;&lt; c_targetFilterMissile), (1 &lt;&lt; (c_targetFilterDead - 32))), 0));
                for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
                    UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(324113924)), c_orderQueueReplace);
                }
                UnitGroupLoopEnd();
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_MainBaseDestroyed2_Init () {
                gt_MainBaseDestroyed2 = TriggerCreate(&quot;gt_MainBaseDestroyed2_Func&quot;);
                TriggerAddEventTimePeriodic(gt_MainBaseDestroyed2, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 1
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1844073391), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/98E947E2&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Mutalisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1844073391));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave1_Init () {
                gt_BonusAttackWave1 = TriggerCreate(&quot;gt_BonusAttackWave1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 2
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1994468022), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/2179B57A&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave2_Init () {
                gt_BonusAttackWave2 = TriggerCreate(&quot;gt_BonusAttackWave2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 3
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(498195502), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/FD2834A0&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave3_Init () {
                gt_BonusAttackWave3 = TriggerCreate(&quot;gt_BonusAttackWave3_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 4
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1994468022), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/E7A6F5A1&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridReaver&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_dropPod_Wave_MS1);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave4_Init () {
                gt_BonusAttackWave4 = TriggerCreate(&quot;gt_BonusAttackWave4_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 5
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(527019706), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/E55301FB&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridReaver&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave5_Init () {
                gt_BonusAttackWave5 = TriggerCreate(&quot;gt_BonusAttackWave5_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 6
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave6_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1520269738), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping, StringExternal(&quot;Param/Value/FF0D980C&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                gv_dropPod_Wave_MS1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping, UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing, true);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(10.0, c_timeGame);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(10.0, c_timeGame);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(10.0, c_timeGame);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave6_Init () {
                gt_BonusAttackWave6 = TriggerCreate(&quot;gt_BonusAttackWave6_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 7
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave7_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1628484820), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping3 = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping3, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping3, StringExternal(&quot;Param/Value/0F7A064A&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                gv_dropPod_Wave_MS3 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1628484820));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group3, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping3, UnitGroupUnit(gv_dropPod_Wave_MS1_Group3, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing3, true);
                UnitKill(gv_drop_Pod_AttackMS3);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave7_Init () {
                gt_BonusAttackWave7 = TriggerCreate(&quot;gt_BonusAttackWave7_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 8
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave8_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(527019706), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_bonus_Wave_Ping1 = PingLastCreated();
                PingSetScale(gv_bonus_Wave_Ping1, 0.4);
                PingSetTooltip(gv_bonus_Wave_Ping1, StringExternal(&quot;Param/Value/416F0613&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                gv_bonus_Wave_Drop1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ultralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                PingSetUnit(gv_bonus_Wave_Ping1, UnitGroupUnit(gv_bonus_Wave_Group1, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing4, true);
                UnitKill(gv_bonus_Wave_Drop1);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave8_Init () {
                gt_BonusAttackWave8 = TriggerCreate(&quot;gt_BonusAttackWave8_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 9
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave9_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(643438148), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_bonus_Wave_Ping1 = PingLastCreated();
                PingSetScale(gv_bonus_Wave_Ping1, 0.4);
                PingSetTooltip(gv_bonus_Wave_Ping1, StringExternal(&quot;Param/Value/66B87253&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                gv_bonus_Wave_Drop1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDestroyer&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                PingSetUnit(gv_bonus_Wave_Ping1, UnitGroupUnit(gv_bonus_Wave_Group1, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing4, true);
                UnitKill(gv_bonus_Wave_Drop1);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave9_Init () {
                gt_BonusAttackWave9 = TriggerCreate(&quot;gt_BonusAttackWave9_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 10
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave10_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1331055369), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_bonus_Wave_Ping1 = PingLastCreated();
                PingSetScale(gv_bonus_Wave_Ping1, 0.4);
                PingSetTooltip(gv_bonus_Wave_Ping1, StringExternal(&quot;Param/Value/6E17A01A&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                gv_bonus_Wave_Drop1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Mutalisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Mutalisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_bonus_Wave_Group1, UnitLastCreated());
                PingSetUnit(gv_bonus_Wave_Ping1, UnitGroupUnit(gv_bonus_Wave_Group1, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing4, true);
                UnitKill(gv_bonus_Wave_Drop1);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_bonus_Wave_Group1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave10_Init () {
                gt_BonusAttackWave10 = TriggerCreate(&quot;gt_BonusAttackWave10_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Bonus Attack Wave 11
            //--------------------------------------------------------------------------------------------------
            bool gt_BonusAttackWave11_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1034911377), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_bonus_Wave_Ping2 = PingLastCreated();
                PingSetScale(gv_bonus_Wave_Ping2, 0.4);
                PingSetTooltip(gv_bonus_Wave_Ping2, StringExternal(&quot;Param/Value/A76E04C0&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                gv_bonus_Wave_Drop2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDestroyer&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1034911377));
                UnitGroupAdd(gv_bonus_Wave_Group2, UnitLastCreated());
                PingSetUnit(gv_bonus_Wave_Ping2, UnitGroupUnit(gv_bonus_Wave_Group2, 4));
                TriggerEnable(gt_DestroyBonusAttackWavePing5, true);
                UnitKill(gv_bonus_Wave_Drop2);
                UnitGroupIssueOrder(gv_bonus_Wave_Group2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_BonusAttackWave11_Init () {
                gt_BonusAttackWave11 = TriggerCreate(&quot;gt_BonusAttackWave11_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Bonus Attack Wave Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyBonusAttackWavePing_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_Wave_MS1_Group, 4)) == false)) {
                    PingDestroy(gv_dropPodPing_WAVEMS_Ping);
                    TriggerEnable(gt_DestroyBonusAttackWavePing, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyBonusAttackWavePing_Init () {
                gt_DestroyBonusAttackWavePing = TriggerCreate(&quot;gt_DestroyBonusAttackWavePing_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyBonusAttackWavePing, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Bonus Attack Wave Ping 2
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyBonusAttackWavePing2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_Wave_MS1_Group2, 4)) == false)) {
                    PingDestroy(gv_dropPodPing_WAVEMS_Ping2);
                    TriggerEnable(gt_DestroyBonusAttackWavePing2, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyBonusAttackWavePing2_Init () {
                gt_DestroyBonusAttackWavePing2 = TriggerCreate(&quot;gt_DestroyBonusAttackWavePing2_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyBonusAttackWavePing2, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Bonus Attack Wave Ping 3
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyBonusAttackWavePing3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_Wave_MS1_Group3, 4)) == false)) {
                    PingDestroy(gv_dropPodPing_WAVEMS_Ping3);
                    TriggerEnable(gt_DestroyBonusAttackWavePing3, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyBonusAttackWavePing3_Init () {
                gt_DestroyBonusAttackWavePing3 = TriggerCreate(&quot;gt_DestroyBonusAttackWavePing3_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyBonusAttackWavePing3, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Bonus Attack Wave Ping 4
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyBonusAttackWavePing4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_bonus_Wave_Group1, 4)) == false)) {
                    PingDestroy(gv_bonus_Wave_Ping1);
                    TriggerEnable(gt_DestroyBonusAttackWavePing4, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyBonusAttackWavePing4_Init () {
                gt_DestroyBonusAttackWavePing4 = TriggerCreate(&quot;gt_DestroyBonusAttackWavePing4_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyBonusAttackWavePing4, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Bonus Attack Wave Ping 5
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyBonusAttackWavePing5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_bonus_Wave_Group2, 4)) == false)) {
                    PingDestroy(gv_bonus_Wave_Ping2);
                    TriggerEnable(gt_DestroyBonusAttackWavePing5, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyBonusAttackWavePing5_Init () {
                gt_DestroyBonusAttackWavePing5 = TriggerCreate(&quot;gt_DestroyBonusAttackWavePing5_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyBonusAttackWavePing5, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Start AI
            //--------------------------------------------------------------------------------------------------
            bool gt_StartAI_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                libCOMI_gf_StartCoopAI(gv_pLAYER_03_ENEMY, gv_pLAYER_01_USER);
                libCOMI_gf_StartCoopAI(gv_pLAYER_05_ENEMY, gv_pLAYER_02_USER);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_StartAI_Init () {
                gt_StartAI = TriggerCreate(&quot;gt_StartAI_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 1
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack1_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(7.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1004707761), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing, StringExternal(&quot;Param/Value/921A7303&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                gv_drop_Pod_AttackMS = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing, UnitGroupUnit(gv_attack_MothersihpGroup, 3));
                Wait(1.0, c_timeGame);
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack1_Init () {
                gt_Mothership_Attack1 = TriggerCreate(&quot;gt_Mothership_Attack1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 2
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222&quot;, -1), StringExternal(&quot;Param/Value/4BDEE5E2&quot;), StringExternal(&quot;Param/Value/B796B550&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(498195502), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing, StringExternal(&quot;Param/Value/18569066&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                gv_drop_Pod_AttackMS = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing, UnitGroupUnit(gv_attack_MothersihpGroup, 3));
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack2_Init () {
                gt_Mothership_Attack2 = TriggerCreate(&quot;gt_Mothership_Attack2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack (2 Def)
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack2Def_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1970364063), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_mothership_Def_Ping = PingLastCreated();
                PingSetScale(gv_mothership_Def_Ping, 0.4);
                PingSetTooltip(gv_mothership_Def_Ping, StringExternal(&quot;Param/Value/6C366B2D&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                gv_mothership_DefDrop = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Viper&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                UnitGroupAdd(gv_mothership_Def_Group, UnitLastCreated());
                PingSetUnit(gv_mothership_Def_Ping, UnitGroupUnit(gv_mothership_Def_Group, 3));
                UnitKill(gv_mothership_DefDrop);
                UnitGroupIssueOrder(gv_mothership_Def_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing4, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack2Def_Init () {
                gt_Mothership_Attack2Def = TriggerCreate(&quot;gt_Mothership_Attack2Def_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack (3 Def)
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack3Def_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(15.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1994468022), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_mothership_Def_Ping2 = PingLastCreated();
                PingSetScale(gv_mothership_Def_Ping2, 0.4);
                PingSetTooltip(gv_mothership_Def_Ping2, StringExternal(&quot;Param/Value/97D571A2&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                gv_mothership_DefDrop2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_mothership_Def_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_mothership_Def_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Viper&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_mothership_Def_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_mothership_Def_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1994468022));
                UnitGroupAdd(gv_mothership_Def_Group2, UnitLastCreated());
                PingSetUnit(gv_mothership_Def_Ping2, UnitGroupUnit(gv_mothership_Def_Group2, 3));
                UnitKill(gv_mothership_DefDrop2);
                UnitGroupIssueOrder(gv_mothership_Def_Group2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing5, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack3Def_Init () {
                gt_Mothership_Attack3Def = TriggerCreate(&quot;gt_Mothership_Attack3Def_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 3
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(3.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222&quot;, -1), StringExternal(&quot;Param/Value/3ABC1254&quot;), StringExternal(&quot;Param/Value/F6D4797B&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(527019706), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing, StringExternal(&quot;Param/Value/3FA75291&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                gv_drop_Pod_AttackMS = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridNemesis&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDestroyer&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(527019706));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing, UnitGroupUnit(gv_attack_MothersihpGroup, 3));
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack3_Init () {
                gt_Mothership_Attack3 = TriggerCreate(&quot;gt_Mothership_Attack3_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 3 (2)
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack32_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(10.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1520269738), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing2 = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing2, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing2, StringExternal(&quot;Param/Value/36E7E91F&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                gv_drop_Pod_AttackMS2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Mutalisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Mutalisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDestroyer&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1520269738));
                UnitGroupAdd(gv_attack_MothersihpGroup2, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing2, UnitGroupUnit(gv_attack_MothersihpGroup2, 4));
                UnitKill(gv_drop_Pod_AttackMS2);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing2, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack32_Init () {
                gt_Mothership_Attack32 = TriggerCreate(&quot;gt_Mothership_Attack32_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 3 (3)
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack33_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(25.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(213712092), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_mothership_Def_Ping3 = PingLastCreated();
                PingSetScale(gv_mothership_Def_Ping3, 0.4);
                PingSetTooltip(gv_mothership_Def_Ping3, StringExternal(&quot;Param/Value/9864B1ED&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1970364063));
                gv_mothership_DefDrop3 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(213712092));
                UnitGroupAdd(gv_mothership_Def_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(213712092));
                UnitGroupAdd(gv_mothership_Def_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(213712092));
                UnitGroupAdd(gv_mothership_Def_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(213712092));
                UnitGroupAdd(gv_mothership_Def_Group3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(213712092));
                UnitGroupAdd(gv_mothership_Def_Group3, UnitLastCreated());
                PingSetUnit(gv_mothership_Def_Ping3, UnitGroupUnit(gv_mothership_Def_Group3, 3));
                UnitKill(gv_mothership_DefDrop3);
                UnitGroupIssueOrder(gv_mothership_Def_Group3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing6, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_mothership_Def_Group3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack33_Init () {
                gt_Mothership_Attack33 = TriggerCreate(&quot;gt_Mothership_Attack33_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 4
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(3.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayForPlayer(SoundLink(&quot;Dialogue_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
                TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(UnitFromId(265550710), true, false, &quot;Talk&quot;), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), &quot;&quot;, &quot;Talk&quot;, SoundLink(&quot;Zaladas_Intro02222222&quot;, -1), StringExternal(&quot;Param/Value/A3266758&quot;), StringExternal(&quot;Param/Value/646BE6B7&quot;), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
                libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1331055369), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing, StringExternal(&quot;Param/Value/9D136541&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                gv_drop_Pod_AttackMS = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridNemesis&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Scourge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_attack_MothersihpGroup, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing, UnitGroupUnit(gv_attack_MothersihpGroup, 3));
                UnitKill(gv_drop_Pod_AttackMS);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack4_Init () {
                gt_Mothership_Attack4 = TriggerCreate(&quot;gt_Mothership_Attack4_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack 5
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_Attack5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(3.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(643438148), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_attackWave_MothershipPing3 = PingLastCreated();
                PingSetScale(gv_attackWave_MothershipPing3, 0.4);
                PingSetTooltip(gv_attackWave_MothershipPing3, StringExternal(&quot;Param/Value/868801DE&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                gv_drop_Pod_AttackMS3 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_attack_MothersihpGroup3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_attack_MothersihpGroup3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_attack_MothersihpGroup3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_attack_MothersihpGroup3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Corruptor&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_attack_MothersihpGroup3, UnitLastCreated());
                PingSetUnit(gv_attackWave_MothershipPing3, UnitGroupUnit(gv_attack_MothersihpGroup3, 4));
                UnitKill(gv_drop_Pod_AttackMS3);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing3, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_attack_MothersihpGroup3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_Attack5_Init () {
                gt_Mothership_Attack5 = TriggerCreate(&quot;gt_Mothership_Attack5_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Mothership_Attack (Start 2)
            //--------------------------------------------------------------------------------------------------
            bool gt_Mothership_AttackStart2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(20.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(3974855), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping4 = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping4, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping4, StringExternal(&quot;Param/Value/AB95F375&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(3974855));
                gv_dropPod_Wave_MS4 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(3974855));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group4, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(3974855));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group4, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(3974855));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group4, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Viper&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(3974855));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group4, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping4, UnitGroupUnit(gv_dropPod_Wave_MS1_Group4, 4));
                UnitKill(gv_dropPod_Wave_MS4);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group4, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackMothershipPing7, true);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group4, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                Wait(15.0, c_timeGame);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group4, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), UnitGetPosition(gv_mothership)), c_orderQueueReplace);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_Mothership_AttackStart2_Init () {
                gt_Mothership_AttackStart2 = TriggerCreate(&quot;gt_Mothership_AttackStart2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (1)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ1_Func (bool testConds, bool runActions) {
                int autoF679ACE0_val;
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(230.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;AttackWave&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                gv_attack_Wave = RandomInt(1, 3);
                autoF679ACE0_val = gv_attack_Wave;
                if (autoF679ACE0_val == 1) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(847624799), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/E3551EB8&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 4));
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                    TriggerExecute(gt_DestroyAttackWavePing, true, false);
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                }
                else if (autoF679ACE0_val == 2) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(653410707), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/44C90D95&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(653410707));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 4));
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                }
                else if (autoF679ACE0_val == 3) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(498195502), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/D0E2EF5D&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 4));
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                }
                else {
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ1_Init () {
                gt_EnemyAttackWaveQ1 = TriggerCreate(&quot;gt_EnemyAttackWaveQ1_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (2)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ2_Func (bool testConds, bool runActions) {
                int autoC609CD2E_val;
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(60.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;AttackWave&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                gv_attack_Wave = RandomInt(1, 3);
                autoC609CD2E_val = gv_attack_Wave;
                if (autoC609CD2E_val == 1) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(847624799), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/17FC5E81&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(847624799));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 2));
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                }
                else if (autoC609CD2E_val == 2) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(498195502), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/D3C69343&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(498195502));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 2));
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                }
                else if (autoC609CD2E_val == 3) {
                    SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                    PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1004707761), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                    gv_ping_DropPod = PingLastCreated();
                    PingSetScale(gv_ping_DropPod, 0.4);
                    PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/7F47E9F1&quot;));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPod&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    gv_drop_Pod = UnitLastCreated();
                    Wait(3.0, c_timeGame);
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                    UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                    PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 2));
                    UnitKill(gv_drop_Pod);
                    UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                    TriggerEnable(gt_DestroyAttackWavePing, true);
                }
                else {
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ2_Init () {
                gt_EnemyAttackWaveQ2 = TriggerCreate(&quot;gt_EnemyAttackWaveQ2_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (3)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(50.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;HybridDetected&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(643438148), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_ping_DropPod = PingLastCreated();
                PingSetScale(gv_ping_DropPod, 0.4);
                PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/F7164016&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                gv_drop_Pod = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Zergling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 4));
                UnitKill(gv_drop_Pod);
                UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ3_Init () {
                gt_EnemyAttackWaveQ3 = TriggerCreate(&quot;gt_EnemyAttackWaveQ3_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (4)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(50.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1004707761), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_ping_HybridDrop = PingLastCreated();
                PingSetScale(gv_ping_HybridDrop, 0.4);
                PingSetTooltip(gv_ping_HybridDrop, StringExternal(&quot;Param/Value/A0E48CC4&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                gv_drop_Pod2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hybrid&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1004707761));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                PingSetUnit(gv_ping_HybridDrop, UnitGroupUnit(gv_drop_Pod3, 2));
                UnitKill(gv_drop_Pod2);
                UnitGroupIssueOrder(gv_drop_Pod3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing2, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ4_Init () {
                gt_EnemyAttackWaveQ4 = TriggerCreate(&quot;gt_EnemyAttackWaveQ4_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (5)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(60.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;AttackWave&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(143381561), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_ping_DropPod = PingLastCreated();
                PingSetScale(gv_ping_DropPod, 0.4);
                PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/03B2F7AB&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(143381561));
                gv_drop_Pod = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(143381561));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Baneling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(143381561));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(143381561));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(143381561));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 2));
                UnitKill(gv_drop_Pod);
                UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ5_Init () {
                gt_EnemyAttackWaveQ5 = TriggerCreate(&quot;gt_EnemyAttackWaveQ5_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave (6)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWave6_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(643438148), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_1 = PingLastCreated();
                PingSetScale(gv_dropPodPing_1, 0.4);
                PingSetTooltip(gv_dropPodPing_1, StringExternal(&quot;Param/Value/6CDCAE1A&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                gv_dropPod_1 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_dropPod_1Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_dropPod_1Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_dropPod_1Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_dropPod_1Group, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridNemesis&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(643438148));
                UnitGroupAdd(gv_dropPod_1Group, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_1, UnitGroupUnit(gv_dropPod_1Group, 4));
                UnitKill(gv_dropPod_1);
                UnitGroupIssueOrder(gv_dropPod_1Group, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing3, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWave6_Init () {
                gt_EnemyAttackWave6 = TriggerCreate(&quot;gt_EnemyAttackWave6_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave (7)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWave7_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(234436784), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_dropPodPing_WAVEMS_Ping2 = PingLastCreated();
                PingSetScale(gv_dropPodPing_WAVEMS_Ping2, 0.4);
                PingSetTooltip(gv_dropPodPing_WAVEMS_Ping2, StringExternal(&quot;Param/Value/496F580B&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(234436784));
                gv_dropPod_Wave_MS2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDominatorVoid&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(234436784));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group2, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDestroyer&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(234436784));
                UnitGroupAdd(gv_dropPod_Wave_MS1_Group2, UnitLastCreated());
                PingSetUnit(gv_dropPodPing_WAVEMS_Ping2, UnitGroupUnit(gv_dropPod_Wave_MS1_Group2, 5));
                UnitKill(gv_dropPod_Wave_MS2);
                UnitGroupIssueOrder(gv_dropPod_Wave_MS1_Group2, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing4, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWave7_Init () {
                gt_EnemyAttackWave7 = TriggerCreate(&quot;gt_EnemyAttackWave7_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (6)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ6_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(60.0, c_timeGame);
                TriggerQueueEnter();
                SoundPlayAtPointForPlayer(SoundLink(&quot;UI_TransmissionStart&quot;, -1), c_maxPlayers, PlayerGroupAll(), PointFromId(135147310), 0.0, 150.0, 0.0);
                libCOMI_gf_SendMissionTransmission(&quot;AttackWave&quot;, true, RandomInt(gv_pLAYER_01_USER, gv_pLAYER_02_USER));
                TriggerQueueExit();
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1331055369), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_ping_DropPod = PingLastCreated();
                PingSetScale(gv_ping_DropPod, 0.4);
                PingSetTooltip(gv_ping_DropPod, StringExternal(&quot;Param/Value/51BEA5EB&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                gv_drop_Pod = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Ravager&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Baneling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Baneling&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Hydralisk&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1331055369));
                UnitGroupAdd(gv_drop_Pod1, UnitLastCreated());
                PingSetUnit(gv_ping_DropPod, UnitGroupUnit(gv_drop_Pod1, 2));
                UnitKill(gv_drop_Pod);
                UnitGroupIssueOrder(gv_drop_Pod1, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(383026617)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ6_Init () {
                gt_EnemyAttackWaveQ6 = TriggerCreate(&quot;gt_EnemyAttackWaveQ6_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Enemy Attack Wave Q (7)
            //--------------------------------------------------------------------------------------------------
            bool gt_EnemyAttackWaveQ7_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                Wait(50.0, c_timeGame);
                SoundPlayForPlayer(SoundLink(&quot;UI_ZergWarningPing&quot;, -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
                PingCreate(PlayerGroupAll(), &quot;PingDiamond&quot;, PointFromId(1153032974), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 524287.0);
                gv_ping_HybridDrop = PingLastCreated();
                PingSetScale(gv_ping_HybridDrop, 0.4);
                PingSetTooltip(gv_ping_HybridDrop, StringExternal(&quot;Param/Value/060070A1&quot;));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;ZergDropPodLarge&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                gv_drop_Pod2 = UnitLastCreated();
                Wait(3.0, c_timeGame);
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;InfestedAbomination&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;Roach&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                libNtve_gf_CreateUnitsWithDefaultFacing(1, &quot;HybridDominatorVoid&quot;, 0, gv_pLAYER_03_ENEMY, PointFromId(1153032974));
                UnitGroupAdd(gv_drop_Pod3, UnitLastCreated());
                PingSetUnit(gv_ping_HybridDrop, UnitGroupUnit(gv_drop_Pod3, 7));
                UnitKill(gv_drop_Pod2);
                UnitGroupIssueOrder(gv_drop_Pod3, OrderTargetingPoint(AbilityCommand(&quot;attack&quot;, 0), PointFromId(1367445261)), c_orderQueueReplace);
                TriggerEnable(gt_DestroyAttackWavePing2, true);
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_EnemyAttackWaveQ7_Init () {
                gt_EnemyAttackWaveQ7 = TriggerCreate(&quot;gt_EnemyAttackWaveQ7_Func&quot;);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Wave Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackWavePing_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_drop_Pod1, 4)) == false)) {
                    PingDestroy(gv_ping_DropPod);
                    TriggerEnable(gt_DestroyAttackWavePing, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackWavePing_Init () {
                gt_DestroyAttackWavePing = TriggerCreate(&quot;gt_DestroyAttackWavePing_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackWavePing, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Wave Ping 2
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackWavePing2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_drop_Pod3, 4)) == false)) {
                    PingDestroy(gv_ping_HybridDrop);
                    TriggerEnable(gt_DestroyAttackWavePing2, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackWavePing2_Init () {
                gt_DestroyAttackWavePing2 = TriggerCreate(&quot;gt_DestroyAttackWavePing2_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackWavePing2, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Wave Ping 3
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackWavePing3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_1Group, 5)) == false)) {
                    PingDestroy(gv_dropPodPing_1);
                    TriggerEnable(gt_DestroyAttackWavePing3, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackWavePing3_Init () {
                gt_DestroyAttackWavePing3 = TriggerCreate(&quot;gt_DestroyAttackWavePing3_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackWavePing3, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Wave Ping 4
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackWavePing4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_Wave_MS1_Group2, 5)) == false)) {
                    PingDestroy(gv_dropPodPing_WAVEMS_Ping2);
                    TriggerEnable(gt_DestroyAttackWavePing4, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackWavePing4_Init () {
                gt_DestroyAttackWavePing4 = TriggerCreate(&quot;gt_DestroyAttackWavePing4_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackWavePing4, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_attack_MothersihpGroup, 3)) == false)) {
                    PingDestroy(gv_attackWave_MothershipPing);
                    TriggerEnable(gt_DestroyAttackMothershipPing, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing_Init () {
                gt_DestroyAttackMothershipPing = TriggerCreate(&quot;gt_DestroyAttackMothershipPing_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 2
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing2_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_attack_MothersihpGroup2, 3)) == false)) {
                    PingDestroy(gv_attackWave_MothershipPing2);
                    TriggerEnable(gt_DestroyAttackMothershipPing2, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing2_Init () {
                gt_DestroyAttackMothershipPing2 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing2_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing2, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 3
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing3_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_attack_MothersihpGroup3, 3)) == false)) {
                    PingDestroy(gv_attackWave_MothershipPing3);
                    TriggerEnable(gt_DestroyAttackMothershipPing3, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing3_Init () {
                gt_DestroyAttackMothershipPing3 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing3_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing3, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 7
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing7_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_dropPod_Wave_MS1_Group4, 3)) == false)) {
                    PingDestroy(gv_dropPodPing_WAVEMS_Ping4);
                    TriggerEnable(gt_DestroyAttackMothershipPing7, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing7_Init () {
                gt_DestroyAttackMothershipPing7 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing7_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing7, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 4
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing4_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_mothership_Def_Group, 3)) == false)) {
                    PingDestroy(gv_mothership_Def_Ping);
                    TriggerEnable(gt_DestroyAttackMothershipPing4, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing4_Init () {
                gt_DestroyAttackMothershipPing4 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing4_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing4, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 5
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing5_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_mothership_Def_Group2, 3)) == false)) {
                    PingDestroy(gv_mothership_Def_Ping2);
                    TriggerEnable(gt_DestroyAttackMothershipPing5, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing5_Init () {
                gt_DestroyAttackMothershipPing5 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing5_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing5, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger: Destroy Attack Mothership Ping 6
            //--------------------------------------------------------------------------------------------------
            bool gt_DestroyAttackMothershipPing6_Func (bool testConds, bool runActions) {
                // Actions
                if (!runActions) {
                    return true;
                }
                if ((UnitIsAlive(UnitGroupUnit(gv_mothership_Def_Group3, 3)) == false)) {
                    PingDestroy(gv_mothership_Def_Ping3);
                    TriggerEnable(gt_DestroyAttackMothershipPing6, false);
                }
                return true;
            }
            //--------------------------------------------------------------------------------------------------
            void gt_DestroyAttackMothershipPing6_Init () {
                gt_DestroyAttackMothershipPing6 = TriggerCreate(&quot;gt_DestroyAttackMothershipPing6_Func&quot;);
                TriggerAddEventTimePeriodic(gt_DestroyAttackMothershipPing6, 1.0, c_timeGame);
            }
            //--------------------------------------------------------------------------------------------------
            // Trigger Initialization
            //--------------------------------------------------------------------------------------------------
            void InitTriggers () {
                gt_Init01LoadData_Init();
                gt_Init02Players_Init();
                gt_Init03LoadingComplete_Init();
                gt_Init04Technology_Init();
                gt_Init05Units_Init();
                gt_Init06MusicSound_Init();
                gt_Init07Environment_Init();
                gt_Init08Difficulties_Init();
                gt_Init09Coop_Init();
                gt_ConstructMissiles_Init();
                gt_GasPing_Init();
                gt_RevealBonusObjectiveQ_Init();
                gt_BonusObjective1Activate_Init();
                gt_Bonus_Turret_1_Attacks_Init();
                gt_Turret1Attack_Init();
                gt_RevealBonusObjectiveQ2_Init();
                gt_BonusObjective2Activate_Init();
                gt_Bonus_Turret_2_Attacks_Init();
                gt_Turret2Attack_Init();
                gt_Shard_Spawn1_Init();
                gt_Shard_Spawn5_Init();
                gt_Shard_Spawn2_Init();
                gt_Shard_Spawn3_Init();
                gt_Shard_Spawn4_Init();
                gt_DefeatObjective2_Init();
                gt_Music_Init();
                gt_StartGameQ_Init();
                gt_HighlightStart_Init();
                gt_HighlightStop_Init();
                gt_HighlightStartShard_Init();
                gt_HighlightStopShard_Init();
                gt_VoidChasmStartQ_Init();
                gt_VoidChasmRebirthQ_Init();
                gt_VoidChasmSummonEntities_Init();
                gt_VoidChasmEntitiesAttack_Init();
                gt_Fissure_Event_Init();
                gt_Gas_Players_Init();
                gt_Mothership_UnderAttack_Init();
                gt_ShardPing_Init();
                gt_ShardPing2_Init();
                gt_ShardPing3_Init();
                gt_ShardPing4_Init();
                gt_ShardPing5_Init();
                gt_ShardPing8_Init();
                gt_ShardPing9_Init();
                gt_ShardPing10_Init();
                gt_Thrasher_Ping_Init();
                gt_Thrasher_Ping2_Init();
                gt_MothershipCharge_Init();
                gt_Charging_Finish1_Init();
                gt_Purify_Area1_Init();
                gt_Purify_Area2_Init();
                gt_Purify_Area3_Init();
                gt_Purify_Area4_Init();
                gt_Charging_Finish2_Init();
                gt_Wave2_MS_Area1_Init();
                gt_Wave2_MS_Area2_Init();
                gt_Charging_Finish3_Init();
                gt_Wave3_MS_Area1_Init();
                gt_Wave3_MS_Area2_Init();
                gt_Charging_Finish4_Init();
                gt_Wave5_MS_Area1_Init();
                gt_Upgrades_Init();
                gt_VictoryFanfareQ_Init();
                gt_MainBaseDestroyed1_Init();
                gt_MainBaseDestroyed2_Init();
                gt_BonusAttackWave1_Init();
                gt_BonusAttackWave2_Init();
                gt_BonusAttackWave3_Init();
                gt_BonusAttackWave4_Init();
                gt_BonusAttackWave5_Init();
                gt_BonusAttackWave6_Init();
                gt_BonusAttackWave7_Init();
                gt_BonusAttackWave8_Init();
                gt_BonusAttackWave9_Init();
                gt_BonusAttackWave10_Init();
                gt_BonusAttackWave11_Init();
                gt_DestroyBonusAttackWavePing_Init();
                gt_DestroyBonusAttackWavePing2_Init();
                gt_DestroyBonusAttackWavePing3_Init();
                gt_DestroyBonusAttackWavePing4_Init();
                gt_DestroyBonusAttackWavePing5_Init();
                gt_StartAI_Init();
                gt_Mothership_Attack1_Init();
                gt_Mothership_Attack2_Init();
                gt_Mothership_Attack2Def_Init();
                gt_Mothership_Attack3Def_Init();
                gt_Mothership_Attack3_Init();
                gt_Mothership_Attack32_Init();
                gt_Mothership_Attack33_Init();
                gt_Mothership_Attack4_Init();
                gt_Mothership_Attack5_Init();
                gt_Mothership_AttackStart2_Init();
                gt_EnemyAttackWaveQ1_Init();
                gt_EnemyAttackWaveQ2_Init();
                gt_EnemyAttackWaveQ3_Init();
                gt_EnemyAttackWaveQ4_Init();
                gt_EnemyAttackWaveQ5_Init();
                gt_EnemyAttackWave6_Init();
                gt_EnemyAttackWave7_Init();
                gt_EnemyAttackWaveQ6_Init();
                gt_EnemyAttackWaveQ7_Init();
                gt_DestroyAttackWavePing_Init();
                gt_DestroyAttackWavePing2_Init();
                gt_DestroyAttackWavePing3_Init();
                gt_DestroyAttackWavePing4_Init();
                gt_DestroyAttackMothershipPing_Init();
                gt_DestroyAttackMothershipPing2_Init();
                gt_DestroyAttackMothershipPing3_Init();
                gt_DestroyAttackMothershipPing7_Init();
                gt_DestroyAttackMothershipPing4_Init();
                gt_DestroyAttackMothershipPing5_Init();
                gt_DestroyAttackMothershipPing6_Init();
            }
            //--------------------------------------------------------------------------------------------------
            // Map Initialization
            //--------------------------------------------------------------------------------------------------
            void run () {
                InitLibs();
                InitGlobals();
                InitTriggers();
            }
        </ScriptCode>
        <InitFunc>run</InitFunc>
    </Element>
</TriggerData>
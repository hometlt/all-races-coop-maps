//==================================================================================================
// 
// Generated Map Script
// 
// Name:   RTC 2017 : Guardians of Aiur
// 
//==================================================================================================
include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Custom Script: Triggers
//--------------------------------------------------------------------------------------------------
//==================================================================================================
// 
// Generated Map Script
// 
// Name:   RTC 2017 : Guardians of Aiur
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibCOMI"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libCOMI_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_pLAYER_01_USER = 1;
const int gv_pLAYER_02_USER = 2;
const int gv_pLAYER_03_ENEMY = 3;
const int gv_pLAYER_04_ENEMY = 4;
const int gv_aiur = 5;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
playergroup gv_enemyGroup;
unit[6] gv_tumorQueen_Array;
point[6] gv_tumorLocation_Array;
unitgroup[6] gv_aiurTroop_front;
unitgroup gv_squad_Urun;
point[7] gv_archonMergeLoc;
unit[7] gv_circle;
int gv_archon_Energe;
unit gv_archon;
int gv_templars;
fixed gv_shieldRate;
unitgroup gv_attackForce_Front;
unitgroup gv_attackForce_Right;
unitgroup gv_attackForce_Left;
int gv_mineKill;
point[7] gv_loc_Hill;
point[7] gv_loc_Guardian;
point[7] gv_loc_Aiur;
unit[51] gv_captain;
fixed gv_guardian;
int gv_bonusHunterK;
unit gv_boss_Kraith;
unit gv_boss_Brakk;
unit gv_boss_Spotter;
unit gv_boss_Omega;
int gv_randomSec_Spotter;
unit gv_target_Kraith;
int gv_int_Amount_impaler;
int gv_sP_Random_int;
timer gv_timer;

void InitGlobals () {
    int init_i;

    gv_enemyGroup = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 5; init_i += 1) {
        gv_aiurTroop_front[init_i] = UnitGroupEmpty();
    }
    gv_squad_Urun = UnitGroupEmpty();
    gv_templars = 6;
    gv_attackForce_Front = UnitGroupEmpty();
    gv_attackForce_Right = UnitGroupEmpty();
    gv_attackForce_Left = UnitGroupEmpty();
    gv_guardian = 60.0;
    gv_randomSec_Spotter = 3;
    gv_sP_Random_int = 30;
    gv_timer = TimerCreate();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime);
unit gf_DropUnit (string lp_unitType, point lp_loc, int lp_player);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Init01LoadData;
trigger gt_Init02Players;
trigger gt_Init03LoadingComplete;
trigger gt_Init04Technology;
trigger gt_Init05Units;
trigger gt_Init06MusicSound;
trigger gt_Init07Environment;
trigger gt_Init08Difficulties;
trigger gt_DebugCantFail;
trigger gt_CreatecreepTumor;
trigger gt_CreateTumorQueen;
trigger gt_AiurUPGRADE1;
trigger gt_AiurUPGRADE2;
trigger gt_AiurUPGRADE3;
trigger gt_AiurUPGRADE4;
trigger gt_AiurUPGRADE5;
trigger gt_AiurUPGRADE6;
trigger gt_Reinf_left1;
trigger gt_Reinf_right1;
trigger gt_Reinf_front1;
trigger gt_Reinf_left2;
trigger gt_Reinf_right2;
trigger gt_Reinf_front2;
trigger gt_Reinf_front3boss1;
trigger gt_Reinf_left4;
trigger gt_Reinf_right4;
trigger gt_Reinf_front4;
trigger gt_Reinf_front5boss2;
trigger gt_UrunSquad_Patrol;
trigger gt_Reinf_left6;
trigger gt_Reinf_right6;
trigger gt_Reinf_front6;
trigger gt_Reinf_frontlastboss;
trigger gt_TemplarGen;
trigger gt_Templardie;
trigger gt_ArchonGenerate;
trigger gt_ReinforcementTank;
trigger gt_ReinforcementRanged;
trigger gt_ReinforcementAir;
trigger gt_Maingatedestruction;
trigger gt_COOPATTACK;
trigger gt_protossinit;
trigger gt_TroopSet;
trigger gt_TroopAddUnit;
trigger gt_TroopAddUnit2;
trigger gt_TroopAddUnit3;
trigger gt_RetreatOff;
trigger gt_RetreatOn;
trigger gt_Rf;
trigger gt_Rf2;
trigger gt_Rf3;
trigger gt_Zerginit;
trigger gt_Fminer;
trigger gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003;
trigger gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001;
trigger gt_WaveStarter;
trigger gt_wave_left1;
trigger gt_wave_right1;
trigger gt_wave_front1;
trigger gt_wave_left2;
trigger gt_wave_right2;
trigger gt_wave_front2;
trigger gt_wave_left3;
trigger gt_wave_right3;
trigger gt_wave_front3;
trigger gt_wave_Boss_front4;
trigger gt_wave_left5;
trigger gt_wave_right5;
trigger gt_wave_front5;
trigger gt_wave_Boss_front6;
trigger gt_wave_LRF7;
trigger gt_wave_left7;
trigger gt_wave_right7;
trigger gt_wave_front7;
trigger gt_wave_left8;
trigger gt_wave_right8;
trigger gt_wave_front8;
trigger gt_wave_LRF9;
trigger gt_wave_left9;
trigger gt_wave_right9;
trigger gt_wave_front9;
trigger gt_wave_front10;
trigger gt_wave_front11;
trigger gt_Boss_dead;
trigger gt_Kraith_gen;
trigger gt_Kraith_Target_Search;
trigger gt_Kraith_Target_dead;
trigger gt_Kraith_Target_move;
trigger gt_Kraith_dead;
trigger gt_Kraith_Target_Run;
trigger gt_Brakk_gen;
trigger gt_Spotter_gen;
trigger gt_Spotter_Zerg_Drop;
trigger gt_Spotter_move;
trigger gt_Spotter_dead;
trigger gt_Spotter_targettingbyurun;
trigger gt_Omega_gen;
trigger gt_Omega_dead;
trigger gt_SP_Generator;
trigger gt_SP_Mutaliskgen;
trigger gt_SP_Mutaliskonlynexus;
trigger gt_SP_Overseergen;
trigger gt_SP_impalergen;
trigger gt_SP_impalerdie;
trigger gt_SP_Guardiangen;
trigger gt_SP_Hunterlinggen;
trigger gt_SP_ZerglingGlobalgen;
trigger gt_SP_NydusAttackergen;
trigger gt_SP_DropZerg;
trigger gt_SP_DropZerg2;
trigger gt_SP_BroodLordGen;
trigger gt_SP_HotSHuntergen;
trigger gt_UPGRADE1;
trigger gt_UPGRADE2;
trigger gt_UPGRADE3;
trigger gt_UPGRADE4;
trigger gt_UPGRADE5;
trigger gt_UPGRADE6;
trigger gt_UPGRADE7;
trigger gt_StartGameQ;
trigger gt_MainGateWayDestroyed;
trigger gt_Timerexpired;
trigger gt_Aiurlast;
trigger gt_mis;
trigger gt_mis3;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
trigger auto_gf_RunMissionEvent_Trigger = null;
trigger auto_gf_RunMissionEvent_lp_missionEventTrigger;
fixed auto_gf_RunMissionEvent_lp_missionEventTime;

void gf_RunMissionEvent (trigger lp_missionEventTrigger, fixed lp_missionEventTime) {
    auto_gf_RunMissionEvent_lp_missionEventTrigger = lp_missionEventTrigger;
    auto_gf_RunMissionEvent_lp_missionEventTime = lp_missionEventTime;

    if (auto_gf_RunMissionEvent_Trigger == null) {
        auto_gf_RunMissionEvent_Trigger = TriggerCreate("auto_gf_RunMissionEvent_TriggerFunc");
    }

    TriggerExecute(auto_gf_RunMissionEvent_Trigger, false, false);
}

bool auto_gf_RunMissionEvent_TriggerFunc (bool testConds, bool runActions) {
    trigger lp_missionEventTrigger = auto_gf_RunMissionEvent_lp_missionEventTrigger;
    fixed lp_missionEventTime = auto_gf_RunMissionEvent_lp_missionEventTime;

    // Implementation
    while (!((GameGetMissionTime() >= lp_missionEventTime))) {
        Wait(0.5, c_timeAI);
    }
    if ((libCOMI_gf_GameIsOver() == false)) {
        TriggerExecute(lp_missionEventTrigger, true, false);
    }

    return true;
}

unit gf_DropUnit (string lp_unitType, point lp_loc, int lp_player) {
    // Implementation
    libNtve_gf_UnitCreateFacingPoint(1, "HotSHunter", 0, gv_aiur, PointFromId(1489733719), RegionRandomPoint(RegionEntireMap()));
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1489733719));
    UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), lp_loc), c_orderQueueReplace);
    return UnitLastCreated();
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Load Data
//--------------------------------------------------------------------------------------------------
bool gt_Init01LoadData_Func (bool testConds, bool runActions) {
    playergroup auto0B258D10_g;
    int auto0B258D10_p;
    string auto834F8A5E_val;

    // Variable Declarations
    int lv_indexPlayer;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto0B258D10_g = libCOMI_gf_HumanPlayers();
    auto0B258D10_p = 1;
    for ( ; auto0B258D10_p <= PlayerGroupCount(auto0B258D10_g) ; auto0B258D10_p += BoolToInt(lv_indexPlayer == PlayerGroupPlayer(auto0B258D10_g, auto0B258D10_p)) ) {
        lv_indexPlayer = PlayerGroupPlayer(auto0B258D10_g, auto0B258D10_p);
        auto834F8A5E_val = GameAttributePlayerValue("[bnet:local/0.0/358167]1", lv_indexPlayer);
        if (auto834F8A5E_val == "0003") {
            PlayerSetCommander(lv_indexPlayer, "Artanis");
        }
        else if (auto834F8A5E_val == "0002") {
            PlayerSetCommander(lv_indexPlayer, "Kerrigan");
        }
        else if (auto834F8A5E_val == "0001") {
            PlayerSetCommander(lv_indexPlayer, "Raynor");
        }
        else {
            if ((lv_indexPlayer == 1)) {
                PlayerSetCommander(lv_indexPlayer, "Raynor");
            }
            else {
                PlayerSetCommander(lv_indexPlayer, "Artanis");
            }
        }
    }
    libCOMI_gf_EnableArcadeContestMode();
    TriggerExecute(gt_Init02Players, true, false);
    libCOMI_gf_LoadCoopMission("COOP_Placeholder", gt_Init03LoadingComplete);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01LoadData_Init () {
    gt_Init01LoadData = TriggerCreate("gt_Init01LoadData_Func");
    TriggerAddEventMapInit(gt_Init01LoadData);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Players
//--------------------------------------------------------------------------------------------------
bool gt_Init02Players_Func (bool testConds, bool runActions) {
    playergroup autoE0EF2853_g;
    int autoE0EF2853_p;
    playergroup autoB969537F_g;
    int autoB969537F_p;

    // Variable Declarations
    int lv_playerIterEnemy;
    int lv_playerIterAlly;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAlliance(1, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    libNtve_gf_SetAlliance(2, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    libNtve_gf_SetPlayerGroupAlliance(libCOMI_gf_HumanPlayers(), libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    PlayerGroupAdd(gv_enemyGroup, gv_pLAYER_03_ENEMY);
    PlayerGroupAdd(gv_enemyGroup, gv_pLAYER_04_ENEMY);
    libNtve_gf_SetPlayerGroupAlliance(gv_enemyGroup, libNtve_ge_AllianceSetting_AllyWithSharedVisionAndPushable);
    autoE0EF2853_g = gv_enemyGroup; 
    autoE0EF2853_p = 1;
    for ( ; autoE0EF2853_p <= PlayerGroupCount(autoE0EF2853_g) ; autoE0EF2853_p += BoolToInt(lv_playerIterEnemy == PlayerGroupPlayer(autoE0EF2853_g, autoE0EF2853_p)) ) {
        lv_playerIterEnemy = PlayerGroupPlayer(autoE0EF2853_g, autoE0EF2853_p);
        PlayerSetState(lv_playerIterEnemy, c_playerStateMineralCostIgnored, true);
        PlayerSetState(lv_playerIterEnemy, c_playerStateVespeneCostIgnored, true);
        PlayerSetState(lv_playerIterEnemy, c_playerStateFoodIgnored, true);
        PlayerSetColorIndex(lv_playerIterEnemy, libCOMI_gf_EnemyPlayerColor(), true);
        autoB969537F_g = libCOMI_gf_HumanPlayers();
        autoB969537F_p = 1;
        for ( ; autoB969537F_p <= PlayerGroupCount(autoB969537F_g) ; autoB969537F_p += BoolToInt(lv_playerIterAlly == PlayerGroupPlayer(autoB969537F_g, autoB969537F_p)) ) {
            lv_playerIterAlly = PlayerGroupPlayer(autoB969537F_g, autoB969537F_p);
            libNtve_gf_SetAlliance(lv_playerIterAlly, lv_playerIterEnemy, libNtve_ge_AllianceSetting_Enemy);
        }
    }
    PlayerSetAlliance(gv_pLAYER_03_ENEMY, c_allianceIdPower, gv_pLAYER_04_ENEMY, true);
    PlayerSetAlliance(gv_pLAYER_04_ENEMY, c_allianceIdPower, gv_pLAYER_03_ENEMY, true);
    libCOMI_gf_SetAlliedCommandersstartingResources();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Players_Init () {
    gt_Init02Players = TriggerCreate("gt_Init02Players_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Loading Complete
//--------------------------------------------------------------------------------------------------
bool gt_Init03LoadingComplete_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Init04Technology, true, false);
    libCOMI_gf_PurchaseStorymodeTech();
    TriggerExecute(gt_Init05Units, true, false);
    TriggerExecute(gt_Init06MusicSound, true, false);
    TriggerExecute(gt_Init07Environment, true, false);
    TriggerExecute(gt_Init08Difficulties, true, false);
    libCOMI_gf_PlayMapIntroZoom(true);
    TriggerExecute(gt_StartGameQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03LoadingComplete_Init () {
    gt_Init03LoadingComplete = TriggerCreate("gt_Init03LoadingComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Technology
//--------------------------------------------------------------------------------------------------
bool gt_Init04Technology_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_SetTechRestrictionsCallback(TriggerGetCurrent());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04Technology_Init () {
    gt_Init04Technology = TriggerCreate("gt_Init04Technology_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Units
//--------------------------------------------------------------------------------------------------
bool gt_Init05Units_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_SetWorkerRallyPointsPlayersNexuses(gv_pLAYER_01_USER);
    libCOMI_gf_SetWorkerRallyPointsPlayersNexuses(gv_pLAYER_02_USER);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05Units_Init () {
    gt_Init05Units = TriggerCreate("gt_Init05Units_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 06 Music/Sound
//--------------------------------------------------------------------------------------------------
bool gt_Init06MusicSound_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init06MusicSound_Init () {
    gt_Init06MusicSound = TriggerCreate("gt_Init06MusicSound_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 07 Environment
//--------------------------------------------------------------------------------------------------
bool gt_Init07Environment_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    GameTimeOfDaySet("08:00:00");
    VisExploreArea(gv_pLAYER_01_USER, RegionFromId(49), true, false);
    VisExploreArea(gv_pLAYER_02_USER, RegionFromId(49), true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init07Environment_Init () {
    gt_Init07Environment = TriggerCreate("gt_Init07Environment_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 08 Difficulties
//--------------------------------------------------------------------------------------------------
bool gt_Init08Difficulties_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_bonusObjectiveLife;
    fixed lv_mainObjectiveLife;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_01_USER) == 4)) {
    }

    if ((libCOMI_gf_DifficultyLevelForPlayerCoop(gv_pLAYER_02_USER) == 4)) {
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init08Difficulties_Init () {
    gt_Init08Difficulties = TriggerCreate("gt_Init08Difficulties_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Can't Fail
//--------------------------------------------------------------------------------------------------
bool gt_DebugCantFail_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryPublic) == true))) {
            return false;
        }

        if (!((libCOMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyFixed(gv_pLAYER_01_USER, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0.0);
    PlayerModifyPropertyFixed(gv_pLAYER_02_USER, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DebugCantFail_Init () {
    gt_DebugCantFail = TriggerCreate("gt_DebugCantFail_Func");
    TriggerAddEventChatMessage(gt_DebugCantFail, c_playerAny, "cantfail", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create creepTumor
//--------------------------------------------------------------------------------------------------
bool gt_CreatecreepTumor_Func (bool testConds, bool runActions) {
    int auto84C00AB6_ae;
    int auto84C00AB6_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto84C00AB6_ae = 4;
    auto84C00AB6_ai = 1;
    lv_intA = 0;
    for ( ; ( (auto84C00AB6_ai >= 0 && lv_intA <= auto84C00AB6_ae) || (auto84C00AB6_ai <= 0 && lv_intA >= auto84C00AB6_ae) ) ; lv_intA += auto84C00AB6_ai ) {
        gv_tumorLocation_Array[lv_intA] = PointWithOffsetPolar(UnitGetPosition(gv_tumorQueen_Array[lv_intA]), 8.5, 224.0);
        UnitIssueOrder(gv_tumorQueen_Array[lv_intA], OrderTargetingPoint(AbilityCommand("QueenBuild", 0), gv_tumorLocation_Array[lv_intA]), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreatecreepTumor_Init () {
    gt_CreatecreepTumor = TriggerCreate("gt_CreatecreepTumor_Func");
    TriggerAddEventTimePeriodic(gt_CreatecreepTumor, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create TumorQueen
//--------------------------------------------------------------------------------------------------
bool gt_CreateTumorQueen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_creeptumor_Queen_Group;
    int lv_intA;

    // Variable Initialization
    lv_creeptumor_Queen_Group = UnitGroup("QueenCoop", gv_pLAYER_03_ENEMY, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(lv_creeptumor_Queen_Group);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        gv_tumorQueen_Array[lv_intA] = UnitGroupLoopCurrent();
        gv_tumorLocation_Array[lv_intA] = UnitGetPosition(UnitGroupLoopCurrent());
        lv_intA = (lv_intA + 1);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateTumorQueen_Init () {
    gt_CreateTumorQueen = TriggerCreate("gt_CreateTumorQueen_Func");
    TriggerAddEventMapInit(gt_CreateTumorQueen);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 1
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "VoidZealotShadowCharge", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "VoidZealotWhirlwind", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossAirWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "HiddenProtossAirWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundWeaponsLevel1", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE1_Init () {
    gt_AiurUPGRADE1 = TriggerCreate("gt_AiurUPGRADE1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 2
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossShieldsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundArmorsLevel1", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE2_Init () {
    gt_AiurUPGRADE2 = TriggerCreate("gt_AiurUPGRADE2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 3
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "HiddenProtossAirWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossAirWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundWeaponsLevel2", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE3_Init () {
    gt_AiurUPGRADE3 = TriggerCreate("gt_AiurUPGRADE3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 4
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossShieldsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundArmorsLevel2", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE4_Init () {
    gt_AiurUPGRADE4 = TriggerCreate("gt_AiurUPGRADE4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 5
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossAirWeaponsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "HiddenProtossAirWeaponsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundWeaponsLevel3", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE5_Init () {
    gt_AiurUPGRADE5 = TriggerCreate("gt_AiurUPGRADE5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur UPGRADE 6
//--------------------------------------------------------------------------------------------------
bool gt_AiurUPGRADE6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossShieldsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_aiur, "ProtossGroundArmorsLevel3", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AiurUPGRADE6_Init () {
    gt_AiurUPGRADE6 = TriggerCreate("gt_AiurUPGRADE6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_left 1
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_left1_Func (bool testConds, bool runActions) {
    int auto271B056C_ae;
    int auto271B056C_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1463419626)) == true) && (UnitIsAlive(UnitFromId(743881928)) == true)) {
        lv_loc = PointFromId(1612437240);
    }
    else {
        lv_loc = PointFromId(1149927830);
    }
    auto271B056C_ae = 10;
    auto271B056C_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto271B056C_ai >= 0 && lv_intA <= auto271B056C_ae) || (auto271B056C_ai <= 0 && lv_intA >= auto271B056C_ae) ) ; lv_intA += auto271B056C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_left1_Init () {
    gt_Reinf_left1 = TriggerCreate("gt_Reinf_left1_Func");
    TriggerEnable(gt_Reinf_left1, false);
    TriggerAddEventTimeElapsed(gt_Reinf_left1, (360 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_right 1
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_right1_Func (bool testConds, bool runActions) {
    int auto331A66D3_ae;
    int auto331A66D3_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1399493320)) == true) && (UnitIsAlive(UnitFromId(1037642355)) == true)) {
        lv_loc = PointFromId(884139750);
    }
    else {
        lv_loc = PointFromId(898379520);
    }
    auto331A66D3_ae = 10;
    auto331A66D3_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto331A66D3_ai >= 0 && lv_intA <= auto331A66D3_ae) || (auto331A66D3_ai <= 0 && lv_intA >= auto331A66D3_ae) ) ; lv_intA += auto331A66D3_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_right1_Init () {
    gt_Reinf_right1 = TriggerCreate("gt_Reinf_right1_Func");
    TriggerEnable(gt_Reinf_right1, false);
    TriggerAddEventTimeElapsed(gt_Reinf_right1, (360 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 1
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front1_Func (bool testConds, bool runActions) {
    int auto1AE19E9B_ae;
    int auto1AE19E9B_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    auto1AE19E9B_ae = 10;
    auto1AE19E9B_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto1AE19E9B_ai >= 0 && lv_intA <= auto1AE19E9B_ae) || (auto1AE19E9B_ai <= 0 && lv_intA >= auto1AE19E9B_ae) ) ; lv_intA += auto1AE19E9B_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front1_Init () {
    gt_Reinf_front1 = TriggerCreate("gt_Reinf_front1_Func");
    TriggerEnable(gt_Reinf_front1, false);
    TriggerAddEventTimeElapsed(gt_Reinf_front1, (360 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_left 2
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_left2_Func (bool testConds, bool runActions) {
    int auto9E2DF276_ae;
    int auto9E2DF276_ai;
    int auto4B408D28_ae;
    int auto4B408D28_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1463419626)) == true) && (UnitIsAlive(UnitFromId(743881928)) == true)) {
        lv_loc = PointFromId(1612437240);
    }
    else {
        lv_loc = PointFromId(1149927830);
    }
    auto9E2DF276_ae = 3;
    auto9E2DF276_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto9E2DF276_ai >= 0 && lv_intA <= auto9E2DF276_ae) || (auto9E2DF276_ai <= 0 && lv_intA >= auto9E2DF276_ae) ) ; lv_intA += auto9E2DF276_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto4B408D28_ae = 5;
    auto4B408D28_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto4B408D28_ai >= 0 && lv_intA <= auto4B408D28_ae) || (auto4B408D28_ai <= 0 && lv_intA >= auto4B408D28_ae) ) ; lv_intA += auto4B408D28_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_left2_Init () {
    gt_Reinf_left2 = TriggerCreate("gt_Reinf_left2_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_left2, (440 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_right 2
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_right2_Func (bool testConds, bool runActions) {
    int auto814FD473_ae;
    int auto814FD473_ai;
    int auto2EFF60D8_ae;
    int auto2EFF60D8_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1399493320)) == true) && (UnitIsAlive(UnitFromId(1037642355)) == true)) {
        lv_loc = PointFromId(884139750);
    }
    else {
        lv_loc = PointFromId(898379520);
    }
    auto814FD473_ae = 3;
    auto814FD473_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto814FD473_ai >= 0 && lv_intA <= auto814FD473_ae) || (auto814FD473_ai <= 0 && lv_intA >= auto814FD473_ae) ) ; lv_intA += auto814FD473_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto2EFF60D8_ae = 5;
    auto2EFF60D8_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2EFF60D8_ai >= 0 && lv_intA <= auto2EFF60D8_ae) || (auto2EFF60D8_ai <= 0 && lv_intA >= auto2EFF60D8_ae) ) ; lv_intA += auto2EFF60D8_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_right2_Init () {
    gt_Reinf_right2 = TriggerCreate("gt_Reinf_right2_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_right2, (440 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 2
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front2_Func (bool testConds, bool runActions) {
    int autoA6414A06_ae;
    int autoA6414A06_ai;
    int auto2A7EA674_ae;
    int auto2A7EA674_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    autoA6414A06_ae = 4;
    autoA6414A06_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA6414A06_ai >= 0 && lv_intA <= autoA6414A06_ae) || (autoA6414A06_ai <= 0 && lv_intA >= autoA6414A06_ae) ) ; lv_intA += autoA6414A06_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto2A7EA674_ae = 5;
    auto2A7EA674_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2A7EA674_ai >= 0 && lv_intA <= auto2A7EA674_ae) || (auto2A7EA674_ai <= 0 && lv_intA >= auto2A7EA674_ae) ) ; lv_intA += auto2A7EA674_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front2_Init () {
    gt_Reinf_front2 = TriggerCreate("gt_Reinf_front2_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_front2, (440 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 3 boss 1
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front3boss1_Func (bool testConds, bool runActions) {
    int auto5B734EAF_ae;
    int auto5B734EAF_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    auto5B734EAF_ae = 7;
    auto5B734EAF_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto5B734EAF_ai >= 0 && lv_intA <= auto5B734EAF_ae) || (auto5B734EAF_ai <= 0 && lv_intA >= auto5B734EAF_ae) ) ; lv_intA += auto5B734EAF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "VoidRay", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Mohandar", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "MohandarPortrait", StringExternal("Param/Value/5D57FF0D"), StringExternal("Param/Value/D3938433"), 5.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/AD172536"), StringExternal("Param/Value/08C9A7DB"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front3boss1_Init () {
    gt_Reinf_front3boss1 = TriggerCreate("gt_Reinf_front3boss1_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_front3boss1, (650 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_left 4
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_left4_Func (bool testConds, bool runActions) {
    int autoB42CC009_ae;
    int autoB42CC009_ai;
    int auto8124B7C9_ae;
    int auto8124B7C9_ai;
    int auto2AAA2F0A_ae;
    int auto2AAA2F0A_ai;
    int autoB6408045_ae;
    int autoB6408045_ai;
    int auto852B0D46_ae;
    int auto852B0D46_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1463419626)) == true) && (UnitIsAlive(UnitFromId(743881928)) == true)) {
        lv_loc = PointFromId(1612437240);
    }
    else {
        lv_loc = PointFromId(1149927830);
    }
    autoB42CC009_ae = 3;
    autoB42CC009_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB42CC009_ai >= 0 && lv_intA <= autoB42CC009_ae) || (autoB42CC009_ai <= 0 && lv_intA >= autoB42CC009_ae) ) ; lv_intA += autoB42CC009_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto8124B7C9_ae = 2;
    auto8124B7C9_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto8124B7C9_ai >= 0 && lv_intA <= auto8124B7C9_ae) || (auto8124B7C9_ai <= 0 && lv_intA >= auto8124B7C9_ae) ) ; lv_intA += auto8124B7C9_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Colossus", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto2AAA2F0A_ae = 3;
    auto2AAA2F0A_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2AAA2F0A_ai >= 0 && lv_intA <= auto2AAA2F0A_ae) || (auto2AAA2F0A_ai <= 0 && lv_intA >= auto2AAA2F0A_ae) ) ; lv_intA += auto2AAA2F0A_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoB6408045_ae = 4;
    autoB6408045_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB6408045_ai >= 0 && lv_intA <= autoB6408045_ae) || (autoB6408045_ai <= 0 && lv_intA >= autoB6408045_ae) ) ; lv_intA += autoB6408045_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto852B0D46_ae = 3;
    auto852B0D46_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto852B0D46_ai >= 0 && lv_intA <= auto852B0D46_ae) || (auto852B0D46_ai <= 0 && lv_intA >= auto852B0D46_ae) ) ; lv_intA += auto852B0D46_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_left4_Init () {
    gt_Reinf_left4 = TriggerCreate("gt_Reinf_left4_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_left4, (900 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_right 4
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_right4_Func (bool testConds, bool runActions) {
    int autoE32AAAFF_ae;
    int autoE32AAAFF_ai;
    int autoE47E1404_ae;
    int autoE47E1404_ai;
    int auto7A8FCCE1_ae;
    int auto7A8FCCE1_ai;
    int auto773DC9EF_ae;
    int auto773DC9EF_ai;
    int auto822696FF_ae;
    int auto822696FF_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1399493320)) == true) && (UnitIsAlive(UnitFromId(1037642355)) == true)) {
        lv_loc = PointFromId(884139750);
    }
    else {
        lv_loc = PointFromId(898379520);
    }
    autoE32AAAFF_ae = 3;
    autoE32AAAFF_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE32AAAFF_ai >= 0 && lv_intA <= autoE32AAAFF_ae) || (autoE32AAAFF_ai <= 0 && lv_intA >= autoE32AAAFF_ae) ) ; lv_intA += autoE32AAAFF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoE47E1404_ae = 2;
    autoE47E1404_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE47E1404_ai >= 0 && lv_intA <= autoE47E1404_ae) || (autoE47E1404_ai <= 0 && lv_intA >= autoE47E1404_ae) ) ; lv_intA += autoE47E1404_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Colossus", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto7A8FCCE1_ae = 3;
    auto7A8FCCE1_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto7A8FCCE1_ai >= 0 && lv_intA <= auto7A8FCCE1_ae) || (auto7A8FCCE1_ai <= 0 && lv_intA >= auto7A8FCCE1_ae) ) ; lv_intA += auto7A8FCCE1_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto773DC9EF_ae = 4;
    auto773DC9EF_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto773DC9EF_ai >= 0 && lv_intA <= auto773DC9EF_ae) || (auto773DC9EF_ai <= 0 && lv_intA >= auto773DC9EF_ae) ) ; lv_intA += auto773DC9EF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto822696FF_ae = 3;
    auto822696FF_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto822696FF_ai >= 0 && lv_intA <= auto822696FF_ae) || (auto822696FF_ai <= 0 && lv_intA >= auto822696FF_ae) ) ; lv_intA += auto822696FF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_right4_Init () {
    gt_Reinf_right4 = TriggerCreate("gt_Reinf_right4_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_right4, (900 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 4
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front4_Func (bool testConds, bool runActions) {
    int autoCD8B0C8D_ae;
    int autoCD8B0C8D_ai;
    int auto65ACDCBC_ae;
    int auto65ACDCBC_ai;
    int autoF179994B_ae;
    int autoF179994B_ai;
    int auto7643ECC4_ae;
    int auto7643ECC4_ai;
    int auto9E188D06_ae;
    int auto9E188D06_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    autoCD8B0C8D_ae = 4;
    autoCD8B0C8D_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoCD8B0C8D_ai >= 0 && lv_intA <= autoCD8B0C8D_ae) || (autoCD8B0C8D_ai <= 0 && lv_intA >= autoCD8B0C8D_ae) ) ; lv_intA += autoCD8B0C8D_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto65ACDCBC_ae = 2;
    auto65ACDCBC_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto65ACDCBC_ai >= 0 && lv_intA <= auto65ACDCBC_ae) || (auto65ACDCBC_ai <= 0 && lv_intA >= auto65ACDCBC_ae) ) ; lv_intA += auto65ACDCBC_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Colossus", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoF179994B_ae = 4;
    autoF179994B_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoF179994B_ai >= 0 && lv_intA <= autoF179994B_ae) || (autoF179994B_ai <= 0 && lv_intA >= autoF179994B_ae) ) ; lv_intA += autoF179994B_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto7643ECC4_ae = 4;
    auto7643ECC4_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto7643ECC4_ai >= 0 && lv_intA <= auto7643ECC4_ae) || (auto7643ECC4_ai <= 0 && lv_intA >= auto7643ECC4_ae) ) ; lv_intA += auto7643ECC4_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Phoenix", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto9E188D06_ae = 3;
    auto9E188D06_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto9E188D06_ai >= 0 && lv_intA <= auto9E188D06_ae) || (auto9E188D06_ai <= 0 && lv_intA >= auto9E188D06_ae) ) ; lv_intA += auto9E188D06_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front4_Init () {
    gt_Reinf_front4 = TriggerCreate("gt_Reinf_front4_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_front4, (900 + RandomInt(-20, 20)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 5 boss 2
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front5boss2_Func (bool testConds, bool runActions) {
    int autoB14AD16A_ae;
    int autoB14AD16A_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    autoB14AD16A_ae = 6;
    autoB14AD16A_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB14AD16A_ai >= 0 && lv_intA <= autoB14AD16A_ae) || (autoB14AD16A_ai <= 0 && lv_intA >= autoB14AD16A_ae) ) ; lv_intA += autoB14AD16A_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Phoenix", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Urun", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupAddUnitGroup(gv_squad_Urun, lv_attackForce);
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "UrunPortrait", StringExternal("Param/Value/F7A1047F"), StringExternal("Param/Value/2E6302D5"), 5.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/A321EB05"), StringExternal("Param/Value/799D4D26"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front5boss2_Init () {
    gt_Reinf_front5boss2 = TriggerCreate("gt_Reinf_front5boss2_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_front5boss2, (1180 + RandomInt(0, 0)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UrunSquad_Patrol
//--------------------------------------------------------------------------------------------------
bool gt_UrunSquad_Patrol_Func (bool testConds, bool runActions) {
    unitgroup auto2DAD8BB8_g;
    int auto2DAD8BB8_u;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;
    unit lv_u;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "Mutalisk") || (UnitGetType(EventUnit()) == "GuardianMP") || (UnitGetType(EventUnit()) == "BroodLord")))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ENEMY))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    auto2DAD8BB8_g = gv_squad_Urun;
    auto2DAD8BB8_u = 1;
    for ( ; auto2DAD8BB8_u <= UnitGroupCount(auto2DAD8BB8_g, c_unitCountAll) ; auto2DAD8BB8_u += BoolToInt(lv_u == UnitGroupUnit(auto2DAD8BB8_g, auto2DAD8BB8_u)) ) {
        lv_u = UnitGroupUnit(auto2DAD8BB8_g, auto2DAD8BB8_u);
        UnitIssueOrder(lv_u, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
        UnitIssueOrder(lv_u, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueAddToEnd);
    }
    TriggerEnable(gt_UrunSquad_Patrol, false);
    Wait(20.0, c_timeGame);
    TriggerEnable(gt_UrunSquad_Patrol, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UrunSquad_Patrol_Init () {
    gt_UrunSquad_Patrol = TriggerCreate("gt_UrunSquad_Patrol_Func");
    TriggerEnable(gt_UrunSquad_Patrol, false);
    TriggerAddEventUnitRegion(gt_UrunSquad_Patrol, null, RegionFromId(2), true);
    TriggerAddEventUnitRegion(gt_UrunSquad_Patrol, null, RegionFromId(5), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_left 6
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_left6_Func (bool testConds, bool runActions) {
    int auto11FCF8F1_ae;
    int auto11FCF8F1_ai;
    int autoF7EA9540_ae;
    int autoF7EA9540_ai;
    int auto7150B338_ae;
    int auto7150B338_ai;
    int auto7F5EA49D_ae;
    int auto7F5EA49D_ai;
    int autoE82D09D9_ae;
    int autoE82D09D9_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1463419626)) == true) && (UnitIsAlive(UnitFromId(743881928)) == true)) {
        lv_loc = PointFromId(1612437240);
    }
    else {
        lv_loc = PointFromId(1149927830);
    }
    auto11FCF8F1_ae = 4;
    auto11FCF8F1_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto11FCF8F1_ai >= 0 && lv_intA <= auto11FCF8F1_ae) || (auto11FCF8F1_ai <= 0 && lv_intA >= auto11FCF8F1_ae) ) ; lv_intA += auto11FCF8F1_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Reaver", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoF7EA9540_ae = 6;
    autoF7EA9540_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoF7EA9540_ai >= 0 && lv_intA <= autoF7EA9540_ae) || (autoF7EA9540_ai <= 0 && lv_intA >= autoF7EA9540_ae) ) ; lv_intA += autoF7EA9540_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto7150B338_ae = 3;
    auto7150B338_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto7150B338_ai >= 0 && lv_intA <= auto7150B338_ae) || (auto7150B338_ai <= 0 && lv_intA >= auto7150B338_ae) ) ; lv_intA += auto7150B338_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto7F5EA49D_ae = 4;
    auto7F5EA49D_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto7F5EA49D_ai >= 0 && lv_intA <= auto7F5EA49D_ae) || (auto7F5EA49D_ai <= 0 && lv_intA >= auto7F5EA49D_ae) ) ; lv_intA += auto7F5EA49D_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoE82D09D9_ae = 3;
    autoE82D09D9_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE82D09D9_ai >= 0 && lv_intA <= autoE82D09D9_ae) || (autoE82D09D9_ai <= 0 && lv_intA >= autoE82D09D9_ae) ) ; lv_intA += autoE82D09D9_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_left6_Init () {
    gt_Reinf_left6 = TriggerCreate("gt_Reinf_left6_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_left6, (1260 + RandomInt(0, 0)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_right 6
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_right6_Func (bool testConds, bool runActions) {
    int auto2E633AE8_ae;
    int auto2E633AE8_ai;
    int autoECC8C6AD_ae;
    int autoECC8C6AD_ai;
    int autoD640A25D_ae;
    int autoD640A25D_ai;
    int auto4C1EC80E_ae;
    int auto4C1EC80E_ai;
    int auto8B53313F_ae;
    int auto8B53313F_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1399493320)) == true) && (UnitIsAlive(UnitFromId(1037642355)) == true)) {
        lv_loc = PointFromId(884139750);
    }
    else {
        lv_loc = PointFromId(898379520);
    }
    auto2E633AE8_ae = 4;
    auto2E633AE8_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2E633AE8_ai >= 0 && lv_intA <= auto2E633AE8_ae) || (auto2E633AE8_ai <= 0 && lv_intA >= auto2E633AE8_ae) ) ; lv_intA += auto2E633AE8_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Reaver", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoECC8C6AD_ae = 6;
    autoECC8C6AD_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoECC8C6AD_ai >= 0 && lv_intA <= autoECC8C6AD_ae) || (autoECC8C6AD_ai <= 0 && lv_intA >= autoECC8C6AD_ae) ) ; lv_intA += autoECC8C6AD_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoD640A25D_ae = 3;
    autoD640A25D_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoD640A25D_ai >= 0 && lv_intA <= autoD640A25D_ae) || (autoD640A25D_ai <= 0 && lv_intA >= autoD640A25D_ae) ) ; lv_intA += autoD640A25D_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto4C1EC80E_ae = 4;
    auto4C1EC80E_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto4C1EC80E_ai >= 0 && lv_intA <= auto4C1EC80E_ae) || (auto4C1EC80E_ai <= 0 && lv_intA >= auto4C1EC80E_ae) ) ; lv_intA += auto4C1EC80E_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto8B53313F_ae = 3;
    auto8B53313F_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto8B53313F_ai >= 0 && lv_intA <= auto8B53313F_ae) || (auto8B53313F_ai <= 0 && lv_intA >= auto8B53313F_ae) ) ; lv_intA += auto8B53313F_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_right6_Init () {
    gt_Reinf_right6 = TriggerCreate("gt_Reinf_right6_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_right6, (1270 + RandomInt(0, 0)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front 6
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_front6_Func (bool testConds, bool runActions) {
    int autoCE402C2E_ae;
    int autoCE402C2E_ai;
    int autoB1BA8248_ae;
    int autoB1BA8248_ai;
    int auto392A6A39_ae;
    int auto392A6A39_ai;
    int auto606756CA_ae;
    int auto606756CA_ai;
    int autoD3ABDE5C_ae;
    int autoD3ABDE5C_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    autoCE402C2E_ae = 4;
    autoCE402C2E_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoCE402C2E_ai >= 0 && lv_intA <= autoCE402C2E_ae) || (autoCE402C2E_ai <= 0 && lv_intA >= autoCE402C2E_ae) ) ; lv_intA += autoCE402C2E_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Reaver", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoB1BA8248_ae = 6;
    autoB1BA8248_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB1BA8248_ai >= 0 && lv_intA <= autoB1BA8248_ae) || (autoB1BA8248_ai <= 0 && lv_intA >= autoB1BA8248_ae) ) ; lv_intA += autoB1BA8248_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "ImmortalAiur", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto392A6A39_ae = 3;
    auto392A6A39_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto392A6A39_ai >= 0 && lv_intA <= auto392A6A39_ae) || (auto392A6A39_ai <= 0 && lv_intA >= auto392A6A39_ae) ) ; lv_intA += auto392A6A39_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Stalker", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    auto606756CA_ae = 4;
    auto606756CA_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto606756CA_ai >= 0 && lv_intA <= auto606756CA_ae) || (auto606756CA_ai <= 0 && lv_intA >= auto606756CA_ae) ) ; lv_intA += auto606756CA_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zealot", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoD3ABDE5C_ae = 3;
    autoD3ABDE5C_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoD3ABDE5C_ai >= 0 && lv_intA <= autoD3ABDE5C_ae) || (autoD3ABDE5C_ai <= 0 && lv_intA >= autoD3ABDE5C_ae) ) ; lv_intA += autoD3ABDE5C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "SentryACGluescreenDummy", 0, gv_aiur, PointFromId(1489733719), PointFromId(348303689));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_front6_Init () {
    gt_Reinf_front6 = TriggerCreate("gt_Reinf_front6_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_front6, (1250 + RandomInt(0, 0)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinf_front last boss
//--------------------------------------------------------------------------------------------------
bool gt_Reinf_frontlastboss_Func (bool testConds, bool runActions) {
    int auto309DD9A5_ae;
    int auto309DD9A5_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;
    point lv_loc;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    auto309DD9A5_ae = 16;
    auto309DD9A5_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto309DD9A5_ai >= 0 && lv_intA <= auto309DD9A5_ae) || (auto309DD9A5_ai <= 0 && lv_intA >= auto309DD9A5_ae) ) ; lv_intA += auto309DD9A5_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "DarkTemplar", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "ZeratulVoidAiur01", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, PointFromId(1489733719));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ZeratulPortrait", StringExternal("Param/Value/2713452C"), StringExternal("Param/Value/44D33775"), 5.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/5D2938DB"), StringExternal("Param/Value/063EF542"), 4.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ZeratulPortrait", StringExternal("Param/Value/C0511CA6"), StringExternal("Param/Value/94FC3C28"), 3.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerExecute(gt_TemplarGen, true, false);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "HighTemplarPortrait", StringExternal("Param/Value/E6F6552E"), StringExternal("Param/Value/250177D2"), 5.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reinf_frontlastboss_Init () {
    gt_Reinf_frontlastboss = TriggerCreate("gt_Reinf_frontlastboss_Func");
    TriggerAddEventTimeElapsed(gt_Reinf_frontlastboss, (1390 + RandomInt(0, 0)), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Templar Gen
//--------------------------------------------------------------------------------------------------
bool gt_TemplarGen_Func (bool testConds, bool runActions) {
    int autoB3B3F7FB_ae;
    int autoB3B3F7FB_ai;
    unitgroup autoCE8D2905_g;
    int autoCE8D2905_u;
    unitgroup auto7FC59E06_g;
    int auto7FC59E06_u;

    // Variable Declarations
    int lv_intA;
    unitgroup lv_group;
    unit lv_u;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    gv_archonMergeLoc[1] = PointFromId(1662835249);
    gv_archonMergeLoc[2] = PointFromId(1728851977);
    gv_archonMergeLoc[3] = PointFromId(93378261);
    gv_archonMergeLoc[4] = PointFromId(953057228);
    gv_archonMergeLoc[5] = PointFromId(1214171203);
    gv_archonMergeLoc[6] = PointFromId(123340550);
    libNtve_gf_UnitCreateFacingPoint(6, "HighArchonTemplar", 0, gv_aiur, PointFromId(1489733719), PointFromId(1489733719));
    lv_group = UnitLastCreatedGroup();
    libCOMI_gf_DropPodWarpInUnitGroup(lv_group, PointFromId(1489733719));
    autoB3B3F7FB_ae = 6;
    autoB3B3F7FB_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB3B3F7FB_ai >= 0 && lv_intA <= autoB3B3F7FB_ae) || (autoB3B3F7FB_ai <= 0 && lv_intA >= autoB3B3F7FB_ae) ) ; lv_intA += autoB3B3F7FB_ai ) {
        lv_u = UnitGroupRandomUnit(lv_group, c_unitCountAlive);
        UnitGroupRemove(lv_group, lv_u);
        UnitIssueOrder(lv_u, OrderTargetingPoint(AbilityCommand("move", 0), gv_archonMergeLoc[lv_intA]), c_orderQueueReplace);
        UnitIssueOrder(lv_u, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    }
    lv_group = UnitLastCreatedGroup();
    Wait(13.0, c_timeGame);
    MinimapPing(PlayerGroupAll(), PointFromId(1663552860), 5.0, Color(97.65, 100.00, 0.00));
    autoCE8D2905_g = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition("HighArchonTemplar", "", "", c_playerAny, -1, RegionFromId(8), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCE8D2905_u = 1;
    for ( ; autoCE8D2905_u <= UnitGroupCount(autoCE8D2905_g, c_unitCountAll) ; autoCE8D2905_u += BoolToInt(lv_u == UnitGroupUnit(autoCE8D2905_g, autoCE8D2905_u)) ) {
        lv_u = UnitGroupUnit(autoCE8D2905_g, autoCE8D2905_u);
        libNtve_gf_MakeUnitFacePoint(lv_u, PointFromId(1663552860), 1.0);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_u), c_animNameDefault, "Stand Channel", c_animFlagPlayForever, c_animTimeDefault);
    }
    libNtve_gf_ShowHideUnit(gv_circle[1], true);
    libNtve_gf_ShowHideUnit(gv_circle[2], true);
    libNtve_gf_UnitCreateFacingPoint(1, "HyperArchon", 0, gv_aiur, PointFromId(1663552860), PointFromId(1489733719));
    gv_archon = UnitLastCreated();
    UnitIssueOrder(gv_archon, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_archon), c_animNameDefault, "Work", c_animFlagPlayForever, c_animTimeDefault);
    TriggerEnable(gt_ArchonGenerate, true);
    UnitSetState(gv_archon, c_unitStateInvulnerable, true);
    UnitSetState(gv_archon, c_unitStateStunned, true);
    TriggerEnable(gt_Templardie, true);
    Wait(60.0, c_timeGame);
    libNtve_gf_ShowHideUnit(gv_circle[1], false);
    libNtve_gf_ShowHideUnit(gv_circle[2], false);
    TriggerEnable(gt_Templardie, false);
    TriggerEnable(gt_ArchonGenerate, false);
    UnitSetState(gv_archon, c_unitStateInvulnerable, false);
    UnitSetState(gv_archon, c_unitStateStunned, false);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArchonPortrait", StringExternal("Param/Value/9871814E"), StringExternal("Param/Value/88A27D2C"), 4.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_archon), c_animNameDefault, "Stand Default End", c_animFlagPlayForever, c_animTimeDefault);
    auto7FC59E06_g = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition("HighArchonTemplar", "", "", c_playerAny, -1, RegionFromId(8), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7FC59E06_u = 1;
    for ( ; auto7FC59E06_u <= UnitGroupCount(auto7FC59E06_g, c_unitCountAll) ; auto7FC59E06_u += BoolToInt(lv_u == UnitGroupUnit(auto7FC59E06_g, auto7FC59E06_u)) ) {
        lv_u = UnitGroupUnit(auto7FC59E06_g, auto7FC59E06_u);
        UnitKill(lv_u);
    }
    UnitIssueOrder(gv_archon, OrderTargetingUnit(AbilityCommand("attack", 0), gv_boss_Omega), c_orderQueueReplace);
    UnitIssueOrder(gv_archon, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2062624615)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TemplarGen_Init () {
    gt_TemplarGen = TriggerCreate("gt_TemplarGen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Templar die
//--------------------------------------------------------------------------------------------------
bool gt_Templardie_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "HighArchonTemplar"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_templars = (gv_templars - 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Templardie_Init () {
    gt_Templardie = TriggerCreate("gt_Templardie_Func");
    TriggerEnable(gt_Templardie, false);
    TriggerAddEventUnitDied(gt_Templardie, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Archon Generate
//--------------------------------------------------------------------------------------------------
bool gt_ArchonGenerate_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_archon_Energe = (gv_archon_Energe + (gv_templars * 30));
    gv_shieldRate = UnitGetPropertyFixed(gv_archon, c_unitPropShieldsPercent, c_unitPropCurrent);
    UnitSetPropertyFixed(gv_archon, c_unitPropShields, gv_archon_Energe);
    UnitSetScale(gv_archon, (100.0 + (gv_shieldRate * 2.0)), (100.0 + (gv_shieldRate * 2.0)), (100.0 + (gv_shieldRate * 2.0)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArchonGenerate_Init () {
    gt_ArchonGenerate = TriggerCreate("gt_ArchonGenerate_Func");
    TriggerEnable(gt_ArchonGenerate, false);
    TriggerAddEventTimePeriodic(gt_ArchonGenerate, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinforcement Tank
//--------------------------------------------------------------------------------------------------
bool gt_ReinforcementTank_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_roll;

    // Variable Initialization
    lv_roll = RandomInt(0, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_roll == 0)) {
        libNtve_gf_UnitCreateFacingPoint(9, "Zealot", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
    }
    else {
        if ((lv_roll == 1)) {
            libNtve_gf_UnitCreateFacingPoint(4, "ImmortalAiur", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
        }
        else {
            if ((lv_roll == 2)) {
                libNtve_gf_UnitCreateFacingPoint(3, "Archon", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
            }
            else {
                if ((lv_roll == 3)) {
                    libNtve_gf_UnitCreateFacingPoint(9, "Zealot", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
                }

            }
        }
    }
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), EventUnitTargetPoint());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReinforcementTank_Init () {
    gt_ReinforcementTank = TriggerCreate("gt_ReinforcementTank_Func");
    TriggerAddEventUnitAbility(gt_ReinforcementTank, null, AbilityCommand("reinf_small_melee", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinforcement Ranged
//--------------------------------------------------------------------------------------------------
bool gt_ReinforcementRanged_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_roll;

    // Variable Initialization
    lv_roll = RandomInt(0, 4);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_roll == 0)) {
        libNtve_gf_UnitCreateFacingPoint(5, "Stalker", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
    }
    else {
        if ((lv_roll == 1)) {
            libNtve_gf_UnitCreateFacingPoint(2, "Colossus", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
        }
        else {
            if ((lv_roll == 2)) {
                libNtve_gf_UnitCreateFacingPoint(3, "Reaver", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
            }
            else {
                if ((lv_roll == 3)) {
                    libNtve_gf_UnitCreateFacingPoint(5, "Stalker", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
                }

            }
        }
    }
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), EventUnitTargetPoint());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReinforcementRanged_Init () {
    gt_ReinforcementRanged = TriggerCreate("gt_ReinforcementRanged_Func");
    TriggerAddEventUnitAbility(gt_ReinforcementRanged, null, AbilityCommand("reinf_small_melee2", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reinforcement Air
//--------------------------------------------------------------------------------------------------
bool gt_ReinforcementAir_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_roll;

    // Variable Initialization
    lv_roll = RandomInt(0, 4);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_roll == 0)) {
        libNtve_gf_UnitCreateFacingPoint(4, "Phoenix", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
    }
    else {
        if ((lv_roll == 1)) {
            libNtve_gf_UnitCreateFacingPoint(2, "Carrier", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
        }
        else {
            if ((lv_roll == 2)) {
                libNtve_gf_UnitCreateFacingPoint(2, "Tempest", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
            }
            else {
                if ((lv_roll == 3)) {
                    libNtve_gf_UnitCreateFacingPoint(3, "Scout", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
                }
                else {
                    if ((lv_roll == 4)) {
                        libNtve_gf_UnitCreateFacingPoint(3, "Scout", 0, gv_aiur, EventUnitTargetPoint(), RegionRandomPoint(RegionPlayableMap()));
                    }

                }
            }
        }
    }
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), EventUnitTargetPoint());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReinforcementAir_Init () {
    gt_ReinforcementAir = TriggerCreate("gt_ReinforcementAir_Func");
    TriggerAddEventUnitAbility(gt_ReinforcementAir, null, AbilityCommand("reinf_small_melee22", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Main gate destruction
//--------------------------------------------------------------------------------------------------
bool gt_Maingatedestruction_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(124398178));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Maingatedestruction_Init () {
    gt_Maingatedestruction = TriggerCreate("gt_Maingatedestruction_Func");
    TriggerAddEventUnitDied(gt_Maingatedestruction, UnitRefFromUnit(UnitFromId(1411453183)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: COOP ATTACK
//--------------------------------------------------------------------------------------------------
bool gt_COOPATTACK_Func (bool testConds, bool runActions) {
    unitgroup auto5D9BF859_g;
    int auto5D9BF859_u;
    unitgroup auto79FD7D4B_g;
    int auto79FD7D4B_u;
    unitgroup autoA2443745_g;
    int autoA2443745_u;

    // Variable Declarations
    unitgroup lv_group;
    point lv_loc;
    int lv_intA;
    unit lv_unit;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnitDamageSourceUnit()) == gv_pLAYER_03_ENEMY))) {
            return false;
        }

        if (!((UnitGetCustomValue(EventUnit(), 0) == 0.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_group = UnitGroupSearch(null, EventPlayer(), UnitGetPosition(EventUnit()), 15.0, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5D9BF859_g = lv_group;
    auto5D9BF859_u = 1;
    for ( ; auto5D9BF859_u <= UnitGroupCount(auto5D9BF859_g, c_unitCountAll) ; auto5D9BF859_u += BoolToInt(lv_unit == UnitGroupUnit(auto5D9BF859_g, auto5D9BF859_u)) ) {
        lv_unit = UnitGroupUnit(auto5D9BF859_g, auto5D9BF859_u);
        if (((UnitGetOwner(lv_unit) == gv_pLAYER_03_ENEMY) || (UnitGetCustomValue(lv_unit, 0) == 2.0) || (UnitGetCustomValue(lv_unit, 0) == 1.0) || (UnitGetOwner(lv_unit) != gv_aiur) || (UnitGetType(lv_unit) == "HyperArchon") || (UnitGetType(lv_unit) == "HighArchonTemplar") || ((CliffLevel(UnitGetPosition(lv_unit)) == 3) && (UnitWeaponRange(lv_unit, 1) > 4.0)))) {
            UnitGroupRemove(lv_group, lv_unit);
        }

    }
    auto79FD7D4B_g = lv_group;
    auto79FD7D4B_u = 1;
    for ( ; auto79FD7D4B_u <= UnitGroupCount(auto79FD7D4B_g, c_unitCountAll) ; auto79FD7D4B_u += BoolToInt(lv_unit == UnitGroupUnit(auto79FD7D4B_g, auto79FD7D4B_u)) ) {
        lv_unit = UnitGroupUnit(auto79FD7D4B_g, auto79FD7D4B_u);
        lv_loc = UnitGetPosition(lv_unit);
        UnitIssueOrder(lv_unit, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(EventUnitDamageSourceUnit())), c_orderQueueReplace);
        UnitIssueOrder(lv_unit, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueAddToEnd);
        UnitSetCustomValue(lv_unit, 0, 1.0);
    }
    Wait(40.0, c_timeGame);
    autoA2443745_g = lv_group;
    autoA2443745_u = 1;
    for ( ; autoA2443745_u <= UnitGroupCount(autoA2443745_g, c_unitCountAll) ; autoA2443745_u += BoolToInt(lv_unit == UnitGroupUnit(autoA2443745_g, autoA2443745_u)) ) {
        lv_unit = UnitGroupUnit(autoA2443745_g, autoA2443745_u);
        UnitSetCustomValue(lv_unit, 0, 0.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_COOPATTACK_Init () {
    gt_COOPATTACK = TriggerCreate("gt_COOPATTACK_Func");
    TriggerAddEventUnitDamaged(gt_COOPATTACK, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: protoss init
//--------------------------------------------------------------------------------------------------
bool gt_protossinit_Func (bool testConds, bool runActions) {
    int auto0A8C22E5_ae;
    int auto0A8C22E5_ai;
    int auto1A01E201_ae;
    int auto1A01E201_ai;

    // Variable Declarations
    unitgroup lv_group;
    int lv_intA;
    unit lv_unit;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(lv_group, UnitFromId(1716051855));
    UnitGroupAdd(lv_group, UnitFromId(2143140456));
    UnitGroupAdd(lv_group, UnitFromId(551227743));
    UnitGroupAdd(lv_group, UnitFromId(1761329775));
    UnitGroupAdd(lv_group, UnitFromId(1024594630));
    UnitGroupAdd(lv_group, UnitFromId(2125139130));
    UnitGroupAdd(lv_group, UnitFromId(2104734581));
    UnitGroupAdd(lv_group, UnitFromId(1682528188));
    UnitGroupAdd(lv_group, UnitFromId(333459932));
    UnitGroupAdd(lv_group, UnitFromId(1290266557));
    UnitGroupAdd(lv_group, UnitFromId(1468275633));
    UnitGroupAdd(lv_group, UnitFromId(1405585054));
    UnitGroupAdd(lv_group, UnitFromId(932827779));
    UnitGroupAdd(lv_group, UnitFromId(1868240296));
    UnitGroupAdd(lv_group, UnitFromId(2130492689));
    UnitGroupAdd(lv_group, UnitFromId(1826119706));
    UnitGroupAdd(lv_group, UnitFromId(1468275633));
    UnitGroupAdd(lv_group, UnitFromId(2125139130));
    gv_circle[1] = UnitFromId(1788990038);
    gv_circle[2] = UnitFromId(1348198715);
    libNtve_gf_ShowHideUnit(gv_circle[1], false);
    libNtve_gf_ShowHideUnit(gv_circle[2], false);
    TriggerExecute(gt_TroopSet, true, false);
    auto0A8C22E5_ae = UnitGroupCount(lv_group, c_unitCountAlive);
    auto0A8C22E5_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto0A8C22E5_ai >= 0 && lv_intA <= auto0A8C22E5_ae) || (auto0A8C22E5_ai <= 0 && lv_intA >= auto0A8C22E5_ae) ) ; lv_intA += auto0A8C22E5_ai ) {
        lv_unit = UnitGroupRandomUnit(lv_group, c_unitCountAlive);
        UnitSetCustomValue(lv_unit, 0, 2.0);
        UnitGroupRemove(lv_group, lv_unit);
    }
    lv_group = UnitGroup("MercMedic", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1A01E201_ae = UnitGroupCount(lv_group, c_unitCountAlive);
    auto1A01E201_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto1A01E201_ai >= 0 && lv_intA <= auto1A01E201_ae) || (auto1A01E201_ai <= 0 && lv_intA >= auto1A01E201_ae) ) ; lv_intA += auto1A01E201_ai ) {
        lv_unit = UnitGroupRandomUnit(lv_group, c_unitCountAlive);
        UnitIssueOrder(lv_unit, Order(AbilityCommand("MercMedicHealToggle", 0)), c_orderQueueReplace);
        UnitGroupRemove(lv_group, lv_unit);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_protossinit_Init () {
    gt_protossinit = TriggerCreate("gt_protossinit_Func");
    TriggerAddEventMapInit(gt_protossinit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TroopSet
//--------------------------------------------------------------------------------------------------
bool gt_TroopSet_Func (bool testConds, bool runActions) {
    int auto7F2D52D3_ae;
    int auto7F2D52D3_ai;
    unitgroup auto797291C4_g;
    int auto797291C4_u;

    // Variable Declarations
    int lv_intA;
    unit lv_unit;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aiurTroop_front[0] = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", c_playerAny, -1, RegionFromId(23), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    gv_aiurTroop_front[1] = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", c_playerAny, -1, RegionFromId(24), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    gv_aiurTroop_front[2] = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", c_playerAny, -1, RegionFromId(1), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7F2D52D3_ae = 2;
    auto7F2D52D3_ai = 1;
    lv_intA = 0;
    for ( ; ( (auto7F2D52D3_ai >= 0 && lv_intA <= auto7F2D52D3_ae) || (auto7F2D52D3_ai <= 0 && lv_intA >= auto7F2D52D3_ae) ) ; lv_intA += auto7F2D52D3_ai ) {
        auto797291C4_g = gv_aiurTroop_front[lv_intA];
        auto797291C4_u = 1;
        for ( ; auto797291C4_u <= UnitGroupCount(auto797291C4_g, c_unitCountAll) ; auto797291C4_u += BoolToInt(lv_unit == UnitGroupUnit(auto797291C4_g, auto797291C4_u)) ) {
            lv_unit = UnitGroupUnit(auto797291C4_g, auto797291C4_u);
            if (((UnitGetOwner(lv_unit) != gv_aiur) || ((CliffLevel(UnitGetPosition(lv_unit)) == 3) && (UnitWeaponRange(lv_unit, 1) > 4.0)))) {
                UnitGroupRemove(gv_aiurTroop_front[lv_intA], lv_unit);
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TroopSet_Init () {
    gt_TroopSet = TriggerCreate("gt_TroopSet_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TroopAddUnit
//--------------------------------------------------------------------------------------------------
bool gt_TroopAddUnit_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    unit lv_unit;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_aiurTroop_front[0], EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TroopAddUnit_Init () {
    gt_TroopAddUnit = TriggerCreate("gt_TroopAddUnit_Func");
    TriggerAddEventUnitRegion(gt_TroopAddUnit, null, RegionFromId(21), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TroopAddUnit 2
//--------------------------------------------------------------------------------------------------
bool gt_TroopAddUnit2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    unit lv_unit;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_aiurTroop_front[1], EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TroopAddUnit2_Init () {
    gt_TroopAddUnit2 = TriggerCreate("gt_TroopAddUnit2_Func");
    TriggerAddEventUnitRegion(gt_TroopAddUnit2, null, RegionFromId(20), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TroopAddUnit 3
//--------------------------------------------------------------------------------------------------
bool gt_TroopAddUnit3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    unit lv_unit;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_aiurTroop_front[0], EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TroopAddUnit3_Init () {
    gt_TroopAddUnit3 = TriggerCreate("gt_TroopAddUnit3_Func");
    TriggerAddEventUnitRegion(gt_TroopAddUnit3, null, RegionFromId(22), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Retreat Off
//--------------------------------------------------------------------------------------------------
bool gt_RetreatOff_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Rf, false);
    TriggerEnable(gt_Rf2, false);
    TriggerEnable(gt_Rf3, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RetreatOff_Init () {
    gt_RetreatOff = TriggerCreate("gt_RetreatOff_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Retreat On
//--------------------------------------------------------------------------------------------------
bool gt_RetreatOn_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Rf, true);
    TriggerEnable(gt_Rf2, true);
    TriggerEnable(gt_Rf3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RetreatOn_Init () {
    gt_RetreatOn = TriggerCreate("gt_RetreatOn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rf
//--------------------------------------------------------------------------------------------------
bool gt_Rf_Func (bool testConds, bool runActions) {
    unitgroup auto320EEAED_g;
    int auto320EEAED_u;
    unitgroup autoD7BA92A7_g;
    int autoD7BA92A7_u;

    // Variable Declarations
    unitgroup lv_group;
    point lv_loc;
    int lv_intA;
    unit lv_unit;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_group = UnitGroupSearch(null, EventPlayer(), UnitGetPosition(EventUnit()), 15.0, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto320EEAED_g = lv_group;
    auto320EEAED_u = 1;
    for ( ; auto320EEAED_u <= UnitGroupCount(auto320EEAED_g, c_unitCountAll) ; auto320EEAED_u += BoolToInt(lv_unit == UnitGroupUnit(auto320EEAED_g, auto320EEAED_u)) ) {
        lv_unit = UnitGroupUnit(auto320EEAED_g, auto320EEAED_u);
        if (((UnitGetOwner(lv_unit) != gv_aiur) || ((CliffLevel(UnitGetPosition(lv_unit)) == 3) && (UnitWeaponRange(lv_unit, 1) > 4.0)))) {
            UnitGroupRemove(lv_group, lv_unit);
        }

    }
    autoD7BA92A7_g = lv_group;
    autoD7BA92A7_u = 1;
    for ( ; autoD7BA92A7_u <= UnitGroupCount(autoD7BA92A7_g, c_unitCountAll) ; autoD7BA92A7_u += BoolToInt(lv_unit == UnitGroupUnit(autoD7BA92A7_g, autoD7BA92A7_u)) ) {
        lv_unit = UnitGroupUnit(autoD7BA92A7_g, autoD7BA92A7_u);
        UnitIssueOrder(lv_unit, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionCircle(PointFromId(2078882646), 5.0))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Rf_Init () {
    gt_Rf = TriggerCreate("gt_Rf_Func");
    TriggerAddEventUnitRegion(gt_Rf, null, RegionFromId(22), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rf 2
//--------------------------------------------------------------------------------------------------
bool gt_Rf2_Func (bool testConds, bool runActions) {
    unitgroup autoEA1B4030_g;
    int autoEA1B4030_u;
    unitgroup auto376D6ACB_g;
    int auto376D6ACB_u;

    // Variable Declarations
    unitgroup lv_group;
    point lv_loc;
    int lv_intA;
    unit lv_unit;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_group = UnitGroupSearch(null, EventPlayer(), UnitGetPosition(EventUnit()), 15.0, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEA1B4030_g = lv_group;
    autoEA1B4030_u = 1;
    for ( ; autoEA1B4030_u <= UnitGroupCount(autoEA1B4030_g, c_unitCountAll) ; autoEA1B4030_u += BoolToInt(lv_unit == UnitGroupUnit(autoEA1B4030_g, autoEA1B4030_u)) ) {
        lv_unit = UnitGroupUnit(autoEA1B4030_g, autoEA1B4030_u);
        if (((UnitGetOwner(lv_unit) != gv_aiur) || ((CliffLevel(UnitGetPosition(lv_unit)) == 3) && (UnitWeaponRange(lv_unit, 1) > 4.0)))) {
            UnitGroupRemove(lv_group, lv_unit);
        }

    }
    auto376D6ACB_g = lv_group;
    auto376D6ACB_u = 1;
    for ( ; auto376D6ACB_u <= UnitGroupCount(auto376D6ACB_g, c_unitCountAll) ; auto376D6ACB_u += BoolToInt(lv_unit == UnitGroupUnit(auto376D6ACB_g, auto376D6ACB_u)) ) {
        lv_unit = UnitGroupUnit(auto376D6ACB_g, auto376D6ACB_u);
        UnitIssueOrder(lv_unit, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionCircle(PointFromId(2101630251), 5.0))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Rf2_Init () {
    gt_Rf2 = TriggerCreate("gt_Rf2_Func");
    TriggerAddEventUnitRegion(gt_Rf2, null, RegionFromId(20), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rf 3
//--------------------------------------------------------------------------------------------------
bool gt_Rf3_Func (bool testConds, bool runActions) {
    unitgroup autoCC012C82_g;
    int autoCC012C82_u;
    unitgroup autoFFFDC578_g;
    int autoFFFDC578_u;

    // Variable Declarations
    unitgroup lv_group;
    point lv_loc;
    int lv_intA;
    unit lv_unit;

    // Variable Initialization
    lv_group = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_aiur))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_group = UnitGroupSearch(null, EventPlayer(), UnitGetPosition(EventUnit()), 15.0, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCC012C82_g = lv_group;
    autoCC012C82_u = 1;
    for ( ; autoCC012C82_u <= UnitGroupCount(autoCC012C82_g, c_unitCountAll) ; autoCC012C82_u += BoolToInt(lv_unit == UnitGroupUnit(autoCC012C82_g, autoCC012C82_u)) ) {
        lv_unit = UnitGroupUnit(autoCC012C82_g, autoCC012C82_u);
        if (((UnitGetOwner(lv_unit) != gv_aiur) || ((CliffLevel(UnitGetPosition(lv_unit)) == 3) && (UnitWeaponRange(lv_unit, 1) > 4.0)))) {
            UnitGroupRemove(lv_group, lv_unit);
        }

    }
    autoFFFDC578_g = lv_group;
    autoFFFDC578_u = 1;
    for ( ; autoFFFDC578_u <= UnitGroupCount(autoFFFDC578_g, c_unitCountAll) ; autoFFFDC578_u += BoolToInt(lv_unit == UnitGroupUnit(autoFFFDC578_g, autoFFFDC578_u)) ) {
        lv_unit = UnitGroupUnit(autoFFFDC578_g, autoFFFDC578_u);
        UnitIssueOrder(lv_unit, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionCircle(PointFromId(1004172693), 5.0))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Rf3_Init () {
    gt_Rf3 = TriggerCreate("gt_Rf3_Func");
    TriggerAddEventUnitRegion(gt_Rf3, null, RegionFromId(21), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zerg init
//--------------------------------------------------------------------------------------------------
bool gt_Zerginit_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_loc_Hill[1] = PointFromId(1089269429);
    gv_loc_Hill[2] = PointFromId(1699490987);
    gv_loc_Hill[3] = PointFromId(288332602);
    gv_loc_Hill[4] = PointFromId(218681730);
    gv_loc_Hill[5] = PointFromId(1299936658);
    gv_loc_Hill[6] = PointFromId(2011329520);
    gv_loc_Aiur[1] = PointFromId(1551709137);
    gv_loc_Aiur[2] = PointFromId(1639753716);
    gv_loc_Aiur[3] = PointFromId(1482638370);
    gv_loc_Guardian[1] = PointFromId(1834543509);
    gv_loc_Guardian[2] = PointFromId(1182099969);
    gv_loc_Guardian[3] = PointFromId(530076089);
    gv_loc_Guardian[4] = PointFromId(928860931);
    gv_loc_Guardian[5] = PointFromId(2078882646);
    gv_boss_Kraith = UnitFromId(704225947);
    libNtve_gf_ShowHideUnit(UnitFromId(704225947), false);
    VisRevealArea(3, RegionEntireMap(), 0.0, false);
    PlayerModifyPropertyInt(3, c_playerPropMinerals, c_playerPropOperSetTo, 2000);
    PlayerModifyPropertyInt(3, c_playerPropVespene, c_playerPropOperSetTo, 2000);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Zerginit_Init () {
    gt_Zerginit = TriggerCreate("gt_Zerginit_Func");
    TriggerAddEventMapInit(gt_Zerginit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fminer
//--------------------------------------------------------------------------------------------------
bool gt_Fminer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(libNtve_gf_KillingUnit()) == "SpiderMine"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_mineKill = (gv_mineKill + 1);
    if ((gv_mineKill > 60)) {
        libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "Stimpack2", 1);
        gv_bonusHunterK = (9 + 1);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Fminer_Init () {
    gt_Fminer = TriggerCreate("gt_Fminer_Func");
    TriggerEnable(gt_Fminer, false);
    TriggerAddEventUnitDied(gt_Fminer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ????????? 003
//--------------------------------------------------------------------------------------------------
bool gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(2, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(2, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Ravager", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Pygalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "HotSNoxious", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    libNtve_gf_UnitCreateFacingPoint(1, "GuardianMP", 0, gv_pLAYER_03_ENEMY, PointFromId(1100098587), UnitGetPosition(UnitFromId(188)));
    libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003_Init () {
    gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003 = TriggerCreate("gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ????????? 001
//--------------------------------------------------------------------------------------------------
bool gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001_Init () {
    gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001 = TriggerCreate("gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001_Func");
    TriggerAddEventMapInit(gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Wave Starter
//--------------------------------------------------------------------------------------------------
bool gt_WaveStarter_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(((60 * 3) + 0.0), c_timeGame);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(null, null, StringExternal("Param/Value/F22926DB"), StringExternal("Param/Value/5599D0B4"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound);
    TriggerExecute(gt_AiurUPGRADE1, true, false);
    TriggerEnable(gt_wave_left1, true);
    TriggerEnable(gt_wave_right1, true);
    TriggerEnable(gt_wave_front1, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_left1, false);
    TriggerEnable(gt_wave_right1, false);
    TriggerEnable(gt_wave_front1, false);
    Wait(((60 * 1) + 30.0), c_timeGame);
    TriggerExecute(gt_UPGRADE1, true, false);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(null, null, StringExternal("Param/Value/ECF03757"), StringExternal("Param/Value/89118284"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound);
    TriggerEnable(gt_wave_left2, true);
    TriggerEnable(gt_wave_right2, true);
    TriggerEnable(gt_wave_front2, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_left2, false);
    TriggerEnable(gt_wave_right2, false);
    TriggerEnable(gt_wave_front2, false);
    TriggerEnable(gt_SP_impalergen, true);
    Wait(((60 * 1) + 30.0), c_timeGame);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/9DFD98F5"), StringExternal("Param/Value/EAE38012"), 4.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerExecute(gt_AiurUPGRADE2, true, false);
    TriggerExecute(gt_UPGRADE2, true, false);
    TriggerEnable(gt_wave_left3, true);
    TriggerEnable(gt_wave_right3, true);
    TriggerEnable(gt_wave_front3, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_left3, false);
    TriggerEnable(gt_wave_right3, false);
    TriggerEnable(gt_wave_front3, false);
    Wait(((60 * 1) + 30.0), c_timeGame);
    TriggerEnable(gt_SP_Generator, true);
    TriggerExecute(gt_RetreatOff, true, false);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/657AFFEA"), StringExternal("Param/Value/033FFC34"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerExecute(gt_UPGRADE3, true, false);
    TriggerExecute(gt_wave_Boss_front4, true, false);
    Wait(((60 * 2) + 0.0), c_timeGame);
    TriggerExecute(gt_AiurUPGRADE3, true, false);
    TriggerExecute(gt_UPGRADE4, true, false);
    TriggerEnable(gt_wave_left5, true);
    TriggerEnable(gt_wave_right5, true);
    TriggerEnable(gt_wave_front5, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_left5, false);
    TriggerEnable(gt_wave_right5, false);
    TriggerEnable(gt_wave_front5, false);
    Wait(((60 * 1) + 30.0), c_timeGame);
    TriggerExecute(gt_AiurUPGRADE4, true, false);
    TriggerExecute(gt_UPGRADE5, true, false);
    TriggerEnable(gt_wave_Boss_front6, true);
    Wait(40.0, c_timeGame);
    TriggerExecute(gt_Brakk_gen, true, false);
    Wait(20.0, c_timeGame);
    TriggerEnable(gt_wave_Boss_front6, false);
    TriggerExecute(gt_mis3, true, false);
    Wait(((60 * 1) + 30.0), c_timeGame);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/81F01887"), StringExternal("Param/Value/B74AEEE5"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerExecute(gt_UPGRADE6, true, false);
    TriggerEnable(gt_wave_LRF7, true);
    TriggerEnable(gt_wave_left7, true);
    TriggerEnable(gt_wave_right7, true);
    TriggerEnable(gt_wave_front7, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_LRF7, false);
    TriggerEnable(gt_wave_left7, false);
    TriggerEnable(gt_wave_right7, false);
    TriggerEnable(gt_wave_front7, false);
    Wait(((60 * 1) + 30.0), c_timeGame);
    TriggerExecute(gt_AiurUPGRADE5, true, false);
    TriggerExecute(gt_Spotter_gen, true, false);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/E4DFDFC9"), StringExternal("Param/Value/A4A80803"), 5.0, false, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerEnable(gt_wave_left8, true);
    TriggerEnable(gt_wave_right8, true);
    TriggerEnable(gt_wave_front8, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_left8, false);
    TriggerEnable(gt_wave_right8, false);
    TriggerEnable(gt_wave_front8, false);
    TriggerExecute(gt_UPGRADE7, true, false);
    TriggerExecute(gt_AiurUPGRADE6, true, false);
    TriggerEnable(gt_wave_LRF9, true);
    TriggerEnable(gt_wave_left9, true);
    TriggerEnable(gt_wave_right9, true);
    TriggerEnable(gt_wave_front9, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(gt_wave_LRF9, false);
    TriggerEnable(gt_wave_left9, false);
    TriggerEnable(gt_wave_right9, false);
    TriggerEnable(gt_wave_front9, false);
    TriggerEnable(gt_SP_Generator, false);
    Wait(((60 * 1) + 0.0), c_timeGame);
    TriggerEnable(gt_wave_front10, true);
    TriggerEnable(gt_wave_front11, true);
    Wait(30.0, c_timeGame);
    TriggerExecute(gt_Omega_gen, true, false);
    Wait(30.0, c_timeGame);
    TriggerEnable(gt_wave_front10, false);
    TriggerEnable(gt_wave_front11, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WaveStarter_Init () {
    gt_WaveStarter = TriggerCreate("gt_WaveStarter_Func");
    TriggerAddEventMapInit(gt_WaveStarter);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 1
//--------------------------------------------------------------------------------------------------
bool gt_wave_left1_Func (bool testConds, bool runActions) {
    int auto1DF43253_ae;
    int auto1DF43253_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto1DF43253_ae = 5;
    auto1DF43253_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto1DF43253_ai >= 0 && lv_intA <= auto1DF43253_ae) || (auto1DF43253_ai <= 0 && lv_intA >= auto1DF43253_ae) ) ; lv_intA += auto1DF43253_ai ) {
        libNtve_gf_UnitCreateFacingPoint(2, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAddUnitGroup(lv_attackForce, UnitLastCreatedGroup());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left1_Init () {
    gt_wave_left1 = TriggerCreate("gt_wave_left1_Func");
    TriggerEnable(gt_wave_left1, false);
    TriggerAddEventTimePeriodic(gt_wave_left1, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 1
//--------------------------------------------------------------------------------------------------
bool gt_wave_right1_Func (bool testConds, bool runActions) {
    int auto08688A8C_ae;
    int auto08688A8C_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto08688A8C_ae = 5;
    auto08688A8C_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto08688A8C_ai >= 0 && lv_intA <= auto08688A8C_ae) || (auto08688A8C_ai <= 0 && lv_intA >= auto08688A8C_ae) ) ; lv_intA += auto08688A8C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(2, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAddUnitGroup(lv_attackForce, UnitLastCreatedGroup());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueReplace);
    UnitGroupAddUnitGroup(gv_attackForce_Right, lv_attackForce);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right1_Init () {
    gt_wave_right1 = TriggerCreate("gt_wave_right1_Func");
    TriggerEnable(gt_wave_right1, false);
    TriggerAddEventTimePeriodic(gt_wave_right1, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 1
//--------------------------------------------------------------------------------------------------
bool gt_wave_front1_Func (bool testConds, bool runActions) {
    int autoDC6C2ABF_ae;
    int autoDC6C2ABF_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoDC6C2ABF_ae = 6;
    autoDC6C2ABF_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoDC6C2ABF_ai >= 0 && lv_intA <= autoDC6C2ABF_ae) || (autoDC6C2ABF_ai <= 0 && lv_intA >= autoDC6C2ABF_ae) ) ; lv_intA += autoDC6C2ABF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(2, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAddUnitGroup(lv_attackForce, UnitLastCreatedGroup());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    UnitGroupAddUnitGroup(gv_attackForce_Front, lv_attackForce);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front1_Init () {
    gt_wave_front1 = TriggerCreate("gt_wave_front1_Func");
    TriggerEnable(gt_wave_front1, false);
    TriggerAddEventTimePeriodic(gt_wave_front1, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 2
//--------------------------------------------------------------------------------------------------
bool gt_wave_left2_Func (bool testConds, bool runActions) {
    int auto9750D1AA_ae;
    int auto9750D1AA_ai;
    int autoBC5851DB_ae;
    int autoBC5851DB_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto9750D1AA_ae = 2;
    auto9750D1AA_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto9750D1AA_ai >= 0 && lv_intA <= auto9750D1AA_ae) || (auto9750D1AA_ai <= 0 && lv_intA >= auto9750D1AA_ae) ) ; lv_intA += auto9750D1AA_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoBC5851DB_ae = 4;
    autoBC5851DB_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoBC5851DB_ai >= 0 && lv_intA <= autoBC5851DB_ae) || (autoBC5851DB_ai <= 0 && lv_intA >= autoBC5851DB_ae) ) ; lv_intA += autoBC5851DB_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left2_Init () {
    gt_wave_left2 = TriggerCreate("gt_wave_left2_Func");
    TriggerEnable(gt_wave_left2, false);
    TriggerAddEventTimePeriodic(gt_wave_left2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 2
//--------------------------------------------------------------------------------------------------
bool gt_wave_right2_Func (bool testConds, bool runActions) {
    int auto4DBCB8E0_ae;
    int auto4DBCB8E0_ai;
    int autoF96077CD_ae;
    int autoF96077CD_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto4DBCB8E0_ae = 2;
    auto4DBCB8E0_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto4DBCB8E0_ai >= 0 && lv_intA <= auto4DBCB8E0_ae) || (auto4DBCB8E0_ai <= 0 && lv_intA >= auto4DBCB8E0_ae) ) ; lv_intA += auto4DBCB8E0_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoF96077CD_ae = 4;
    autoF96077CD_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoF96077CD_ai >= 0 && lv_intA <= autoF96077CD_ae) || (autoF96077CD_ai <= 0 && lv_intA >= autoF96077CD_ae) ) ; lv_intA += autoF96077CD_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right2_Init () {
    gt_wave_right2 = TriggerCreate("gt_wave_right2_Func");
    TriggerEnable(gt_wave_right2, false);
    TriggerAddEventTimePeriodic(gt_wave_right2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 2
//--------------------------------------------------------------------------------------------------
bool gt_wave_front2_Func (bool testConds, bool runActions) {
    int auto81815BFE_ae;
    int auto81815BFE_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto81815BFE_ae = 4;
    auto81815BFE_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto81815BFE_ai >= 0 && lv_intA <= auto81815BFE_ae) || (auto81815BFE_ai <= 0 && lv_intA >= auto81815BFE_ae) ) ; lv_intA += auto81815BFE_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front2_Init () {
    gt_wave_front2 = TriggerCreate("gt_wave_front2_Func");
    TriggerEnable(gt_wave_front2, false);
    TriggerAddEventTimePeriodic(gt_wave_front2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 3
//--------------------------------------------------------------------------------------------------
bool gt_wave_left3_Func (bool testConds, bool runActions) {
    int auto87DB5032_ae;
    int auto87DB5032_ai;
    int auto929880FF_ae;
    int auto929880FF_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto87DB5032_ae = 2;
    auto87DB5032_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto87DB5032_ai >= 0 && lv_intA <= auto87DB5032_ae) || (auto87DB5032_ai <= 0 && lv_intA >= auto87DB5032_ae) ) ; lv_intA += auto87DB5032_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto929880FF_ae = 4;
    auto929880FF_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto929880FF_ai >= 0 && lv_intA <= auto929880FF_ae) || (auto929880FF_ai <= 0 && lv_intA >= auto929880FF_ae) ) ; lv_intA += auto929880FF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left3_Init () {
    gt_wave_left3 = TriggerCreate("gt_wave_left3_Func");
    TriggerEnable(gt_wave_left3, false);
    TriggerAddEventTimePeriodic(gt_wave_left3, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 3
//--------------------------------------------------------------------------------------------------
bool gt_wave_right3_Func (bool testConds, bool runActions) {
    int auto99A84AC2_ae;
    int auto99A84AC2_ai;
    int auto9177CBB2_ae;
    int auto9177CBB2_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto99A84AC2_ae = 2;
    auto99A84AC2_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto99A84AC2_ai >= 0 && lv_intA <= auto99A84AC2_ae) || (auto99A84AC2_ai <= 0 && lv_intA >= auto99A84AC2_ae) ) ; lv_intA += auto99A84AC2_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto9177CBB2_ae = 4;
    auto9177CBB2_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto9177CBB2_ai >= 0 && lv_intA <= auto9177CBB2_ae) || (auto9177CBB2_ai <= 0 && lv_intA >= auto9177CBB2_ae) ) ; lv_intA += auto9177CBB2_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right3_Init () {
    gt_wave_right3 = TriggerCreate("gt_wave_right3_Func");
    TriggerEnable(gt_wave_right3, false);
    TriggerAddEventTimePeriodic(gt_wave_right3, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 3
//--------------------------------------------------------------------------------------------------
bool gt_wave_front3_Func (bool testConds, bool runActions) {
    int auto292D6478_ae;
    int auto292D6478_ai;
    int autoB03F85AF_ae;
    int autoB03F85AF_ai;
    int autoA11664A8_ae;
    int autoA11664A8_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto292D6478_ae = 2;
    auto292D6478_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto292D6478_ai >= 0 && lv_intA <= auto292D6478_ae) || (auto292D6478_ai <= 0 && lv_intA >= auto292D6478_ae) ) ; lv_intA += auto292D6478_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoB03F85AF_ae = 4;
    autoB03F85AF_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB03F85AF_ai >= 0 && lv_intA <= autoB03F85AF_ae) || (autoB03F85AF_ai <= 0 && lv_intA >= autoB03F85AF_ae) ) ; lv_intA += autoB03F85AF_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoA11664A8_ae = 2;
    autoA11664A8_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA11664A8_ai >= 0 && lv_intA <= autoA11664A8_ae) || (autoA11664A8_ai <= 0 && lv_intA >= autoA11664A8_ae) ) ; lv_intA += autoA11664A8_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Pygalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front3_Init () {
    gt_wave_front3 = TriggerCreate("gt_wave_front3_Func");
    TriggerEnable(gt_wave_front3, false);
    TriggerAddEventTimePeriodic(gt_wave_front3, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_Boss_front 4
//--------------------------------------------------------------------------------------------------
bool gt_wave_Boss_front4_Func (bool testConds, bool runActions) {
    int init_i;

    int auto6B150600_ae;
    int auto6B150600_ai;
    int auto149C0E67_ae;
    int auto149C0E67_ai;
    int auto5ECC99AA_ae;
    int auto5ECC99AA_ai;
    int autoBFC83E57_ae;
    int autoBFC83E57_ai;
    int auto5BFA4842_ae;
    int auto5BFA4842_ai;

    // Variable Declarations
    unitgroup[4] lv_attackForce;
    int lv_intA;

    // Variable Initialization
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lv_attackForce[init_i] = UnitGroupEmpty();
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto6B150600_ae = 14;
    auto6B150600_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto6B150600_ai >= 0 && lv_intA <= auto6B150600_ae) || (auto6B150600_ai <= 0 && lv_intA >= auto6B150600_ae) ) ; lv_intA += auto6B150600_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce[0], UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto149C0E67_ae = 12;
    auto149C0E67_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto149C0E67_ai >= 0 && lv_intA <= auto149C0E67_ae) || (auto149C0E67_ai <= 0 && lv_intA >= auto149C0E67_ae) ) ; lv_intA += auto149C0E67_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce[1], UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto5ECC99AA_ae = 90;
    auto5ECC99AA_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto5ECC99AA_ai >= 0 && lv_intA <= auto5ECC99AA_ae) || (auto5ECC99AA_ai <= 0 && lv_intA >= auto5ECC99AA_ae) ) ; lv_intA += auto5ECC99AA_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce[2], UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoBFC83E57_ae = 12;
    autoBFC83E57_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoBFC83E57_ai >= 0 && lv_intA <= autoBFC83E57_ae) || (autoBFC83E57_ai <= 0 && lv_intA >= autoBFC83E57_ae) ) ; lv_intA += autoBFC83E57_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce[2], UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto5BFA4842_ae = 2;
    auto5BFA4842_ai = 1;
    lv_intA = 0;
    for ( ; ( (auto5BFA4842_ai >= 0 && lv_intA <= auto5BFA4842_ae) || (auto5BFA4842_ai <= 0 && lv_intA >= auto5BFA4842_ae) ) ; lv_intA += auto5BFA4842_ai ) {
        UnitGroupIssueOrder(lv_attackForce[lv_intA], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
        UnitGroupAddUnitGroup(gv_attackForce_Left, lv_attackForce[lv_intA]);
    }
    Wait(2.0, c_timeGame);
    TriggerExecute(gt_Kraith_gen, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_Boss_front4_Init () {
    gt_wave_Boss_front4 = TriggerCreate("gt_wave_Boss_front4_Func");
    TriggerEnable(gt_wave_Boss_front4, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 5
//--------------------------------------------------------------------------------------------------
bool gt_wave_left5_Func (bool testConds, bool runActions) {
    int auto32490643_ae;
    int auto32490643_ai;
    int auto8E1C2BE7_ae;
    int auto8E1C2BE7_ai;
    int autoCE31BFA0_ae;
    int autoCE31BFA0_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto32490643_ae = 12;
    auto32490643_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto32490643_ai >= 0 && lv_intA <= auto32490643_ae) || (auto32490643_ai <= 0 && lv_intA >= auto32490643_ae) ) ; lv_intA += auto32490643_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto8E1C2BE7_ae = 4;
    auto8E1C2BE7_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto8E1C2BE7_ai >= 0 && lv_intA <= auto8E1C2BE7_ae) || (auto8E1C2BE7_ai <= 0 && lv_intA >= auto8E1C2BE7_ae) ) ; lv_intA += auto8E1C2BE7_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    autoCE31BFA0_ae = 2;
    autoCE31BFA0_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoCE31BFA0_ai >= 0 && lv_intA <= autoCE31BFA0_ae) || (autoCE31BFA0_ai <= 0 && lv_intA >= autoCE31BFA0_ae) ) ; lv_intA += autoCE31BFA0_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left5_Init () {
    gt_wave_left5 = TriggerCreate("gt_wave_left5_Func");
    TriggerEnable(gt_wave_left5, false);
    TriggerAddEventTimePeriodic(gt_wave_left5, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 5
//--------------------------------------------------------------------------------------------------
bool gt_wave_right5_Func (bool testConds, bool runActions) {
    int auto6F53B38F_ae;
    int auto6F53B38F_ai;
    int auto00801A7A_ae;
    int auto00801A7A_ai;
    int autoA802B564_ae;
    int autoA802B564_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto6F53B38F_ae = 12;
    auto6F53B38F_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto6F53B38F_ai >= 0 && lv_intA <= auto6F53B38F_ae) || (auto6F53B38F_ai <= 0 && lv_intA >= auto6F53B38F_ae) ) ; lv_intA += auto6F53B38F_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto00801A7A_ae = 2;
    auto00801A7A_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto00801A7A_ai >= 0 && lv_intA <= auto00801A7A_ae) || (auto00801A7A_ai <= 0 && lv_intA >= auto00801A7A_ae) ) ; lv_intA += auto00801A7A_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    autoA802B564_ae = 2;
    autoA802B564_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA802B564_ai >= 0 && lv_intA <= autoA802B564_ae) || (autoA802B564_ai <= 0 && lv_intA >= autoA802B564_ae) ) ; lv_intA += autoA802B564_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right5_Init () {
    gt_wave_right5 = TriggerCreate("gt_wave_right5_Func");
    TriggerEnable(gt_wave_right5, false);
    TriggerAddEventTimePeriodic(gt_wave_right5, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 5
//--------------------------------------------------------------------------------------------------
bool gt_wave_front5_Func (bool testConds, bool runActions) {
    int auto27DD89BE_ae;
    int auto27DD89BE_ai;
    int autoFD0A8F69_ae;
    int autoFD0A8F69_ai;
    int auto4B320447_ae;
    int auto4B320447_ai;
    int autoE77CBD43_ae;
    int autoE77CBD43_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto27DD89BE_ae = 12;
    auto27DD89BE_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto27DD89BE_ai >= 0 && lv_intA <= auto27DD89BE_ae) || (auto27DD89BE_ai <= 0 && lv_intA >= auto27DD89BE_ae) ) ; lv_intA += auto27DD89BE_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoFD0A8F69_ae = 3;
    autoFD0A8F69_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoFD0A8F69_ai >= 0 && lv_intA <= autoFD0A8F69_ae) || (autoFD0A8F69_ai <= 0 && lv_intA >= autoFD0A8F69_ae) ) ; lv_intA += autoFD0A8F69_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    auto4B320447_ae = 1;
    auto4B320447_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto4B320447_ai >= 0 && lv_intA <= auto4B320447_ae) || (auto4B320447_ai <= 0 && lv_intA >= auto4B320447_ae) ) ; lv_intA += auto4B320447_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoE77CBD43_ae = 3;
    autoE77CBD43_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE77CBD43_ai >= 0 && lv_intA <= autoE77CBD43_ae) || (autoE77CBD43_ai <= 0 && lv_intA >= autoE77CBD43_ae) ) ; lv_intA += autoE77CBD43_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front5_Init () {
    gt_wave_front5 = TriggerCreate("gt_wave_front5_Func");
    TriggerEnable(gt_wave_front5, false);
    TriggerAddEventTimePeriodic(gt_wave_front5, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_Boss_front 6
//--------------------------------------------------------------------------------------------------
bool gt_wave_Boss_front6_Func (bool testConds, bool runActions) {
    int auto6947EAAC_ae;
    int auto6947EAAC_ai;
    int auto215804D5_ae;
    int auto215804D5_ai;
    int autoEAFD521C_ae;
    int autoEAFD521C_ai;
    int auto2E2D57BE_ae;
    int auto2E2D57BE_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto6947EAAC_ae = 15;
    auto6947EAAC_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto6947EAAC_ai >= 0 && lv_intA <= auto6947EAAC_ae) || (auto6947EAAC_ai <= 0 && lv_intA >= auto6947EAAC_ae) ) ; lv_intA += auto6947EAAC_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto215804D5_ae = 5;
    auto215804D5_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto215804D5_ai >= 0 && lv_intA <= auto215804D5_ae) || (auto215804D5_ai <= 0 && lv_intA >= auto215804D5_ae) ) ; lv_intA += auto215804D5_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoEAFD521C_ae = 1;
    autoEAFD521C_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoEAFD521C_ai >= 0 && lv_intA <= autoEAFD521C_ae) || (autoEAFD521C_ai <= 0 && lv_intA >= autoEAFD521C_ae) ) ; lv_intA += autoEAFD521C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Ravager", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto2E2D57BE_ae = 2;
    auto2E2D57BE_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2E2D57BE_ai >= 0 && lv_intA <= auto2E2D57BE_ae) || (auto2E2D57BE_ai <= 0 && lv_intA >= auto2E2D57BE_ae) ) ; lv_intA += auto2E2D57BE_ai ) {
        if ((RandomInt(1, 100) > 30)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "GuardianMP", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(188)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_Boss_front6_Init () {
    gt_wave_Boss_front6 = TriggerCreate("gt_wave_Boss_front6_Func");
    TriggerEnable(gt_wave_Boss_front6, false);
    TriggerAddEventTimePeriodic(gt_wave_Boss_front6, 6.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_LRF 7
//--------------------------------------------------------------------------------------------------
bool gt_wave_LRF7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1425450832), UnitGetPosition(UnitFromId(188)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1534768987), UnitGetPosition(UnitFromId(188)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1298361192), UnitGetPosition(UnitFromId(188)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_LRF7_Init () {
    gt_wave_LRF7 = TriggerCreate("gt_wave_LRF7_Func");
    TriggerEnable(gt_wave_LRF7, false);
    TriggerAddEventTimePeriodic(gt_wave_LRF7, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 7
//--------------------------------------------------------------------------------------------------
bool gt_wave_left7_Func (bool testConds, bool runActions) {
    int auto9CFB420F_ae;
    int auto9CFB420F_ai;
    int autoFDDCFCEA_ae;
    int autoFDDCFCEA_ai;
    int autoB9A9B4AA_ae;
    int autoB9A9B4AA_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    auto9CFB420F_ae = 10;
    auto9CFB420F_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto9CFB420F_ai >= 0 && lv_intA <= auto9CFB420F_ae) || (auto9CFB420F_ai <= 0 && lv_intA >= auto9CFB420F_ae) ) ; lv_intA += auto9CFB420F_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoFDDCFCEA_ae = 3;
    autoFDDCFCEA_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoFDDCFCEA_ai >= 0 && lv_intA <= autoFDDCFCEA_ae) || (autoFDDCFCEA_ai <= 0 && lv_intA >= autoFDDCFCEA_ae) ) ; lv_intA += autoFDDCFCEA_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoB9A9B4AA_ae = 2;
    autoB9A9B4AA_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB9A9B4AA_ai >= 0 && lv_intA <= autoB9A9B4AA_ae) || (autoB9A9B4AA_ai <= 0 && lv_intA >= autoB9A9B4AA_ae) ) ; lv_intA += autoB9A9B4AA_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left7_Init () {
    gt_wave_left7 = TriggerCreate("gt_wave_left7_Func");
    TriggerEnable(gt_wave_left7, false);
    TriggerAddEventTimePeriodic(gt_wave_left7, 6.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 7
//--------------------------------------------------------------------------------------------------
bool gt_wave_right7_Func (bool testConds, bool runActions) {
    int auto6F9F896F_ae;
    int auto6F9F896F_ai;
    int auto45C75899_ae;
    int auto45C75899_ai;
    int autoAEF6CBED_ae;
    int autoAEF6CBED_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    auto6F9F896F_ae = 10;
    auto6F9F896F_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto6F9F896F_ai >= 0 && lv_intA <= auto6F9F896F_ae) || (auto6F9F896F_ai <= 0 && lv_intA >= auto6F9F896F_ae) ) ; lv_intA += auto6F9F896F_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto45C75899_ae = 3;
    auto45C75899_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto45C75899_ai >= 0 && lv_intA <= auto45C75899_ae) || (auto45C75899_ai <= 0 && lv_intA >= auto45C75899_ae) ) ; lv_intA += auto45C75899_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoAEF6CBED_ae = 2;
    autoAEF6CBED_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoAEF6CBED_ai >= 0 && lv_intA <= autoAEF6CBED_ae) || (autoAEF6CBED_ai <= 0 && lv_intA >= autoAEF6CBED_ae) ) ; lv_intA += autoAEF6CBED_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right7_Init () {
    gt_wave_right7 = TriggerCreate("gt_wave_right7_Func");
    TriggerEnable(gt_wave_right7, false);
    TriggerAddEventTimePeriodic(gt_wave_right7, 6.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 7
//--------------------------------------------------------------------------------------------------
bool gt_wave_front7_Func (bool testConds, bool runActions) {
    int auto19479A84_ae;
    int auto19479A84_ai;
    int auto1315967A_ae;
    int auto1315967A_ai;
    int auto326F7A0F_ae;
    int auto326F7A0F_ai;
    int autoA6C9A35D_ae;
    int autoA6C9A35D_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto19479A84_ae = 10;
    auto19479A84_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto19479A84_ai >= 0 && lv_intA <= auto19479A84_ae) || (auto19479A84_ai <= 0 && lv_intA >= auto19479A84_ae) ) ; lv_intA += auto19479A84_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto1315967A_ae = 5;
    auto1315967A_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto1315967A_ai >= 0 && lv_intA <= auto1315967A_ae) || (auto1315967A_ai <= 0 && lv_intA >= auto1315967A_ae) ) ; lv_intA += auto1315967A_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto326F7A0F_ae = 2;
    auto326F7A0F_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto326F7A0F_ai >= 0 && lv_intA <= auto326F7A0F_ae) || (auto326F7A0F_ai <= 0 && lv_intA >= auto326F7A0F_ae) ) ; lv_intA += auto326F7A0F_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
    }
    autoA6C9A35D_ae = 2;
    autoA6C9A35D_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA6C9A35D_ai >= 0 && lv_intA <= autoA6C9A35D_ae) || (autoA6C9A35D_ai <= 0 && lv_intA >= autoA6C9A35D_ae) ) ; lv_intA += autoA6C9A35D_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front7_Init () {
    gt_wave_front7 = TriggerCreate("gt_wave_front7_Func");
    TriggerEnable(gt_wave_front7, false);
    TriggerAddEventTimePeriodic(gt_wave_front7, 6.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 8
//--------------------------------------------------------------------------------------------------
bool gt_wave_left8_Func (bool testConds, bool runActions) {
    int auto3C9EF18C_ae;
    int auto3C9EF18C_ai;
    int autoDEEC6B25_ae;
    int autoDEEC6B25_ai;
    int auto680DE363_ae;
    int auto680DE363_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto3C9EF18C_ae = 2;
    auto3C9EF18C_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto3C9EF18C_ai >= 0 && lv_intA <= auto3C9EF18C_ae) || (auto3C9EF18C_ai <= 0 && lv_intA >= auto3C9EF18C_ae) ) ; lv_intA += auto3C9EF18C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoDEEC6B25_ae = 3;
    autoDEEC6B25_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoDEEC6B25_ai >= 0 && lv_intA <= autoDEEC6B25_ae) || (autoDEEC6B25_ai <= 0 && lv_intA >= autoDEEC6B25_ae) ) ; lv_intA += autoDEEC6B25_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto680DE363_ae = 1;
    auto680DE363_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto680DE363_ai >= 0 && lv_intA <= auto680DE363_ae) || (auto680DE363_ai <= 0 && lv_intA >= auto680DE363_ae) ) ; lv_intA += auto680DE363_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left8_Init () {
    gt_wave_left8 = TriggerCreate("gt_wave_left8_Func");
    TriggerEnable(gt_wave_left8, false);
    TriggerAddEventTimePeriodic(gt_wave_left8, 8.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 8
//--------------------------------------------------------------------------------------------------
bool gt_wave_right8_Func (bool testConds, bool runActions) {
    int autoA8834D93_ae;
    int autoA8834D93_ai;
    int auto0F97850C_ae;
    int auto0F97850C_ai;
    int autoE80D2D8D_ae;
    int autoE80D2D8D_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoA8834D93_ae = 2;
    autoA8834D93_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA8834D93_ai >= 0 && lv_intA <= autoA8834D93_ae) || (autoA8834D93_ai <= 0 && lv_intA >= autoA8834D93_ae) ) ; lv_intA += autoA8834D93_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto0F97850C_ae = 3;
    auto0F97850C_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto0F97850C_ai >= 0 && lv_intA <= auto0F97850C_ae) || (auto0F97850C_ai <= 0 && lv_intA >= auto0F97850C_ae) ) ; lv_intA += auto0F97850C_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoE80D2D8D_ae = 1;
    autoE80D2D8D_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE80D2D8D_ai >= 0 && lv_intA <= autoE80D2D8D_ae) || (autoE80D2D8D_ai <= 0 && lv_intA >= autoE80D2D8D_ae) ) ; lv_intA += autoE80D2D8D_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right8_Init () {
    gt_wave_right8 = TriggerCreate("gt_wave_right8_Func");
    TriggerEnable(gt_wave_right8, false);
    TriggerAddEventTimePeriodic(gt_wave_right8, 8.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 8
//--------------------------------------------------------------------------------------------------
bool gt_wave_front8_Func (bool testConds, bool runActions) {
    int autoA9D1CDD2_ae;
    int autoA9D1CDD2_ai;
    int autoD0C7E9D3_ae;
    int autoD0C7E9D3_ai;
    int auto2566B7C4_ae;
    int auto2566B7C4_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoA9D1CDD2_ae = 3;
    autoA9D1CDD2_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA9D1CDD2_ai >= 0 && lv_intA <= autoA9D1CDD2_ae) || (autoA9D1CDD2_ai <= 0 && lv_intA >= autoA9D1CDD2_ae) ) ; lv_intA += autoA9D1CDD2_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoD0C7E9D3_ae = 3;
    autoD0C7E9D3_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoD0C7E9D3_ai >= 0 && lv_intA <= autoD0C7E9D3_ae) || (autoD0C7E9D3_ai <= 0 && lv_intA >= autoD0C7E9D3_ae) ) ; lv_intA += autoD0C7E9D3_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto2566B7C4_ae = 2;
    auto2566B7C4_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto2566B7C4_ai >= 0 && lv_intA <= auto2566B7C4_ae) || (auto2566B7C4_ai <= 0 && lv_intA >= auto2566B7C4_ae) ) ; lv_intA += auto2566B7C4_ai ) {
        if ((RandomInt(1, 100) > 25)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "HotSNoxious", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front8_Init () {
    gt_wave_front8 = TriggerCreate("gt_wave_front8_Func");
    TriggerEnable(gt_wave_front8, false);
    TriggerAddEventTimePeriodic(gt_wave_front8, 8.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_LRF 9
//--------------------------------------------------------------------------------------------------
bool gt_wave_LRF9_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Brutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "Brutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "Brutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_LRF9_Init () {
    gt_wave_LRF9 = TriggerCreate("gt_wave_LRF9_Func");
    TriggerEnable(gt_wave_LRF9, false);
    TriggerAddEventTimePeriodic(gt_wave_LRF9, 14.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_left 9
//--------------------------------------------------------------------------------------------------
bool gt_wave_left9_Func (bool testConds, bool runActions) {
    int auto10C25455_ae;
    int auto10C25455_ai;
    int auto936036E2_ae;
    int auto936036E2_ai;
    int auto6C5F37CA_ae;
    int auto6C5F37CA_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto10C25455_ae = 2;
    auto10C25455_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto10C25455_ai >= 0 && lv_intA <= auto10C25455_ae) || (auto10C25455_ai <= 0 && lv_intA >= auto10C25455_ae) ) ; lv_intA += auto10C25455_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto936036E2_ae = 8;
    auto936036E2_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto936036E2_ai >= 0 && lv_intA <= auto936036E2_ae) || (auto936036E2_ai <= 0 && lv_intA >= auto936036E2_ae) ) ; lv_intA += auto936036E2_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto6C5F37CA_ae = 2;
    auto6C5F37CA_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto6C5F37CA_ai >= 0 && lv_intA <= auto6C5F37CA_ae) || (auto6C5F37CA_ai <= 0 && lv_intA >= auto6C5F37CA_ae) ) ; lv_intA += auto6C5F37CA_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Ravager", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(18)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1539969346)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_left9_Init () {
    gt_wave_left9 = TriggerCreate("gt_wave_left9_Func");
    TriggerEnable(gt_wave_left9, false);
    TriggerAddEventTimePeriodic(gt_wave_left9, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_right 9
//--------------------------------------------------------------------------------------------------
bool gt_wave_right9_Func (bool testConds, bool runActions) {
    int autoB434A2AE_ae;
    int autoB434A2AE_ai;
    int autoA1B446A9_ae;
    int autoA1B446A9_ai;
    int autoF4E8CFF1_ae;
    int autoF4E8CFF1_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoB434A2AE_ae = 2;
    autoB434A2AE_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoB434A2AE_ai >= 0 && lv_intA <= autoB434A2AE_ae) || (autoB434A2AE_ai <= 0 && lv_intA >= autoB434A2AE_ae) ) ; lv_intA += autoB434A2AE_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoA1B446A9_ae = 8;
    autoA1B446A9_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoA1B446A9_ai >= 0 && lv_intA <= autoA1B446A9_ae) || (autoA1B446A9_ai <= 0 && lv_intA >= autoA1B446A9_ae) ) ; lv_intA += autoA1B446A9_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoF4E8CFF1_ae = 2;
    autoF4E8CFF1_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoF4E8CFF1_ai >= 0 && lv_intA <= autoF4E8CFF1_ae) || (autoF4E8CFF1_ai <= 0 && lv_intA >= autoF4E8CFF1_ae) ) ; lv_intA += autoF4E8CFF1_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Ravager", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(19)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1159623004)), c_orderQueueReplace);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueAddToEnd);
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_right9_Init () {
    gt_wave_right9 = TriggerCreate("gt_wave_right9_Func");
    TriggerEnable(gt_wave_right9, false);
    TriggerAddEventTimePeriodic(gt_wave_right9, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 9
//--------------------------------------------------------------------------------------------------
bool gt_wave_front9_Func (bool testConds, bool runActions) {
    int auto408B180E_ae;
    int auto408B180E_ai;
    int auto5616E507_ae;
    int auto5616E507_ai;
    int auto1FA2B0A7_ae;
    int auto1FA2B0A7_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto408B180E_ae = 2;
    auto408B180E_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto408B180E_ai >= 0 && lv_intA <= auto408B180E_ae) || (auto408B180E_ai <= 0 && lv_intA >= auto408B180E_ae) ) ; lv_intA += auto408B180E_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto5616E507_ae = 8;
    auto5616E507_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto5616E507_ai >= 0 && lv_intA <= auto5616E507_ae) || (auto5616E507_ai <= 0 && lv_intA >= auto5616E507_ae) ) ; lv_intA += auto5616E507_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto1FA2B0A7_ae = 2;
    auto1FA2B0A7_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto1FA2B0A7_ai >= 0 && lv_intA <= auto1FA2B0A7_ae) || (auto1FA2B0A7_ai <= 0 && lv_intA >= auto1FA2B0A7_ae) ) ; lv_intA += auto1FA2B0A7_ai ) {
        if ((RandomInt(1, 100) > 15)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "RoachVile", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "Ravager", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front9_Init () {
    gt_wave_front9 = TriggerCreate("gt_wave_front9_Func");
    TriggerEnable(gt_wave_front9, false);
    TriggerAddEventTimePeriodic(gt_wave_front9, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 10
//--------------------------------------------------------------------------------------------------
bool gt_wave_front10_Func (bool testConds, bool runActions) {
    int auto794463F4_ae;
    int auto794463F4_ai;
    int auto8BA57AFE_ae;
    int auto8BA57AFE_ai;
    int auto80033297_ae;
    int auto80033297_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto794463F4_ae = 3;
    auto794463F4_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto794463F4_ai >= 0 && lv_intA <= auto794463F4_ae) || (auto794463F4_ai <= 0 && lv_intA >= auto794463F4_ae) ) ; lv_intA += auto794463F4_ai ) {
        if ((RandomInt(1, 100) > 25)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "HotSNoxious", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto8BA57AFE_ae = 3;
    auto8BA57AFE_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto8BA57AFE_ai >= 0 && lv_intA <= auto8BA57AFE_ae) || (auto8BA57AFE_ai <= 0 && lv_intA >= auto8BA57AFE_ae) ) ; lv_intA += auto8BA57AFE_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Queen", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto80033297_ae = 4;
    auto80033297_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto80033297_ai >= 0 && lv_intA <= auto80033297_ae) || (auto80033297_ai <= 0 && lv_intA >= auto80033297_ae) ) ; lv_intA += auto80033297_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Pygalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front10_Init () {
    gt_wave_front10 = TriggerCreate("gt_wave_front10_Func");
    TriggerEnable(gt_wave_front10, false);
    TriggerAddEventTimePeriodic(gt_wave_front10, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: wave_front 11
//--------------------------------------------------------------------------------------------------
bool gt_wave_front11_Func (bool testConds, bool runActions) {
    int auto421D78FD_ae;
    int auto421D78FD_ai;
    int autoC41A556A_ae;
    int autoC41A556A_ai;
    int auto3D538777_ae;
    int auto3D538777_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto421D78FD_ae = 8;
    auto421D78FD_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto421D78FD_ai >= 0 && lv_intA <= auto421D78FD_ae) || (auto421D78FD_ai <= 0 && lv_intA >= auto421D78FD_ae) ) ; lv_intA += auto421D78FD_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    autoC41A556A_ae = 8;
    autoC41A556A_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoC41A556A_ai >= 0 && lv_intA <= autoC41A556A_ae) || (autoC41A556A_ai <= 0 && lv_intA >= autoC41A556A_ae) ) ; lv_intA += autoC41A556A_ai ) {
        if ((RandomInt(1, 100) > 25)) {
            libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(1, "GuardianMP", 0, gv_pLAYER_03_ENEMY, PointFromId(1100098587), UnitGetPosition(UnitFromId(188)));
        }
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    auto3D538777_ae = 30;
    auto3D538777_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto3D538777_ai >= 0 && lv_intA <= auto3D538777_ae) || (auto3D538777_ai <= 0 && lv_intA >= auto3D538777_ae) ) ; lv_intA += auto3D538777_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    libNtve_gf_UnitCreateFacingPoint(1, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1534768987), UnitGetPosition(UnitFromId(188)));
    UnitGroupAdd(lv_attackForce, UnitLastCreated());
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_wave_front11_Init () {
    gt_wave_front11 = TriggerCreate("gt_wave_front11_Func");
    TriggerEnable(gt_wave_front11, false);
    TriggerAddEventTimePeriodic(gt_wave_front11, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss_dead
//--------------------------------------------------------------------------------------------------
bool gt_Boss_dead_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_RetreatOn, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Boss_dead_Init () {
    gt_Boss_dead = TriggerCreate("gt_Boss_dead_Func");
    TriggerAddEventUnitDied(gt_Boss_dead, UnitRefFromVariable("gv_boss_Spotter"));
    TriggerAddEventUnitDied(gt_Boss_dead, UnitRefFromVariable("gv_boss_Kraith"));
    TriggerAddEventUnitDied(gt_Boss_dead, UnitRefFromVariable("gv_boss_Brakk"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_gen
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_gen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(704225947), true);
    UnitIssueOrder(gv_boss_Kraith, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1551709137)), c_orderQueueReplace);
    TriggerEnable(gt_Kraith_Target_Search, true);
    TriggerEnable(gt_Kraith_Target_move, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_gen_Init () {
    gt_Kraith_gen = TriggerCreate("gt_Kraith_gen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_Target_Search
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_Target_Search_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_group;
    unit lv_target;

    // Variable Initialization
    lv_group = libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", gv_aiur, c_unitAllianceAlly, RegionCircle(UnitGetPosition(gv_boss_Kraith), 34.0), UnitFilter(0, 0, (1 << c_targetFilterMissile) | (1 << c_targetFilterCloaked), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    lv_target = UnitGroupClosestToPoint(lv_group, UnitGetPosition(gv_boss_Kraith));

    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(lv_group, c_unitCountAlive) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_target_Kraith = lv_target;
    UnitIssueOrder(gv_boss_Kraith, OrderTargetingUnit(AbilityCommand("attack", 0), gv_target_Kraith), c_orderQueueReplace);
    TriggerEnable(gt_Kraith_Target_Search, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_Target_Search_Init () {
    gt_Kraith_Target_Search = TriggerCreate("gt_Kraith_Target_Search_Func");
    TriggerEnable(gt_Kraith_Target_Search, false);
    TriggerAddEventTimePeriodic(gt_Kraith_Target_Search, 0.05, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_Target_dead
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_Target_dead_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_boss_Kraith, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1551709137)), c_orderQueueReplace);
    TriggerEnable(gt_Kraith_Target_Search, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_Target_dead_Init () {
    gt_Kraith_Target_dead = TriggerCreate("gt_Kraith_Target_dead_Func");
    TriggerAddEventUnitDied(gt_Kraith_Target_dead, UnitRefFromVariable("gv_target_Kraith"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_Target_move
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_Target_move_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_boss_Kraith, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1551709137)), c_orderQueueReplace);
    TriggerEnable(gt_Kraith_Target_Search, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_Target_move_Init () {
    gt_Kraith_Target_move = TriggerCreate("gt_Kraith_Target_move_Func");
    TriggerEnable(gt_Kraith_Target_move, false);
    TriggerAddEventTimePeriodic(gt_Kraith_Target_move, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_dead
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_dead_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Kraith_Target_Search, false);
    TriggerEnable(gt_Kraith_Target_move, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_dead_Init () {
    gt_Kraith_dead = TriggerCreate("gt_Kraith_dead_Func");
    TriggerAddEventUnitDied(gt_Kraith_dead, UnitRefFromVariable("gv_boss_Kraith"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kraith_Target_Run
//--------------------------------------------------------------------------------------------------
bool gt_Kraith_Target_Run_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_boss_Kraith, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1551709137)), c_orderQueueReplace);
    TriggerEnable(gt_Kraith_Target_Search, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kraith_Target_Run_Init () {
    gt_Kraith_Target_Run = TriggerCreate("gt_Kraith_Target_Run_Func");
    TriggerEnable(gt_Kraith_Target_Run, false);
    TriggerAddEventUnitRange(gt_Kraith_Target_Run, UnitRefFromVariable("gv_target_Kraith"), UnitFromId(704225947), 37.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Brakk_gen
//--------------------------------------------------------------------------------------------------
bool gt_Brakk_gen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Brakk", 0, gv_pLAYER_03_ENEMY, PointFromId(1585489467), UnitGetPosition(UnitFromId(349)));
    gv_boss_Brakk = UnitLastCreated();
    if ((UnitGroupCount(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", gv_aiur, -1, RegionCircle(PointFromId(2062624615), 15.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) >= 20)) {
        UnitIssueOrder(gv_boss_Brakk, OrderTargetingPoint(AbilityCommand("KraithCrashingCharge", 0), RegionRandomPoint(RegionCircle(PointFromId(466517782), 4.0))), c_orderQueueReplace);
        UnitIssueOrder(gv_boss_Brakk, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    else {
        UnitIssueOrder(gv_boss_Brakk, OrderTargetingPoint(AbilityCommand("KraithCrashingCharge", 0), RegionRandomPoint(RegionCircle(PointFromId(740136115), 4.0))), c_orderQueueReplace);
        UnitIssueOrder(gv_boss_Brakk, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Brakk_gen_Init () {
    gt_Brakk_gen = TriggerCreate("gt_Brakk_gen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spotter_gen
//--------------------------------------------------------------------------------------------------
bool gt_Spotter_gen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((RandomInt(1, 100) > 50)) {
        libNtve_gf_UnitCreateFacingPoint(1, "Spotter", 0, gv_pLAYER_03_ENEMY, PointFromId(1425450832), UnitGetPosition(UnitFromId(349)));
    }
    else {
        libNtve_gf_UnitCreateFacingPoint(1, "Spotter", 0, gv_pLAYER_03_ENEMY, PointFromId(1298361192), UnitGetPosition(UnitFromId(349)));
    }
    gv_boss_Spotter = UnitLastCreated();
    UnitIssueOrder(gv_boss_Spotter, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1551709137)), c_orderQueueReplace);
    TriggerEnable(gt_Spotter_move, true);
    TriggerEnable(gt_Spotter_Zerg_Drop, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Spotter_gen_Init () {
    gt_Spotter_gen = TriggerCreate("gt_Spotter_gen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spotter_Zerg_Drop
//--------------------------------------------------------------------------------------------------
bool gt_Spotter_Zerg_Drop_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_roll;
    int lv_intA;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_roll = RandomInt(0, 4);
    if ((lv_roll == 0) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
        lv_intA = RandomInt(2, 4);
        libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSHunter", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
    }
    else {
        if ((lv_roll == 1) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
            lv_intA = RandomInt(2, 4);
            libNtve_gf_UnitCreateFacingPoint(lv_intA, "Roach", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
        }
        else {
            if ((lv_roll == 2) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
                lv_intA = RandomInt(4, 6);
                libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
            }
            else {
                if ((lv_roll == 3) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
                    lv_intA = RandomInt(3, 5);
                    libNtve_gf_UnitCreateFacingPoint(lv_intA, "ScourgeMP", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
                }
                else {
                    if ((lv_roll == 4) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
                        lv_intA = RandomInt(2, 4);
                        libNtve_gf_UnitCreateFacingPoint(lv_intA, "HunterKiller", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
                    }
                    else {
                        if ((lv_roll == 5) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
                            lv_intA = RandomInt(2, 4);
                            libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSHunter", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
                        }
                        else {
                            if ((lv_roll == 6) && (CliffLevel(UnitGetPosition(gv_boss_Spotter)) != 0)) {
                                lv_intA = RandomInt(2, 4);
                                libNtve_gf_UnitCreateFacingPoint(lv_intA, "Roach", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
                            }
                            else {
                                lv_intA = RandomInt(2, 4);
                                libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSHunter", 0, gv_pLAYER_03_ENEMY, UnitGetPosition(gv_boss_Spotter), UnitGetPosition(UnitFromId(349)));
                            }
                        }
                    }
                }
            }
        }
    }
    gv_randomSec_Spotter = RandomInt(2, 4);
    if ((lv_roll == 3)) {
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", gv_pLAYER_03_ENEMY, c_unitAllianceEnemy, RegionCircle(UnitGetPosition(gv_boss_Spotter), 30.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive)), c_orderQueueReplace);
    }
    else {
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Spotter_Zerg_Drop_Init () {
    gt_Spotter_Zerg_Drop = TriggerCreate("gt_Spotter_Zerg_Drop_Func");
    TriggerEnable(gt_Spotter_Zerg_Drop, false);
    TriggerAddEventTimePeriodic(gt_Spotter_Zerg_Drop, IntToFixed(gv_randomSec_Spotter), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spotter_move
//--------------------------------------------------------------------------------------------------
bool gt_Spotter_move_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_boss_Spotter, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(17))), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_boss_Spotter, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(17))), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_boss_Spotter, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(17))), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Spotter_move_Init () {
    gt_Spotter_move = TriggerCreate("gt_Spotter_move_Func");
    TriggerEnable(gt_Spotter_move, false);
    TriggerAddEventTimePeriodic(gt_Spotter_move, 6.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spotter_dead
//--------------------------------------------------------------------------------------------------
bool gt_Spotter_dead_Func (bool testConds, bool runActions) {
    unitgroup auto63975A6A_g;
    int auto63975A6A_u;

    // Variable Declarations
    point lv_loc;
    unit lv_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Spotter_move, false);
    TriggerEnable(gt_Spotter_Zerg_Drop, false);
    TriggerEnable(gt_UrunSquad_Patrol, true);
    if ((UnitIsAlive(UnitFromId(1905587400)) == true) && (UnitIsAlive(UnitFromId(717216778)) == true)) {
        lv_loc = PointFromId(2062624615);
    }
    else {
        lv_loc = PointFromId(740136115);
    }
    Wait(5.0, c_timeGame);
    auto63975A6A_g = gv_squad_Urun;
    auto63975A6A_u = 1;
    for ( ; auto63975A6A_u <= UnitGroupCount(auto63975A6A_g, c_unitCountAll) ; auto63975A6A_u += BoolToInt(lv_u == UnitGroupUnit(auto63975A6A_g, auto63975A6A_u)) ) {
        lv_u = UnitGroupUnit(auto63975A6A_g, auto63975A6A_u);
        UnitIssueOrder(lv_u, OrderTargetingPoint(AbilityCommand("attack", 0), lv_loc), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Spotter_dead_Init () {
    gt_Spotter_dead = TriggerCreate("gt_Spotter_dead_Func");
    TriggerAddEventUnitDied(gt_Spotter_dead, UnitRefFromVariable("gv_boss_Spotter"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spotter_targetting by urun
//--------------------------------------------------------------------------------------------------
bool gt_Spotter_targettingbyurun_Func (bool testConds, bool runActions) {
    unitgroup autoDB71FF78_g;
    int autoDB71FF78_u;

    // Variable Declarations
    unit lv_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Spotter_targettingbyurun, false);
    TriggerEnable(gt_UrunSquad_Patrol, false);
    autoDB71FF78_g = gv_squad_Urun;
    autoDB71FF78_u = 1;
    for ( ; autoDB71FF78_u <= UnitGroupCount(autoDB71FF78_g, c_unitCountAll) ; autoDB71FF78_u += BoolToInt(lv_u == UnitGroupUnit(autoDB71FF78_g, autoDB71FF78_u)) ) {
        lv_u = UnitGroupUnit(autoDB71FF78_g, autoDB71FF78_u);
        UnitIssueOrder(lv_u, OrderTargetingUnit(AbilityCommand("attack", 0), gv_boss_Spotter), c_orderQueueReplace);
        UnitIssueOrder(lv_u, OrderTargetingUnit(AbilityCommand("attack", 0), gv_boss_Spotter), c_orderQueueAddToEnd);
        UnitIssueOrder(lv_u, OrderTargetingUnit(AbilityCommand("attack", 0), gv_boss_Spotter), c_orderQueueAddToEnd);
        UnitIssueOrder(lv_u, OrderTargetingUnit(AbilityCommand("attack", 0), gv_boss_Spotter), c_orderQueueAddToEnd);
    }
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "UrunPortrait", StringExternal("Param/Value/CFDC4379"), StringExternal("Param/Value/500854D2"), 3.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Spotter_targettingbyurun_Init () {
    gt_Spotter_targettingbyurun = TriggerCreate("gt_Spotter_targettingbyurun_Func");
    TriggerAddEventUnitRegion(gt_Spotter_targettingbyurun, UnitRefFromVariable("gv_boss_Spotter"), RegionFromId(17), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Omega_gen
//--------------------------------------------------------------------------------------------------
bool gt_Omega_gen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Omegalisk", 0, gv_pLAYER_03_ENEMY, PointFromId(1534768987), UnitGetPosition(UnitFromId(349)));
    gv_boss_Omega = UnitLastCreated();
    UnitIssueOrder(gv_boss_Omega, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Omega_gen_Init () {
    gt_Omega_gen = TriggerCreate("gt_Omega_gen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Omega_dead
//--------------------------------------------------------------------------------------------------
bool gt_Omega_dead_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Timerexpired, false);
    TriggerExecute(gt_Timerexpired, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Omega_dead_Init () {
    gt_Omega_dead = TriggerCreate("gt_Omega_dead_Func");
    TriggerAddEventUnitDied(gt_Omega_dead, UnitRefFromVariable("gv_boss_Omega"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Generator
//--------------------------------------------------------------------------------------------------
bool gt_SP_Generator_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_roll;

    // Variable Initialization
    lv_roll = RandomInt(0, 11);

    // Actions
    if (!runActions) {
        return true;
    }

    gv_sP_Random_int = RandomInt(20, 60);
    if ((lv_roll == 0)) {
        TriggerExecute(gt_SP_Guardiangen, true, false);
    }
    else {
        if ((lv_roll == 1)) {
            TriggerExecute(gt_SP_Hunterlinggen, true, false);
        }
        else {
            if ((lv_roll == 2)) {
                TriggerExecute(gt_SP_Mutaliskgen, true, false);
            }
            else {
                if ((lv_roll == 3)) {
                    TriggerExecute(gt_SP_Mutaliskonlynexus, true, false);
                }
                else {
                    if ((lv_roll == 4)) {
                        TriggerExecute(gt_SP_ZerglingGlobalgen, true, false);
                    }
                    else {
                        if ((lv_roll == 5)) {
                            TriggerExecute(gt_SP_HotSHuntergen, true, false);
                        }
                        else {
                            if ((lv_roll == 6)) {
                                TriggerExecute(gt_SP_Hunterlinggen, true, false);
                            }
                            else {
                                if ((lv_roll == 7)) {
                                    TriggerExecute(gt_SP_ZerglingGlobalgen, true, false);
                                }
                                else {
                                    if ((lv_roll == 8)) {
                                        TriggerExecute(gt_SP_NydusAttackergen, true, false);
                                    }
                                    else {
                                        if ((lv_roll == 9)) {
                                            TriggerExecute(gt_SP_DropZerg, true, false);
                                        }
                                        else {
                                            if ((lv_roll == 10)) {
                                                TriggerExecute(gt_SP_DropZerg2, true, false);
                                            }
                                            else {
                                                if ((lv_roll == 11)) {
                                                    TriggerExecute(gt_SP_BroodLordGen, true, false);
                                                }

                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Generator_Init () {
    gt_SP_Generator = TriggerCreate("gt_SP_Generator_Func");
    TriggerEnable(gt_SP_Generator, false);
    TriggerAddEventTimePeriodic(gt_SP_Generator, IntToFixed(gv_sP_Random_int), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Mutalisk gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_Mutaliskgen_Func (bool testConds, bool runActions) {
    int auto4A06C7C7_ae;
    int auto4A06C7C7_ai;
    int autoE49B5801_ae;
    int autoE49B5801_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_int_Amount_impaler <= 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto4A06C7C7_ae = 12;
    auto4A06C7C7_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto4A06C7C7_ai >= 0 && lv_intA <= auto4A06C7C7_ae) || (auto4A06C7C7_ai <= 0 && lv_intA >= auto4A06C7C7_ae) ) ; lv_intA += auto4A06C7C7_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(15)), UnitGetPosition(UnitFromId(188)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    }
    autoE49B5801_ae = 24;
    autoE49B5801_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoE49B5801_ai >= 0 && lv_intA <= autoE49B5801_ae) || (autoE49B5801_ai <= 0 && lv_intA >= autoE49B5801_ae) ) ; lv_intA += autoE49B5801_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(12)), UnitGetPosition(UnitFromId(188)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Mutaliskgen_Init () {
    gt_SP_Mutaliskgen = TriggerCreate("gt_SP_Mutaliskgen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Mutalisk only nexus
//--------------------------------------------------------------------------------------------------
bool gt_SP_Mutaliskonlynexus_Func (bool testConds, bool runActions) {
    int auto930BACDD_ae;
    int auto930BACDD_ai;
    int auto3A2D7493_ae;
    int auto3A2D7493_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_int_Amount_impaler <= 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto930BACDD_ae = 2;
    auto930BACDD_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto930BACDD_ai >= 0 && lv_intA <= auto930BACDD_ae) || (auto930BACDD_ai <= 0 && lv_intA >= auto930BACDD_ae) ) ; lv_intA += auto930BACDD_ai ) {
        libNtve_gf_UnitCreateFacingPoint(12, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(15)), UnitGetPosition(UnitFromId(188)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(1411453183)), c_orderQueueReplace);
    }
    auto3A2D7493_ae = 2;
    auto3A2D7493_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto3A2D7493_ai >= 0 && lv_intA <= auto3A2D7493_ae) || (auto3A2D7493_ai <= 0 && lv_intA >= auto3A2D7493_ae) ) ; lv_intA += auto3A2D7493_ai ) {
        libNtve_gf_UnitCreateFacingPoint(12, "Mutalisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(12)), UnitGetPosition(UnitFromId(188)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(1411453183)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Mutaliskonlynexus_Init () {
    gt_SP_Mutaliskonlynexus = TriggerCreate("gt_SP_Mutaliskonlynexus_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Overseer gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_Overseergen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_loc;
    int lv_intB;

    // Variable Initialization
    lv_loc = RandomInt(1, 6);
    lv_intB = RandomInt(1, 3);

    // Conditions
    if (testConds) {
        if (!((UnitCount("OverseerSiegeMode", gv_pLAYER_03_ENEMY, RegionCircle(gv_loc_Hill[lv_loc], 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "OverseerSiegeMode", 0, gv_pLAYER_03_ENEMY, gv_loc_Hill[lv_loc], UnitGetPosition(UnitFromId(188)));
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), gv_loc_Hill[lv_loc]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Overseergen_Init () {
    gt_SP_Overseergen = TriggerCreate("gt_SP_Overseergen_Func");
    TriggerEnable(gt_SP_Overseergen, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_impaler gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_impalergen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Variable Initialization
    lv_intA = RandomInt(1, 6);
    lv_intB = RandomInt(1, 3);

    // Conditions
    if (testConds) {
        if (!((gv_int_Amount_impaler <= 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(lv_intB, "ImpalerBurrowed", 0, gv_pLAYER_03_ENEMY, gv_loc_Hill[lv_intA], UnitGetPosition(UnitFromId(188)));
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), gv_loc_Hill[lv_intA]);
    gv_int_Amount_impaler = (gv_int_Amount_impaler + lv_intB);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_impalergen_Init () {
    gt_SP_impalergen = TriggerCreate("gt_SP_impalergen_Func");
    TriggerEnable(gt_SP_impalergen, false);
    TriggerAddEventTimePeriodic(gt_SP_impalergen, 90.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_impaler die
//--------------------------------------------------------------------------------------------------
bool gt_SP_impalerdie_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "ImpalerBurrowed"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_int_Amount_impaler = (gv_int_Amount_impaler - 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_impalerdie_Init () {
    gt_SP_impalerdie = TriggerCreate("gt_SP_impalerdie_Func");
    TriggerAddEventUnitDied(gt_SP_impalerdie, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Guardian gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_Guardiangen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Variable Initialization
    lv_intA = RandomInt(4, 6);
    lv_intB = RandomInt(1, 3);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_intB == 1)) {
        libNtve_gf_UnitCreateFacingPoint(lv_intA, "GuardianMP", 0, gv_pLAYER_03_ENEMY, PointFromId(1902952044), UnitGetPosition(UnitFromId(188)));
        libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1902952044));
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), gv_loc_Guardian[RandomInt(1, 2)]), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    else {
        if ((lv_intB == 2)) {
            libNtve_gf_UnitCreateFacingPoint(lv_intA, "GuardianMP", 0, gv_pLAYER_03_ENEMY, PointFromId(1100098587), UnitGetPosition(UnitFromId(188)));
            libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1100098587));
            UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), gv_loc_Guardian[RandomInt(3, 4)]), c_orderQueueReplace);
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(lv_intA, "GuardianMP", 0, gv_pLAYER_03_ENEMY, PointFromId(1909009508), UnitGetPosition(UnitFromId(188)));
            libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1909009508));
            UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), gv_loc_Guardian[5]), c_orderQueueReplace);
            UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Guardiangen_Init () {
    gt_SP_Guardiangen = TriggerCreate("gt_SP_Guardiangen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Hunterling gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_Hunterlinggen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Variable Initialization
    lv_intA = RandomInt(8, 16);
    lv_intB = RandomInt(1, 2);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_intB == 1)) {
        libNtve_gf_UnitCreateFacingPoint((lv_intA / 2), "Hunterling", 0, gv_pLAYER_03_ENEMY, PointFromId(107575343), UnitGetPosition(UnitFromId(349)));
        libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, PointFromId(107575343), UnitGetPosition(UnitFromId(349)));
        libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(107575343));
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1639753716)), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    else {
        libNtve_gf_UnitCreateFacingPoint((lv_intA / 2), "Hunterling", 0, gv_pLAYER_03_ENEMY, PointFromId(2059016882), UnitGetPosition(UnitFromId(349)));
        libNtve_gf_UnitCreateFacingPoint(lv_intA, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, PointFromId(2059016882), UnitGetPosition(UnitFromId(349)));
        libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(2059016882));
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1482638370)), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_Hunterlinggen_Init () {
    gt_SP_Hunterlinggen = TriggerCreate("gt_SP_Hunterlinggen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_Zergling Global gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_ZerglingGlobalgen_Func (bool testConds, bool runActions) {
    int auto222E84B9_ae;
    int auto222E84B9_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto222E84B9_ae = 2;
    auto222E84B9_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto222E84B9_ai >= 0 && lv_intA <= auto222E84B9_ae) || (auto222E84B9_ai <= 0 && lv_intA >= auto222E84B9_ae) ) ; lv_intA += auto222E84B9_ai ) {
        if ((RandomInt(0, 100) > 50)) {
            libNtve_gf_UnitCreateFacingPoint(10, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(15)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(10, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(12)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_ZerglingGlobalgen_Init () {
    gt_SP_ZerglingGlobalgen = TriggerCreate("gt_SP_ZerglingGlobalgen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_NydusAttacker gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_NydusAttackergen_Func (bool testConds, bool runActions) {
    int autoEE7F8718_ae;
    int autoEE7F8718_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoEE7F8718_ae = 2;
    autoEE7F8718_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoEE7F8718_ai >= 0 && lv_intA <= autoEE7F8718_ae) || (autoEE7F8718_ai <= 0 && lv_intA >= autoEE7F8718_ae) ) ; lv_intA += autoEE7F8718_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "NydusCanalAttacker", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(7)), UnitGetPosition(UnitFromId(349)));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_NydusAttackergen_Init () {
    gt_SP_NydusAttackergen = TriggerCreate("gt_SP_NydusAttackergen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_DropZerg
//--------------------------------------------------------------------------------------------------
bool gt_SP_DropZerg_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    unitgroup lv_attackForce;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(6, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, PointFromId(107575343), UnitGetPosition(UnitFromId(349)));
    lv_attackForce = UnitLastCreatedGroup();
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, RegionRandomPoint(RegionFromId(7)));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_DropZerg_Init () {
    gt_SP_DropZerg = TriggerCreate("gt_SP_DropZerg_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_DropZerg 2
//--------------------------------------------------------------------------------------------------
bool gt_SP_DropZerg2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intA;
    unitgroup lv_attackForce;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(12, "Baneling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
    lv_attackForce = UnitLastCreatedGroup();
    libCOMI_gf_DropPodWarpInUnitGroup(lv_attackForce, RegionRandomPoint(RegionFromId(7)));
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_DropZerg2_Init () {
    gt_SP_DropZerg2 = TriggerCreate("gt_SP_DropZerg2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_BroodLord Gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_BroodLordGen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_intB;

    // Variable Initialization
    lv_intB = RandomInt(1, 2);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_intB == 1)) {
        libNtve_gf_UnitCreateFacingPoint(2, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1902952044), UnitGetPosition(UnitFromId(188)));
        libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1902952044));
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), gv_loc_Guardian[RandomInt(1, 2)]), c_orderQueueReplace);
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueAddToEnd);
    }
    else {
        libNtve_gf_UnitCreateFacingPoint(2, "BroodLord", 0, gv_pLAYER_03_ENEMY, PointFromId(1100098587), UnitGetPosition(UnitFromId(188)));
        libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), PointFromId(1100098587));
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), gv_loc_Guardian[RandomInt(3, 4)]), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_BroodLordGen_Init () {
    gt_SP_BroodLordGen = TriggerCreate("gt_SP_BroodLordGen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SP_HotSHunter gen
//--------------------------------------------------------------------------------------------------
bool gt_SP_HotSHuntergen_Func (bool testConds, bool runActions) {
    int auto5D14FB42_ae;
    int auto5D14FB42_ai;

    // Variable Declarations
    int lv_intA;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto5D14FB42_ae = 1;
    auto5D14FB42_ai = 1;
    lv_intA = 1;
    for ( ; ( (auto5D14FB42_ai >= 0 && lv_intA <= auto5D14FB42_ae) || (auto5D14FB42_ai <= 0 && lv_intA >= auto5D14FB42_ae) ) ; lv_intA += auto5D14FB42_ai ) {
        if ((RandomInt(0, 100) > 50)) {
            libNtve_gf_UnitCreateFacingPoint(7, "HotSHunter", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(15)), UnitGetPosition(UnitFromId(349)));
        }
        else {
            libNtve_gf_UnitCreateFacingPoint(7, "HotSHunter", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(12)), UnitGetPosition(UnitFromId(349)));
        }
        UnitGroupIssueOrder(UnitLastCreatedGroup(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SP_HotSHuntergen_Init () {
    gt_SP_HotSHuntergen = TriggerCreate("gt_SP_HotSHuntergen_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 1
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "CentrificalHooks", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMeleeWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergGroundArmorsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryArmorLevel1", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE1_Init () {
    gt_UPGRADE1 = TriggerCreate("gt_UPGRADE1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 2
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergFlyerWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergFlyerWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergFlyerArmorsLevel1", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE2_Init () {
    gt_UPGRADE2 = TriggerCreate("gt_UPGRADE2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 3
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "zerglingmovementspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "zerglingattackspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMeleeWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergGroundArmorsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryArmorLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIZergMissileWeaponsLevel1", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMissileWeaponsLevel1", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE3_Init () {
    gt_UPGRADE3 = TriggerCreate("gt_UPGRADE3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 4
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "overlordspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "overlordtransport", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "zerglingattackspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIZergMissileWeaponsLevel2", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMissileWeaponsLevel2", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE4_Init () {
    gt_UPGRADE4 = TriggerCreate("gt_UPGRADE4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 5
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryWeaponsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMeleeWeaponsLevel3", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE5_Init () {
    gt_UPGRADE5 = TriggerCreate("gt_UPGRADE5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 6
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergFlyerWeaponsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIZergMissileWeaponsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergMissileWeaponsLevel3", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE6_Init () {
    gt_UPGRADE6 = TriggerCreate("gt_UPGRADE6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPGRADE 7
//--------------------------------------------------------------------------------------------------
bool gt_UPGRADE7_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergGroundArmorsLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "SIInfantryArmorLevel3", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ENEMY, "ZergFlyerArmorsLevel3", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPGRADE7_Init () {
    gt_UPGRADE7 = TriggerCreate("gt_UPGRADE7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Game Q
//--------------------------------------------------------------------------------------------------
bool gt_StartGameQ_Func (bool testConds, bool runActions) {
    // Variable Declarations
    region lv_enemyBase;
    region lv_enemyBase2;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UIAlertPoint("Trigger", gv_pLAYER_01_USER, StringExternal("Param/Value/068743D5"), null, PlayerStartLocation(gv_pLAYER_01_USER));
    UIAlertPoint("Trigger", gv_pLAYER_02_USER, StringExternal("Param/Value/187E0E6E"), null, PlayerStartLocation(gv_pLAYER_02_USER));
    Wait(7.0, c_timeReal);
    TriggerQueueEnter();
    Wait(2.0, c_timeGame);
    libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Speech);
    MinimapPing(PlayerGroupAll(), PointFromId(1551709137), 4.0, Color(100.00, 100.00, 0.00));
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/CA9981F1"), StringExternal("Param/Value/E48867D9"), 8.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_SetAllSoundChannelVolumesCampaign(libCOMI_ge_VolumeChannelModeCampaign_Game);
    ObjectiveCreate(StringExternal("Param/Value/1AB8EAAD"), StringToText(""), c_objectiveStateActive, true);
    TimerStart(gv_timer, (60.0 * 27.0), false, c_timeGame);
    TimerWindowCreate(gv_timer, StringExternal("Param/Value/7F2D66B9"), true, false);
    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(323658955)), 6.0, Color(100.00, 100.00, 0.00));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitFromId(1022329860)), 6.0, Color(100.00, 100.00, 0.00));
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/BB817855"), StringExternal("Param/Value/4CF6612B"), 6.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartGameQ_Init () {
    gt_StartGameQ = TriggerCreate("gt_StartGameQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Main GateWay Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_MainGateWayDestroyed_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Timerexpired, false);
    CameraApplyInfo(1, CameraInfoFromId(595917252), 2.0, -1, 10.0, true);
    CameraApplyInfo(2, CameraInfoFromId(595917252), 2.0, -1, 10.0, true);
    Wait(4.0, c_timeGame);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), null, StringExternal("Param/Value/F20D6D01"), StringExternal("Param/Value/4C01BE43"), 5.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_EndCampaignMission(c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MainGateWayDestroyed_Init () {
    gt_MainGateWayDestroyed = TriggerCreate("gt_MainGateWayDestroyed_Func");
    TriggerAddEventUnitDied(gt_MainGateWayDestroyed, UnitRefFromUnit(UnitFromId(1411453183)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Timer expired
//--------------------------------------------------------------------------------------------------
bool gt_Timerexpired_Func (bool testConds, bool runActions) {
    int autoEB453D9B_ae;
    int autoEB453D9B_ai;

    // Variable Declarations
    unitgroup lv_attackForce;
    int lv_intA;

    // Variable Initialization
    lv_attackForce = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoEB453D9B_ae = 90;
    autoEB453D9B_ai = 1;
    lv_intA = 1;
    for ( ; ( (autoEB453D9B_ai >= 0 && lv_intA <= autoEB453D9B_ae) || (autoEB453D9B_ai <= 0 && lv_intA >= autoEB453D9B_ae) ) ; lv_intA += autoEB453D9B_ai ) {
        libNtve_gf_UnitCreateFacingPoint(1, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(16)), UnitGetPosition(UnitFromId(349)));
        UnitGroupAdd(lv_attackForce, UnitLastCreated());
        Wait(0.001, c_timeGame);
    }
    UnitGroupIssueOrder(lv_attackForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1551709137)), c_orderQueueReplace);
    Wait(5.0, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(344036486), 2.0, -1, 10.0, true);
    CameraApplyInfo(2, CameraInfoFromId(344036486), 2.0, -1, 10.0, true);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    TriggerExecute(gt_Aiurlast, true, false);
    Wait(0.001, c_timeGame);
    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), null, StringExternal("Param/Value/A496AB42"), StringExternal("Param/Value/2C02E1C3"), 8.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCOMI_gf_EndCampaignMission(c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Timerexpired_Init () {
    gt_Timerexpired = TriggerCreate("gt_Timerexpired_Func");
    TriggerAddEventTimer(gt_Timerexpired, gv_timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Aiur last
//--------------------------------------------------------------------------------------------------
bool gt_Aiurlast_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eCA09CEBAAA9EC9786EB8A94EBB380EC8898001;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(2, "Carrier", 0, gv_aiur, RegionRandomPoint(RegionFromId(6)), PointFromId(1585489467));
    libCOMI_gf_DropPodWarpInUnitGroup(UnitLastCreatedGroup(), RegionRandomPoint(RegionFromId(17)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Aiurlast_Init () {
    gt_Aiurlast = TriggerCreate("gt_Aiurlast_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: mis
//--------------------------------------------------------------------------------------------------
bool gt_mis_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(944085571), false);
    libNtve_gf_ShowHideUnit(UnitFromId(414912979), false);
    libNtve_gf_ShowHideUnit(UnitFromId(2014443591), false);
    libNtve_gf_ShowHideUnit(UnitFromId(804124263), false);
    libNtve_gf_ShowHideUnit(UnitFromId(573747619), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1772402257), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1093675002), false);
    libNtve_gf_ShowHideUnit(UnitFromId(249940122), false);
    libNtve_gf_ShowHideUnit(UnitFromId(365882658), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1658038927), false);
    libNtve_gf_ShowHideUnit(UnitFromId(904327550), false);
    libNtve_gf_ShowHideUnit(UnitFromId(341765560), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_mis_Init () {
    gt_mis = TriggerCreate("gt_mis_Func");
    TriggerAddEventMapInit(gt_mis);
}

//--------------------------------------------------------------------------------------------------
// Trigger: mis 3
//--------------------------------------------------------------------------------------------------
bool gt_mis3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libCOMI_gf_SendTransmissionCampaignPlaceHolder(UnitFromId(349), "ArtanisPortrait", StringExternal("Param/Value/8F415C18"), StringExternal("Param/Value/51DD7961"), 8.0, true, libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter, libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior);
    MinimapPing(PlayerGroupAll(), PointFromId(192657022), 6.0, Color(100.00, 100.00, 0.00));
    libNtve_gf_UnitCreateFacingPoint(10, "HotSRaptor", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "LurkerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "LurkerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "LurkerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "LurkerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "ImpalerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(188)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "ImpalerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(188)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "ImpalerBurrowed", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(188)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Hunterling", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "HotSNoxious", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "GuardianMP", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(188)));
    Wait(0.001, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Roach", 0, gv_pLAYER_03_ENEMY, RegionRandomPoint(RegionFromId(9)), UnitGetPosition(UnitFromId(349)));
    Wait(0.001, c_timeGame);
    libNtve_gf_ShowHideUnit(UnitFromId(944085571), true);
    libNtve_gf_ShowHideUnit(UnitFromId(414912979), true);
    libNtve_gf_ShowHideUnit(UnitFromId(2014443591), true);
    libNtve_gf_ShowHideUnit(UnitFromId(804124263), true);
    libNtve_gf_ShowHideUnit(UnitFromId(573747619), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1772402257), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1093675002), true);
    libNtve_gf_ShowHideUnit(UnitFromId(249940122), true);
    libNtve_gf_ShowHideUnit(UnitFromId(365882658), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1658038927), true);
    libNtve_gf_ShowHideUnit(UnitFromId(904327550), true);
    libNtve_gf_ShowHideUnit(UnitFromId(341765560), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_mis3_Init () {
    gt_mis3 = TriggerCreate("gt_mis3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Init01LoadData_Init();
    gt_Init02Players_Init();
    gt_Init03LoadingComplete_Init();
    gt_Init04Technology_Init();
    gt_Init05Units_Init();
    gt_Init06MusicSound_Init();
    gt_Init07Environment_Init();
    gt_Init08Difficulties_Init();
    gt_DebugCantFail_Init();
    gt_CreatecreepTumor_Init();
    gt_CreateTumorQueen_Init();
    gt_AiurUPGRADE1_Init();
    gt_AiurUPGRADE2_Init();
    gt_AiurUPGRADE3_Init();
    gt_AiurUPGRADE4_Init();
    gt_AiurUPGRADE5_Init();
    gt_AiurUPGRADE6_Init();
    gt_Reinf_left1_Init();
    gt_Reinf_right1_Init();
    gt_Reinf_front1_Init();
    gt_Reinf_left2_Init();
    gt_Reinf_right2_Init();
    gt_Reinf_front2_Init();
    gt_Reinf_front3boss1_Init();
    gt_Reinf_left4_Init();
    gt_Reinf_right4_Init();
    gt_Reinf_front4_Init();
    gt_Reinf_front5boss2_Init();
    gt_UrunSquad_Patrol_Init();
    gt_Reinf_left6_Init();
    gt_Reinf_right6_Init();
    gt_Reinf_front6_Init();
    gt_Reinf_frontlastboss_Init();
    gt_TemplarGen_Init();
    gt_Templardie_Init();
    gt_ArchonGenerate_Init();
    gt_ReinforcementTank_Init();
    gt_ReinforcementRanged_Init();
    gt_ReinforcementAir_Init();
    gt_Maingatedestruction_Init();
    gt_COOPATTACK_Init();
    gt_protossinit_Init();
    gt_TroopSet_Init();
    gt_TroopAddUnit_Init();
    gt_TroopAddUnit2_Init();
    gt_TroopAddUnit3_Init();
    gt_RetreatOff_Init();
    gt_RetreatOn_Init();
    gt_Rf_Init();
    gt_Rf2_Init();
    gt_Rf3_Init();
    gt_Zerginit_Init();
    gt_Fminer_Init();
    gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0003_Init();
    gt_ECA09CEBAAA9EC9786EB8A94ED8AB8EBA6ACEAB1B0001_Init();
    gt_WaveStarter_Init();
    gt_wave_left1_Init();
    gt_wave_right1_Init();
    gt_wave_front1_Init();
    gt_wave_left2_Init();
    gt_wave_right2_Init();
    gt_wave_front2_Init();
    gt_wave_left3_Init();
    gt_wave_right3_Init();
    gt_wave_front3_Init();
    gt_wave_Boss_front4_Init();
    gt_wave_left5_Init();
    gt_wave_right5_Init();
    gt_wave_front5_Init();
    gt_wave_Boss_front6_Init();
    gt_wave_LRF7_Init();
    gt_wave_left7_Init();
    gt_wave_right7_Init();
    gt_wave_front7_Init();
    gt_wave_left8_Init();
    gt_wave_right8_Init();
    gt_wave_front8_Init();
    gt_wave_LRF9_Init();
    gt_wave_left9_Init();
    gt_wave_right9_Init();
    gt_wave_front9_Init();
    gt_wave_front10_Init();
    gt_wave_front11_Init();
    gt_Boss_dead_Init();
    gt_Kraith_gen_Init();
    gt_Kraith_Target_Search_Init();
    gt_Kraith_Target_dead_Init();
    gt_Kraith_Target_move_Init();
    gt_Kraith_dead_Init();
    gt_Kraith_Target_Run_Init();
    gt_Brakk_gen_Init();
    gt_Spotter_gen_Init();
    gt_Spotter_Zerg_Drop_Init();
    gt_Spotter_move_Init();
    gt_Spotter_dead_Init();
    gt_Spotter_targettingbyurun_Init();
    gt_Omega_gen_Init();
    gt_Omega_dead_Init();
    gt_SP_Generator_Init();
    gt_SP_Mutaliskgen_Init();
    gt_SP_Mutaliskonlynexus_Init();
    gt_SP_Overseergen_Init();
    gt_SP_impalergen_Init();
    gt_SP_impalerdie_Init();
    gt_SP_Guardiangen_Init();
    gt_SP_Hunterlinggen_Init();
    gt_SP_ZerglingGlobalgen_Init();
    gt_SP_NydusAttackergen_Init();
    gt_SP_DropZerg_Init();
    gt_SP_DropZerg2_Init();
    gt_SP_BroodLordGen_Init();
    gt_SP_HotSHuntergen_Init();
    gt_UPGRADE1_Init();
    gt_UPGRADE2_Init();
    gt_UPGRADE3_Init();
    gt_UPGRADE4_Init();
    gt_UPGRADE5_Init();
    gt_UPGRADE6_Init();
    gt_UPGRADE7_Init();
    gt_StartGameQ_Init();
    gt_MainGateWayDestroyed_Init();
    gt_Timerexpired_Init();
    gt_Aiurlast_Init();
    gt_mis_Init();
    gt_mis3_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void run () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}

//--------------------------------------------------------------------------------------------------
// Custom Script Initialization
//--------------------------------------------------------------------------------------------------
void InitCustomScript () {
    run();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitCustomScript();
}
